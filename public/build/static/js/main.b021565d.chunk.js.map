{"version":3,"sources":["redux/user/type.js","redux/user/reducer.js","redux/vendor/type.js","redux/vendor/reducer.js","redux/service/type.js","redux/service/reducer.js","redux/booking/type.js","redux/booking/reducer.js","redux/store.js","components/GlobalStyles.js","mixins/chartjs.js","theme/shadows.js","theme/typography.js","theme/index.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/index.js","utils/setEmptyStr.js","utils/getInitials.js","components/ProfileName.js","views/customer/CustomerListView/Results.js","components/TableToolbar.js","views/customer/CustomerListView/index.js","redux/user/actions.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/index.js","icons/Facebook.js","icons/Google.js","views/auth/LoginView.js","views/errors/NotFoundView.js","utils/trimStr.js","constrants.js","components/Image.js","utils/setDate.js","views/service/Results.js","redux/service/actions.js","components/ToolTipButton.js","views/service/Dialog.js","views/service/index.js","utils/alert.js","components/Chip.js","views/Booking/Results.js","redux/booking/actions.js","views/Booking/Dialog.js","views/Booking/StaffDialog.js","views/Booking/index.js","views/auth/RegisterView.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","views/vendor/Results.js","views/vendor/index.js","redux/vendor/actions.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["GET_USERS","initialState","data","userReducer","state","type","payload","GET_VENDOR","vendorReducer","GET_SERVICE","OPEN_SERVICE_DIALOG","CLOSE_SERVICE_DIALOG","dialogId","isDialogOpen","serviceReducer","GET_BOOKING","OPEN_BOOKING_DIALOG","CLOSE_BOOKING_DIALOG","OPEN_STAFF_ASSIGN_DIALOG","CLOSE_STAFF_ASSIGN_DIALOG","ASSIGN_STAFF","isBookingDialogOpen","bookingId","vendorId","bookingReducer","console","log","map","item","_id","profession","bookingData","staffId","middleware","thunk","reducers","combineReducers","user","vendor","service","booking","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","overrides","MuiTableCell","root","textAlign","head","MuiTooltip","tooltip","color","maxWidth","border","arrow","props","MuiIcon","MuiButton","display","paddingTop","paddingBottom","button","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","items","BarChartIcon","UsersIcon","ShoppingBagIcon","BookingIcon","UserIcon","SettingsIcon","LockIcon","UserPlusIcon","AlertCircleIcon","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","location","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","variant","Divider","List","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","alt","TopBar","onMobileNavOpen","useState","notifications","AppBar","elevation","Toolbar","IconButton","Badge","badgeContent","length","onClick","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","Profile","Card","CardContent","gutterBottom","dateText","moment","format","CardActions","fullWidth","states","value","label","ProfileDetails","firstName","lastName","email","phone","country","values","setValues","handleChange","event","target","autoComplete","noValidate","CardHeader","subheader","Grid","container","md","xs","TextField","helperText","onChange","required","select","SelectProps","native","option","minHeight","Account","Container","lg","setEmptyStr","str","getInitials","replace","split","slice","v","toUpperCase","join","ProfileName","image","Results","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","TableBody","hover","selected","id","selectedIndex","concat","handleSelectOne","mobile","gender","dob","lon","lat","city","createdAt","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","importButton","exportButton","TableToolbar","hideAddButton","mt","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","CustomerListView","dispatch","useDispatch","userData","useSelector","axios","get","users","fetchData","red","differenceIcon","differenceValue","Budget","justify","uuid","amount","status","actions","LatestOrders","orders","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","order","endIcon","imageUrl","updatedAt","subtract","LatestProducts","products","subtitle","product","divider","ListItemAvatar","ListItemText","fromNow","edge","Sales","useTheme","datasets","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","orange","TasksProgress","LinearProgress","green","TotalCustomers","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","style","Dashboard","sm","xl","Facebook","d","Google","LoginView","navigate","useNavigate","initialValues","password","validationSchema","Yup","shape","max","onSubmit","errors","handleBlur","handleSubmit","isSubmitting","touched","mb","startIcon","align","error","Boolean","onBlur","my","disabled","Link","marginTop","NotFoundView","trimStr","substr","BASE_URL","API_BASE_URL","Image","extraLarge","imageURL","search","objectFit","borderRadius","boxShadow","setDate","date","dayjs","services","selectedServiceIds","setSelectedServiceIds","handleOpenServiceDialog","newSelectedServiceIds","companyName","description","price","ToolTipButton","tipClass","btnClass","placement","accordion","heading","pxToRem","fontWeightRegular","blue","imageContainer","closeButton","textCenter","dataLine","accordionDetails","Dialog","setService","_data","findIndex","handleClose","aria-labelledby","DialogTitle","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","address","VendorListView","serviceData","alert","swal","Chip","isSuccess","cyan","bookings","selectedBookingIds","setSelectedBookingIds","handleOpenBookingDialog","handleOpenStaffAssignDialog","handleDelete","dangerMode","buttons","then","isDeleted","catch","err","newSelectedBookingIds","serviceId","userId","disableElevation","disableFocusRipple","disableRipple","disableTouchRipple","isMaterialRequired","frequency","howManyHours","howManyProfessions","time","isCancelled","isDone","cancelledByWhom","setBooking","marginLeft","houseNumber","street","formControl","StaffDialog","React","staffs","setStaffs","selectedStaff","setSelectedStaff","formData","put","message","response","disableBackdropClick","disableEscapeKeyDown","DialogContent","FormControl","InputLabel","htmlFor","Select","labelId","MenuItem","DialogActions","BookingListView","RegisterView","policy","oneOf","ml","underline","FormHelperText","Notifications","wrap","FormControlLabel","control","defaultChecked","Password","confirm","SettingsView","vendors","selectedVendorIds","setSelectedVendorIds","newSelectedVendorIds","vendorData","routes","path","element","AccountView","DashboardView","Booking","defaults","baseURL","App","routing","useRoutes","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b021565d.chunk.js","sourcesContent":["export const GET_USERS = \"GET_USERS\";\r\n","import { GET_USERS } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return { ...state, data: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","export const GET_VENDOR = \"GET_VENDOR\";\r\n","import { GET_VENDOR } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nconst vendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_VENDOR:\r\n      return { ...state, data: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default vendorReducer;\r\n","export const GET_SERVICE = \"GET_SERVICE\";\r\nexport const OPEN_SERVICE_DIALOG = \"OPEN_SERVICE_DIALOG\";\r\nexport const CLOSE_SERVICE_DIALOG = \"CLOSE_SERVICE_DIALOG\";\r\n","import { CLOSE_SERVICE_DIALOG, GET_SERVICE, OPEN_SERVICE_DIALOG } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  dialogId: null,\r\n  isDialogOpen: false,\r\n};\r\n\r\nconst serviceReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_SERVICE:\r\n      return { ...state, data: payload };\r\n\r\n    case OPEN_SERVICE_DIALOG:\r\n      return { ...state, dialogId: payload, isDialogOpen: true };\r\n\r\n    case CLOSE_SERVICE_DIALOG:\r\n      return { ...state, dialogId: null, isDialogOpen: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default serviceReducer;\r\n","export const GET_BOOKING = \"GET_BOOKING\";\r\nexport const OPEN_BOOKING_DIALOG = \"OPEN_BOOKING_DIALOG\";\r\nexport const CLOSE_BOOKING_DIALOG = \"CLOSE_BOOKING_DIALOG\";\r\n\r\nexport const OPEN_STAFF_ASSIGN_DIALOG = \"OPEN_STAFF_ASSIGN_DIALOG\";\r\nexport const CLOSE_STAFF_ASSIGN_DIALOG = \"CLOSE_STAFF_ASSIGN_DIALOG\";\r\nexport const ASSIGN_STAFF = \"ASSIGN_STAFF\";\r\n","import {\r\n  CLOSE_BOOKING_DIALOG,\r\n  GET_BOOKING,\r\n  OPEN_BOOKING_DIALOG,\r\n  CLOSE_STAFF_ASSIGN_DIALOG,\r\n  OPEN_STAFF_ASSIGN_DIALOG,\r\n  ASSIGN_STAFF,\r\n} from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  dialogId: null,\r\n  isDialogOpen: false,\r\n  isBookingDialogOpen: false,\r\n  bookingId: null,\r\n  vendorId: null,\r\n};\r\n\r\nconst bookingReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_BOOKING:\r\n      return { ...state, data: payload };\r\n\r\n    case OPEN_BOOKING_DIALOG:\r\n      return { ...state, dialogId: payload, isDialogOpen: true };\r\n\r\n    case CLOSE_BOOKING_DIALOG:\r\n      return { ...state, dialogId: null, isDialogOpen: false };\r\n\r\n    case OPEN_STAFF_ASSIGN_DIALOG:\r\n      return {\r\n        ...state,\r\n        bookingId: payload.bookingId,\r\n        vendorId: payload.vendorId,\r\n        isBookingDialogOpen: true,\r\n      };\r\n\r\n    case CLOSE_STAFF_ASSIGN_DIALOG:\r\n      return {\r\n        ...state,\r\n        bookingId: null,\r\n        isBookingDialogOpen: false,\r\n      };\r\n\r\n    case ASSIGN_STAFF:\r\n      console.log(payload);\r\n      return {\r\n        ...state,\r\n        data: state.data.map((item) =>\r\n          item._id === payload.bookingId\r\n            ? {\r\n                ...item,\r\n                profession: payload.bookingData.staffId,\r\n              }\r\n            : item\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookingReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport userReducer from \"./user/reducer\";\r\nimport vendorReducer from \"./vendor/reducer\";\r\nimport serviceReducer from \"./service/reducer\";\r\nimport bookingReducer from \"./booking/reducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  vendor: vendorReducer,\r\n  service: serviceReducer,\r\n  booking: bookingReducer,\r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store;\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","const shadows = [\r\n  \"none\",\r\n  \"0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)\",\r\n];\r\n\r\nexport default shadows;\r\n","const typography = {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","import { createMuiTheme, colors } from \"@material-ui/core\";\r\nimport shadows from \"./shadows\";\r\nimport typography from \"./typography\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: \"#F4F6F8\",\r\n      default: colors.common.white,\r\n      paper: colors.common.white,\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500],\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500],\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600],\r\n    },\r\n  },\r\n  shadows,\r\n  typography,\r\n  overrides: {\r\n    MuiTableCell: {\r\n      root: {\r\n        padding: 2,\r\n      },\r\n      body: {\r\n        textAlign: \"center\",\r\n      },\r\n      head: {\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.87)\",\r\n        color: \"#f5f5f9\",\r\n        maxWidth: 220,\r\n        border: \"1px solid #dadde9\",\r\n      },\r\n      arrow: {\r\n        color: \"rgba(0, 0, 0)\",\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    MuiIcon: {\r\n      fontSize: \"small\",\r\n    },\r\n    MuiTooltip: {\r\n      arrow: true,\r\n    },\r\n    MuiButton: {},\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n  Briefcase as BookingIcon,\r\n} from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst user = {\r\n  avatar: \"/static/images/avatars/avatar_6.png\",\r\n  jobTitle: \"Root Admin\",\r\n  name: \"Dummy User\",\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: \"/partners/dashboard\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n  },\r\n  {\r\n    href: \"/partners/customers\",\r\n    icon: UsersIcon,\r\n    title: \"Customers\",\r\n  },\r\n  {\r\n    href: \"/partners/vendors\",\r\n    icon: UsersIcon,\r\n    title: \"Vendors\",\r\n  },\r\n  {\r\n    href: \"/partners/services\",\r\n    icon: ShoppingBagIcon,\r\n    title: \"Services\",\r\n  },\r\n  {\r\n    href: \"/partners/bookings\",\r\n    icon: BookingIcon,\r\n    title: \"Bookings\",\r\n  },\r\n  {\r\n    href: \"/partners/account\",\r\n    icon: UserIcon,\r\n    title: \"Account\",\r\n  },\r\n  {\r\n    href: \"/partners/settings\",\r\n    icon: SettingsIcon,\r\n    title: \"Settings\",\r\n  },\r\n  {\r\n    href: \"/login\",\r\n    icon: LockIcon,\r\n    title: \"Login\",\r\n  },\r\n  {\r\n    href: \"/register\",\r\n    icon: UserPlusIcon,\r\n    title: \"Register\",\r\n  },\r\n  {\r\n    href: \"/404\",\r\n    icon: AlertCircleIcon,\r\n    title: \"Error\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/partners/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <img\r\n      alt=\"Logo\"\r\n      src=\"/static/logo.svg\"\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport Logo from \"../../components/Logo\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppBar, Toolbar, makeStyles } from \"@material-ui/core\";\r\nimport Logo from \"../../components/Logo\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64,\r\n  },\r\n});\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Profile from \"./Profile\";\r\nimport ProfileDetails from \"./ProfileDetails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Account\">\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} md={6} xs={12}>\r\n            <Profile />\r\n          </Grid>\r\n          <Grid item lg={8} md={6} xs={12}>\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","const setEmptyStr = (str) => (str ? str : \"-\");\r\nexport default setEmptyStr;\r\n","const getInitials = (name = \"\") =>\r\n  name\r\n    .replace(/\\s+/, \" \")\r\n    .split(\" \")\r\n    .slice(0, 2)\r\n    .map((v) => v && v[0].toUpperCase())\r\n    .join(\"\");\r\n\r\nexport default getInitials;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Avatar, Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport getInitials from \"../utils/getInitials\";\r\nimport setEmptyStr from \"../utils/setEmptyStr\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction ProfileName({ image, name }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box alignItems=\"center\" display=\"flex\">\r\n      <Avatar className={classes.avatar} src={image}>\r\n        {getInitials(name)}\r\n      </Avatar>\r\n      <Typography color=\"textPrimary\" variant=\"body1\">\r\n        {setEmptyStr(name)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nProfileName.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default ProfileName;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport setEmptyStr from \"../../../utils/setEmptyStr\";\r\nimport ProfileName from \"../../../components/ProfileName\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer._id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0 &&\r\n                      selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>Location</TableCell>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>Gender</TableCell>\r\n                <TableCell>DOB</TableCell>\r\n                <TableCell>Lon-Lat</TableCell>\r\n                <TableCell>City</TableCell>\r\n                <TableCell>Registration date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer._id}\r\n                  selected={selectedCustomerIds.indexOf(customer._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={customer.name} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(customer.email)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.location)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.mobile)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.gender)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.dob)}</TableCell>\r\n                  <TableCell>\r\n                    {customer.lon}-{customer.lat}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(customer.city)}</TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction TableToolbar({ className, title, hideAddButton, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      {!hideAddButton && (\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Add {title}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder={`Search ${title}`}\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nTableToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  hideAddButton: PropTypes.bool,\r\n};\r\n\r\nexport default TableToolbar;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../../components/Page\";\r\nimport Results from \"./Results\";\r\nimport { getUsers } from \"../../../redux/user/actions\";\r\nimport TableToolbar from \"../../../components/TableToolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst CustomerListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const userData = useSelector((state) => state.user.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/user\");\r\n        dispatch(getUsers(data.data.users));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Customers\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Customer\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results customers={userData} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerListView;\r\n","import { GET_USERS } from \"./type\";\r\n\r\nexport const getUsers = (payload) => ({\r\n  type: GET_USERS,\r\n  payload,\r\n});\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              BUDGET\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $24,000\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1049\",\r\n    amount: 30.5,\r\n    customer: {\r\n      name: \"Ekaterina Tankova\",\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: \"pending\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1048\",\r\n    amount: 25.1,\r\n    customer: {\r\n      name: \"Cao Yu\",\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: \"delivered\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1047\",\r\n    amount: 10.99,\r\n    customer: {\r\n      name: \"Alexa Richardson\",\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: \"refunded\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1046\",\r\n    amount: 96.43,\r\n    customer: {\r\n      name: \"Anje Keizer\",\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: \"pending\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1045\",\r\n    amount: 32.54,\r\n    customer: {\r\n      name: \"Clarke Gillebert\",\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: \"delivered\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1044\",\r\n    amount: 16.76,\r\n    customer: {\r\n      name: \"Adam Denisov\",\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: \"delivered\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst LatestOrders = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [orders] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Order Ref</TableCell>\r\n                <TableCell>Customer</TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip enterDelay={300} title=\"Sort\">\r\n                    <TableSortLabel active direction=\"desc\">\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow hover key={order._id}>\r\n                  <TableCell>{order.ref}</TableCell>\r\n                  <TableCell>{order.customer.name}</TableCell>\r\n                  <TableCell>\r\n                    {moment(order.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip color=\"primary\" label={order.status} size=\"small\" />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: \"Dropbox\",\r\n    imageUrl: \"/static/images/products/product_1.png\",\r\n    updatedAt: moment().subtract(2, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Medium Corporation\",\r\n    imageUrl: \"/static/images/products/product_2.png\",\r\n    updatedAt: moment().subtract(2, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Slack\",\r\n    imageUrl: \"/static/images/products/product_3.png\",\r\n    updatedAt: moment().subtract(3, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Lyft\",\r\n    imageUrl: \"/static/images/products/product_4.png\",\r\n    updatedAt: moment().subtract(5, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"GitHub\",\r\n    imageUrl: \"/static/images/products/product_5.png\",\r\n    updatedAt: moment().subtract(9, \"hours\"),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n});\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem divider={i < products.length - 1} key={product._id}>\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton edge=\"end\" size=\"small\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LatestProducts;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL CUSTOMERS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            16%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mt={2}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              p={1}\r\n              textAlign=\"center\"\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Budget from \"./Budget\";\r\nimport LatestOrders from \"./LatestOrders\";\r\nimport LatestProducts from \"./LatestProducts\";\r\nimport Sales from \"./Sales\";\r\nimport TasksProgress from \"./TasksProgress\";\r\nimport TotalCustomers from \"./TotalCustomers\";\r\nimport TotalProfit from \"./TotalProfit\";\r\nimport TrafficByDevice from \"./TrafficByDevice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <Budget />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <Sales />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nconst Facebook = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\r\n    </SvgIcon>\r\n  );\r\n};\r\n\r\nexport default Facebook;\r\n","import React from 'react';\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nconst Google = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\r\n    </SvgIcon>\r\n  );\r\n};\r\n\r\nexport default Google;\r\n","import React from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport FacebookIcon from \"../../icons/Facebook\";\r\nimport GoogleIcon from \"../../icons/Google\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Login\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: \"demo@devias.io\",\r\n              password: \"Password123\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              password: Yup.string()\r\n                .max(255)\r\n                .required(\"Password is required\"),\r\n            })}\r\n            onSubmit={() => {\r\n              navigate(\"/app/dashboard\", { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Sign in\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Sign in on the internal platform\r\n                  </Typography>\r\n                </Box>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      startIcon={<FacebookIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Facebook\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <Button\r\n                      fullWidth\r\n                      startIcon={<GoogleIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Google\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box mt={3} mb={1}>\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    or login with email address\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Don&apos;t have an account?{\" \"}\r\n                  <Link component={RouterLink} to=\"/register\" variant=\"h6\">\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React from \"react\";\r\nimport { Box, Container, Typography, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: \"inline-block\",\r\n    maxWidth: \"100%\",\r\n    width: 560,\r\n  },\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"404\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","const trimStr = (str) => (str.length >= 10 ? str.substr(0, 7) + \"...\" : str);\r\n\r\nexport default trimStr;\r\n","export const BASE_URL = \"http://localhost:5000/\";\r\nexport const API_BASE_URL = `${BASE_URL}api`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { BASE_URL } from \"../constrants\";\r\n\r\nconst Image = ({ image, extraLarge, ...props }) => {\r\n  const imageURL =\r\n    image.search(\"storage\") !== -1 ? `${BASE_URL}${image}` : image;\r\n\r\n  return (\r\n    <img\r\n      src={imageURL}\r\n      alt={image}\r\n      style={{\r\n        width: extraLarge ? 200 : 80,\r\n        height: extraLarge ? 200 : 80,\r\n        objectFit: \"cover\",\r\n        borderRadius: 5,\r\n        margin: 2,\r\n        boxShadow: \"rgba(0, 0, 0, 0.3) 2px 3px 5px 1px\",\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nImage.propTypes = {\r\n  image: PropTypes.string,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","import dayjs from \"dayjs\";\r\nconst setDate = (date) => dayjs(date).format(\"DD/MM/YYYY\");\r\n\r\nexport default setDate;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\nimport trimStr from \"../../utils/trimStr\";\r\nimport Image from \"../../components/Image\";\r\nimport { openServiceDialog } from \"../../redux/service/actions\";\r\nimport setDate from \"../../utils/setDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, services, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedServiceIds, setSelectedServiceIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedServiceIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedServiceIds = services.map((service) => service._id);\r\n    } else {\r\n      newSelectedServiceIds = [];\r\n    }\r\n\r\n    setSelectedServiceIds(newSelectedServiceIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedServiceIds.indexOf(id);\r\n    let newSelectedServiceIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedServiceIds.length - 1) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(0, selectedIndex),\r\n        selectedServiceIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedServiceIds(newSelectedServiceIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleOpenServiceDialog = (id) => {\r\n    dispatch(openServiceDialog(id));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedServiceIds.length === services.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedServiceIds.length > 0 &&\r\n                      selectedServiceIds.length < services.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Vendor's Company Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Title</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Price</TableCell>\r\n                <TableCell>Registration date</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {services.slice(0, limit).map((service) => (\r\n                <TableRow\r\n                  hover\r\n                  key={service._id}\r\n                  selected={selectedServiceIds.indexOf(service._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedServiceIds.indexOf(service._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, service._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={service.vendorId.companyName} />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Image image={service.image} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(service.title)}</TableCell>\r\n                  <TableCell>\r\n                    {trimStr(setEmptyStr(service.description))}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(service.price)}</TableCell>\r\n                  <TableCell>{setDate(service.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      onClick={() => handleOpenServiceDialog(service._id)}\r\n                    >\r\n                      <VisibilityIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={services.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  services: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import { GET_SERVICE, OPEN_SERVICE_DIALOG, CLOSE_SERVICE_DIALOG } from \"./type\";\r\n\r\nexport const getService = (payload) => ({\r\n  type: GET_SERVICE,\r\n  payload,\r\n});\r\n\r\nexport const openServiceDialog = (payload) => ({\r\n  type: OPEN_SERVICE_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const closeServiceDialog = () => ({\r\n  type: CLOSE_SERVICE_DIALOG,\r\n});\r\n","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ToolTip from \"@material-ui/core/Tooltip\";\r\n\r\nconst ToolTipButton = ({\r\n  onClick,\r\n  tipClass,\r\n  btnClass,\r\n  title,\r\n  children,\r\n  placement,\r\n}) => {\r\n  return (\r\n    <ToolTip title={title} placement={placement} className={tipClass}>\r\n      <IconButton onClick={onClick} className={btnClass}>\r\n        {children}\r\n      </IconButton>\r\n    </ToolTip>\r\n  );\r\n};\r\n\r\nexport default ToolTipButton;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeServiceDialog } from \"../../redux/service/actions\";\r\n\r\n// Mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\n\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport setDate from \"../../utils/setDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  imageContainer: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"5px\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n  },\r\n  dataLine: {\r\n    margin: \"5px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  accordionDetails: {},\r\n}));\r\n\r\nconst Dialog = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [service, setService] = useState({});\r\n\r\n  const { dialogId, isDialogOpen: open, data: _data } = useSelector(\r\n    (state) => state.service\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      const index = _data.findIndex((item) => item._id === dialogId);\r\n      if (index !== -1) {\r\n        setService(_data[index]);\r\n      }\r\n    }\r\n  }, [dialogId, _data]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeServiceDialog());\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <ToolTipButton\r\n          title=\"Close\"\r\n          onClick={handleClose}\r\n          btnClass={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </ToolTipButton>\r\n        <Typography variant=\"h3\">Service Details</Typography>\r\n      </DialogTitle>\r\n      <MuiDialogContent>\r\n        {service.title && (\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              <div className={classes.imageContainer}>\r\n                <Image image={service.image} extraLarge />\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Title:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.title}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Description:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.description}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Price:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.price}\r\n                </Typography>\r\n              </div>\r\n\r\n              <Typography\r\n                className={classes.dataLine}\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n              >\r\n                Registration Date: {setDate(service.createdAt)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <div className={classes.accordion}>\r\n                <Accordion disabled={service?.vendorId ? false : true}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      Vendor Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordionDetails}>\r\n                    <div>\r\n                      <ProfileName name={service.vendorId.companyName} />\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Mobile:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(service.vendorId.mobile)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Address:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(service.vendorId.address)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">City:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(service.vendorId.city)}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </MuiDialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\n\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\nimport { getService } from \"../../redux/service/actions\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst VendorListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const serviceData = useSelector((state) => state.service.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/service\");\r\n        dispatch(getService(data.data.services));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Services\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Service\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results services={serviceData} />\r\n        </Box>\r\n      </Container>\r\n      <Dialog />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VendorListView;\r\n","import swal from \"sweetalert\";\r\n\r\nexport const success = () => {\r\n  return swal({\r\n    title: \"Are You Sure!\",\r\n  });\r\n};\r\n\r\nexport const warning = () => {\r\n  return swal({\r\n    title: \"Are You Sure!\",\r\n    icon: \"warning\",\r\n    dangerMode: true,\r\n    buttons: true,\r\n  });\r\n};\r\n\r\nexport const networkError = () => {\r\n  return swal({\r\n    title: \"Opps! Connection lost.\",\r\n    icon: \"warning\",\r\n  });\r\n};\r\n\r\nexport const permissionError = () => {\r\n  return swal({\r\n    title: \"Opps! You don't have Permission.\",\r\n    icon: \"error\",\r\n  });\r\n};\r\n\r\nexport const alert = (title, data, type) => {\r\n  return swal(title, data, type);\r\n};\r\n\r\nexport const approvedPost = () => {\r\n  return swal(\"Approved!\", `News Post has been approved!`, \"success\");\r\n};\r\n","import React from \"react\";\r\nimport MuiChip from \"@material-ui/core/Chip\";\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nimport DoneIcon from \"@material-ui/icons/DoneRounded\";\r\nimport CancelIcon from \"@material-ui/icons/CancelRounded\";\r\n\r\nconst Chip = ({ type = \"success\", label = \"\" }) => {\r\n  const isSuccess = type === \"success\" ? true : false;\r\n  return (\r\n    <MuiChip\r\n      size=\"small\"\r\n      label={label}\r\n      style={{\r\n        backgroundColor: isSuccess ? colors.cyan[700] : colors.red[500],\r\n        color: colors.common.white,\r\n        margin: 2,\r\n      }}\r\n      icon={\r\n        isSuccess ? (\r\n          <DoneIcon fontSize=\"small\" style={{ color: colors.common.white }} />\r\n        ) : (\r\n          <CancelIcon fontSize=\"small\" style={{ color: colors.common.white }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default Chip;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  makeStyles,\r\n  Button,\r\n  Chip as MuiChip,\r\n  Avatar,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\n// icons\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForeverRounded\";\r\n\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport trimStr from \"../../utils/trimStr\";\r\nimport {\r\n  openBookingDialog,\r\n  openStaffDialog,\r\n} from \"../../redux/booking/actions\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport { warning } from \"../../utils/alert\";\r\nimport Chip from \"../../components/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  description: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, bookings, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedBookingIds, setSelectedBookingIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedBookingIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedBookingIds = bookings.map((booking) => booking._id);\r\n    } else {\r\n      newSelectedBookingIds = [];\r\n    }\r\n\r\n    setSelectedBookingIds(newSelectedBookingIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedBookingIds.indexOf(id);\r\n    let newSelectedBookingIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedBookingIds.length - 1) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(0, selectedIndex),\r\n        selectedBookingIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedBookingIds(newSelectedBookingIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleOpenBookingDialog = (id) => {\r\n    dispatch(openBookingDialog(id));\r\n  };\r\n\r\n  const handleOpenStaffAssignDialog = (bookingId, vendorId) => {\r\n    dispatch(openStaffDialog({ bookingId, vendorId }));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const data = warning();\r\n    data\r\n      .then((isDeleted) => {\r\n        if (isDeleted) {\r\n          // delete\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedBookingIds.length === bookings.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedBookingIds.length > 0 &&\r\n                      selectedBookingIds.length < bookings.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Company Name</TableCell>\r\n                <TableCell>Service Title</TableCell>\r\n                <TableCell>User Name</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Material</TableCell>\r\n                <TableCell>Frequency</TableCell>\r\n                <TableCell>Hours</TableCell>\r\n                <TableCell>Professions</TableCell>\r\n                <TableCell>Days</TableCell>\r\n                <TableCell>Time</TableCell>\r\n                <TableCell>Profession</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(limit > 0\r\n                ? bookings.slice(page * limit, page * limit + limit)\r\n                : bookings\r\n              ).map((booking) => (\r\n                <TableRow\r\n                  hover\r\n                  key={booking._id}\r\n                  selected={selectedBookingIds.indexOf(booking._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedBookingIds.indexOf(booking._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, booking._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{booking.vendorId.companyName}</TableCell>\r\n                  <TableCell>{booking.serviceId.title}</TableCell>\r\n                  <TableCell>{setEmptyStr(booking?.userId?.name)}</TableCell>\r\n                  <TableCell>\r\n                    <Tooltip title={setEmptyStr(booking.description)}>\r\n                      <Button\r\n                        className={classes.description}\r\n                        disableElevation\r\n                        disableFocusRipple\r\n                        disableRipple\r\n                        disableTouchRipple\r\n                        variant=\"text\"\r\n                      >\r\n                        {trimStr(setEmptyStr(booking.description))}\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {booking.isMaterialRequired ? \"on\" : \"off\"}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(booking.frequency)}</TableCell>\r\n                  <TableCell>{setEmptyStr(booking.howManyHours)}</TableCell>\r\n                  <TableCell>\r\n                    {setEmptyStr(booking.howManyProfessions)}\r\n                  </TableCell>\r\n                  <TableCell>{trimStr(booking.date)}</TableCell>\r\n                  <TableCell>{trimStr(booking.time)}</TableCell>\r\n                  <TableCell>\r\n                    {!booking.profession && !booking.isCancelled && (\r\n                      <ToolTipButton\r\n                        onClick={() =>\r\n                          handleOpenStaffAssignDialog(\r\n                            booking._id,\r\n                            booking.vendorId._id\r\n                          )\r\n                        }\r\n                        title=\"Assign Employee\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <AssignmentIcon color=\"action\" fontSize=\"small\" />\r\n                      </ToolTipButton>\r\n                    )}\r\n                    {booking.profession && !booking.isCancelled && (\r\n                      <MuiChip\r\n                        label={booking.profession.name}\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor:\r\n                            booking.profession &&\r\n                            booking.isDone &&\r\n                            colors.green[500],\r\n                          color:\r\n                            booking.profession &&\r\n                            booking.isDone &&\r\n                            colors.common.white,\r\n                        }}\r\n                        icon={<Avatar />}\r\n                      />\r\n                    )}\r\n                    {booking.isCancelled && booking.cancelledByWhom && (\r\n                      <Chip type=\"cancel\" label={booking.cancelledByWhom} />\r\n                    )}\r\n                    {booking.profession && booking.isDone && (\r\n                      <Chip type=\"success\" />\r\n                    )}\r\n                    {booking.profession && !booking.isDone && (\r\n                      <Chip type=\"success\" label=\"Assigned\" />\r\n                    )}\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <ToolTipButton\r\n                      onClick={() => handleOpenBookingDialog(booking._id)}\r\n                      title=\"Edit\"\r\n                      placement=\"top\"\r\n                    >\r\n                      <VisibilityIcon color=\"primary\" fontSize=\"small\" />\r\n                    </ToolTipButton>\r\n                    <ToolTipButton\r\n                      onClick={handleDelete}\r\n                      title=\"Delete\"\r\n                      placement=\"top\"\r\n                    >\r\n                      <DeleteIcon color=\"error\" fontSize=\"small\" />\r\n                    </ToolTipButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={bookings.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  bookings: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import {\r\n  GET_BOOKING,\r\n  OPEN_BOOKING_DIALOG,\r\n  CLOSE_BOOKING_DIALOG,\r\n  OPEN_STAFF_ASSIGN_DIALOG,\r\n  CLOSE_STAFF_ASSIGN_DIALOG,\r\n  ASSIGN_STAFF,\r\n} from \"./type\";\r\n\r\nexport const getBooking = (payload) => ({\r\n  type: GET_BOOKING,\r\n  payload,\r\n});\r\n\r\nexport const openBookingDialog = (payload) => ({\r\n  type: OPEN_BOOKING_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const closeBookingDialog = () => ({\r\n  type: CLOSE_BOOKING_DIALOG,\r\n});\r\n\r\nexport const openStaffDialog = (payload) => ({\r\n  type: OPEN_STAFF_ASSIGN_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const assignStaff = (payload) => ({\r\n  type: ASSIGN_STAFF,\r\n  payload,\r\n});\r\n\r\nexport const closeStaffDialog = () => ({\r\n  type: CLOSE_STAFF_ASSIGN_DIALOG,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\n\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport setDate from \"../../utils/setDate\";\r\nimport { closeBookingDialog } from \"../../redux/booking/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  imageContainer: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"5px\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n  },\r\n  dataLine: {\r\n    margin: \"5px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  accordionDetails: {},\r\n}));\r\n\r\nconst Dialog = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [booking, setBooking] = useState({});\r\n\r\n  const { dialogId, isDialogOpen: open, data: _data } = useSelector(\r\n    (state) => state.booking\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      const index = _data.findIndex((item) => item._id === dialogId);\r\n      if (index !== -1) {\r\n        setBooking(_data[index]);\r\n      }\r\n    }\r\n  }, [dialogId, _data]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeBookingDialog());\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <ToolTipButton\r\n          title=\"Close\"\r\n          onClick={handleClose}\r\n          btnClass={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </ToolTipButton>\r\n        <Typography variant=\"h3\">Booking Details</Typography>\r\n      </DialogTitle>\r\n      <MuiDialogContent>\r\n        {booking.vendorId && (\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Instruction:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.description}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Frequency:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.frequency}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Hours:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.howManyHours}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Professions:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.howManyProfessions}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Date & Time:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.date} &nbsp;{booking.time}\r\n                </Typography>\r\n              </div>\r\n\r\n              <Typography\r\n                className={[classes.dataLine, { marginLeft: \"auto\" }].join(\" \")}\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n              >\r\n                Registration Date: {setDate(booking.createdAt)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <div className={classes.accordion}>\r\n                <Accordion disabled={booking?.userId ? false : true}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>\r\n                      User Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Name:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.userId.name}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Email:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.userId.email}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Location:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.userId.location)}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Gender:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.userId.gender)}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <Typography\r\n                        className={classes.dataLine}\r\n                        variant=\"caption\"\r\n                        color=\"textSecondary\"\r\n                      >\r\n                        Joined Date:&nbsp;\r\n                        {setDate(booking.serviceId.createdAt)}\r\n                      </Typography>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion disabled={booking?.serviceId ? false : true}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>\r\n                      Service Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div style={{ margin: \"auto\" }}>\r\n                      <div className={classes.imageContainer}>\r\n                        <Image image={booking.serviceId.image} extraLarge />\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Title:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.title}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Description:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.description}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Price:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.price}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <Typography\r\n                        className={classes.dataLine}\r\n                        variant=\"caption\"\r\n                        color=\"textSecondary\"\r\n                      >\r\n                        Created At:&nbsp;\r\n                        {setDate(booking.serviceId.createdAt)}\r\n                      </Typography>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion disabled={booking?.vendorId ? false : true}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      Vendor Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div>\r\n                      <ProfileName name={booking.vendorId.companyName} />\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Email:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.email)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Mobile:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.mobile)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Address:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {`${booking.vendorId.address.houseNumber}, ${booking.vendorId.address.street} ${booking.vendorId.address.city}`}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">City:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.city)}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </MuiDialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { assignStaff, closeStaffDialog } from \"../../redux/booking/actions\";\r\nimport axios from \"axios\";\r\n\r\nimport { alert } from \"../../utils/alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function StaffDialog({ onChange }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [staffs, setStaffs] = React.useState([]);\r\n  const [selectedStaff, setSelectedStaff] = React.useState(\"\");\r\n\r\n  const { bookingId, vendorId, isBookingDialogOpen: open } = useSelector(\r\n    (state) => state.booking\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(`/staff/vendor/${vendorId}`);\r\n        setStaffs(data.data.staffs);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (vendorId) fetchData();\r\n  }, [vendorId]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeStaffDialog());\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedStaff(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!vendorId || !bookingId) {\r\n      return alert(\"Contact your developer!\");\r\n    }\r\n    try {\r\n      const formData = {\r\n        staffId: selectedStaff,\r\n        bookingId: bookingId,\r\n      };\r\n      const { data } = await axios.put(`/booking/assignStaff`, formData);\r\n      dispatch(\r\n        assignStaff({\r\n          bookingId,\r\n          bookingData: data.data.booking,\r\n        })\r\n      );\r\n\r\n      alert(\"Done\", data.message, \"success\");\r\n      handleClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Warning\", error?.response?.data?.message, \"warning\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <DialogTitle>Choose Staff for this job!</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"demo-dialog-native\">Choose Staff</InputLabel>\r\n          <Select\r\n            labelId=\"demo-dialog-select-label\"\r\n            id=\"demo-dialog-select\"\r\n            value={selectedStaff}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            {staffs.map((item) => (\r\n              <MenuItem key={item._id} value={item._id}>\r\n                {item.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} variant=\"text\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n        >\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\n\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\nimport { getBooking } from \"../../redux/booking/actions\";\r\nimport Dialog from \"./Dialog\";\r\nimport StaffDialog from \"./StaffDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst BookingListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const bookingData = useSelector((state) => state.booking.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/booking\");\r\n        dispatch(getBooking(data.data.bookings));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Bookings\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Booking\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results bookings={bookingData} />\r\n        </Box>\r\n      </Container>\r\n      <Dialog />\r\n      <StaffDialog />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default BookingListView;\r\n","import React from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Register\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              password: \"\",\r\n              policy: false,\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              firstName: Yup.string()\r\n                .max(255)\r\n                .required(\"First name is required\"),\r\n              lastName: Yup.string()\r\n                .max(255)\r\n                .required(\"Last name is required\"),\r\n              password: Yup.string()\r\n                .max(255)\r\n                .required(\"password is required\"),\r\n              policy: Yup.boolean().oneOf([true], \"This field must be checked\"),\r\n            })}\r\n            onSubmit={() => {\r\n              navigate(\"/app/dashboard\", { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box alignItems=\"center\" display=\"flex\" ml={-1}>\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography color=\"textSecondary\" variant=\"body1\">\r\n                    I have read the{\" \"}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>{errors.policy}</FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Have an account?{\" \"}\r\n                  <Link component={RouterLink} to=\"/login\" variant=\"h6\">\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Text Messages\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Messages\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Notifications from \"./Notifications\";\r\nimport Password from \"./Password\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Settings\">\r\n      <Container maxWidth=\"lg\">\r\n        <Notifications />\r\n        <Box mt={3}>\r\n          <Password />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n// Mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\n// icons\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\n// components\r\nimport ProfileName from \"../../components/ProfileName\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport setDate from \"../../utils/setDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, vendors, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedVendorIds, setSelectedVendorIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedVendorIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedVendorIds = vendors.map((vendor) => vendor._id);\r\n    } else {\r\n      newSelectedVendorIds = [];\r\n    }\r\n\r\n    setSelectedVendorIds(newSelectedVendorIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedVendorIds.indexOf(id);\r\n    let newSelectedVendorIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(selectedVendorIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedVendorIds.length - 1) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(0, selectedIndex),\r\n        selectedVendorIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedVendorIds(newSelectedVendorIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedVendorIds.length === vendors.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedVendorIds.length > 0 &&\r\n                      selectedVendorIds.length < vendors.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Company Name</TableCell>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>Address</TableCell>\r\n                {/* <TableCell>Staff</TableCell> */}\r\n                <TableCell>Joined On</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {vendors.slice(0, limit).map((vendor) => (\r\n                <TableRow\r\n                  hover\r\n                  key={vendor._id}\r\n                  selected={selectedVendorIds.indexOf(vendor._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedVendorIds.indexOf(vendor._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, vendor._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={vendor.companyName} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(vendor.mobile)}</TableCell>\r\n                  <TableCell>{`${vendor.address.houseNumber}, ${vendor.address.street} ${vendor.address.city}`}</TableCell>\r\n                  {/* <TableCell>{setEmptyStr(vendor.city)}</TableCell> */}\r\n                  <TableCell>{setDate(vendor.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    <ToolTipButton title=\"Edit\">\r\n                      <VisibilityIcon color=\"primary\" />\r\n                    </ToolTipButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={vendors.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  vendors: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\nimport { getVendor } from \"../../redux/vendor/actions\";\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst VendorListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const vendorData = useSelector((state) => state.vendor.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/vendor\");\r\n        dispatch(getVendor(data.data.vendors));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Vendors\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Vendor\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results vendors={vendorData} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VendorListView;\r\n","import { GET_VENDOR } from \"./type\";\r\n\r\nexport const getVendor = (payload) => ({\r\n  type: GET_VENDOR,\r\n  payload,\r\n});\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport DashboardLayout from \"./layouts/DashboardLayout\";\r\nimport MainLayout from \"./layouts/MainLayout\";\r\nimport AccountView from \"./views/account/AccountView\";\r\nimport CustomerListView from \"./views/customer/CustomerListView\";\r\nimport DashboardView from \"./views/reports/DashboardView\";\r\nimport LoginView from \"./views/auth/LoginView\";\r\nimport NotFoundView from \"./views/errors/NotFoundView\";\r\nimport ServiceListView from \"./views/service\";\r\nimport BookingListView from \"./views/Booking\";\r\nimport RegisterView from \"./views/auth/RegisterView\";\r\nimport SettingsView from \"./views/settings/SettingsView\";\r\nimport VendorListView from \"./views/vendor\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"partners\",\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: \"account\", element: <AccountView /> },\r\n      { path: \"customers\", element: <CustomerListView /> },\r\n      { path: \"vendors\", element: <VendorListView /> },\r\n      { path: \"vendors/:vendorId\", element: <SettingsView /> },\r\n      { path: \"dashboard\", element: <DashboardView /> },\r\n      { path: \"services\", element: <ServiceListView /> },\r\n      { path: \"bookings\", element: <BookingListView /> },\r\n      { path: \"settings\", element: <SettingsView /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/\",\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: \"login\", element: <LoginView /> },\r\n      { path: \"register\", element: <RegisterView /> },\r\n      { path: \"404\", element: <NotFoundView /> },\r\n      { path: \"/\", element: <Navigate to=\"/partners/dashboard\" /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import \"react-perfect-scrollbar/dist/css/styles.css\";\nimport React from \"react\";\nimport { useRoutes } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport axios from \"axios\";\n// redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport \"./mixins/chartjs\";\nimport theme from \"./theme\";\nimport routes from \"./routes\";\nimport { API_BASE_URL } from \"./constrants\";\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        {routing}\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}