{
  "version": 3,
  "sources": [
    "serviceWorker.js",
    "redux/user/type.js",
    "redux/user/reducer.js",
    "redux/vendor/type.js",
    "redux/vendor/reducer.js",
    "redux/service/type.js",
    "redux/service/reducer.js",
    "redux/booking/type.js",
    "redux/booking/reducer.js",
    "redux/store.js",
    "components/GlobalStyles.js",
    "mixins/chartjs.js",
    "theme/index.js",
    "theme/shadows.js",
    "theme/typography.js",
    "layouts/DashboardLayout/NavBar/NavItem.js",
    "layouts/DashboardLayout/NavBar/index.js",
    "components/Logo.js",
    "layouts/DashboardLayout/TopBar.js",
    "layouts/DashboardLayout/index.js",
    "layouts/MainLayout/TopBar.js",
    "layouts/MainLayout/index.js",
    "components/Page.js",
    "views/account/AccountView/Profile.js",
    "views/account/AccountView/ProfileDetails.js",
    "views/account/AccountView/index.js",
    "utils/getInitials.js",
    "utils/setEmptyStr.js",
    "components/ProfileName.js",
    "views/customer/CustomerListView/Results.js",
    "components/TableToolbar.js",
    "views/customer/CustomerListView/index.js",
    "redux/user/actions.js",
    "views/reports/DashboardView/Budget.js",
    "views/reports/DashboardView/LatestOrders.js",
    "views/reports/DashboardView/LatestProducts.js",
    "views/reports/DashboardView/Sales.js",
    "views/reports/DashboardView/TasksProgress.js",
    "views/reports/DashboardView/TotalCustomers.js",
    "views/reports/DashboardView/TotalProfit.js",
    "views/reports/DashboardView/TrafficByDevice.js",
    "views/reports/DashboardView/index.js",
    "icons/Facebook.js",
    "icons/Google.js",
    "views/auth/LoginView.js",
    "views/errors/NotFoundView.js",
    "utils/trimStr.js",
    "constrants.js",
    "components/Image.js",
    "utils/setDate.js",
    "views/service/Results.js",
    "redux/service/actions.js",
    "components/ToolTipButton.js",
    "views/service/Dialog.js",
    "views/service/index.js",
    "views/Booking/Results.js",
    "redux/booking/actions.js",
    "views/Booking/Dialog.js",
    "views/Booking/index.js",
    "views/auth/RegisterView.js",
    "views/settings/SettingsView/Notifications.js",
    "views/settings/SettingsView/Password.js",
    "views/settings/SettingsView/index.js",
    "views/vendor/Results.js",
    "views/vendor/index.js",
    "redux/vendor/actions.js",
    "routes.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "Boolean",
    "window",
    "location",
    "hostname",
    "match",
    "GET_USERS",
    "initialState",
    "data",
    "userReducer",
    "state",
    "type",
    "payload",
    "GET_VENDOR",
    "vendorReducer",
    "GET_SERVICE",
    "OPEN_SERVICE_DIALOG",
    "CLOSE_SERVICE_DIALOG",
    "dialogId",
    "isDialogOpen",
    "serviceReducer",
    "GET_BOOKING",
    "OPEN_BOOKING_DIALOG",
    "CLOSE_BOOKING_DIALOG",
    "bookingReducer",
    "middleware",
    "thunk",
    "reducers",
    "combineReducers",
    "user",
    "vendor",
    "service",
    "booking",
    "enhancer",
    "__REDUX_DEVTOOLS_EXTENSION_COMPOSE__",
    "compose",
    "applyMiddleware",
    "store",
    "createStore",
    "useStyles",
    "makeStyles",
    "createStyles",
    "boxSizing",
    "margin",
    "padding",
    "html",
    "height",
    "width",
    "body",
    "backgroundColor",
    "a",
    "textDecoration",
    "GlobalStyles",
    "Chart",
    "helpers",
    "extend",
    "elements",
    "Rectangle",
    "prototype",
    "draw",
    "left",
    "right",
    "top",
    "bottom",
    "signX",
    "signY",
    "borderSkipped",
    "radius",
    "ctx",
    "this",
    "_chart",
    "vm",
    "_view",
    "borderWidth",
    "cornerRadius",
    "config",
    "options",
    "horizontal",
    "base",
    "x",
    "y",
    "barSize",
    "Math",
    "min",
    "abs",
    "halfStroke",
    "borderLeft",
    "borderRight",
    "borderTop",
    "borderBottom",
    "beginPath",
    "fillStyle",
    "strokeStyle",
    "borderColor",
    "lineWidth",
    "corners",
    "startCorner",
    "indexOf",
    "cornerAt",
    "index",
    "corner",
    "moveTo",
    "i",
    "nextCornerId",
    "floor",
    "xTl",
    "xTr",
    "yTl",
    "yTr",
    "xBl",
    "xBr",
    "yBl",
    "yBr",
    "lineTo",
    "quadraticCurveTo",
    "fill",
    "stroke",
    "theme",
    "createMuiTheme",
    "palette",
    "background",
    "dark",
    "default",
    "colors",
    "common",
    "white",
    "paper",
    "primary",
    "main",
    "indigo",
    "secondary",
    "text",
    "blueGrey",
    "shadows",
    "typography",
    "h1",
    "fontWeight",
    "fontSize",
    "letterSpacing",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "overline",
    "overrides",
    "MuiTableCell",
    "root",
    "textAlign",
    "head",
    "item",
    "display",
    "paddingTop",
    "paddingBottom",
    "button",
    "color",
    "fontWeightMedium",
    "justifyContent",
    "textTransform",
    "icon",
    "marginRight",
    "spacing",
    "title",
    "active",
    "NavItem",
    "className",
    "href",
    "Icon",
    "rest",
    "classes",
    "ListItem",
    "clsx",
    "disableGutters",
    "Button",
    "activeClassName",
    "component",
    "RouterLink",
    "to",
    "size",
    "items",
    "BarChartIcon",
    "UsersIcon",
    "ShoppingBagIcon",
    "BookingIcon",
    "UserIcon",
    "SettingsIcon",
    "LockIcon",
    "UserPlusIcon",
    "AlertCircleIcon",
    "mobileDrawer",
    "desktopDrawer",
    "avatar",
    "cursor",
    "NavBar",
    "onMobileClose",
    "openMobile",
    "useLocation",
    "useEffect",
    "pathname",
    "content",
    "Box",
    "flexDirection",
    "alignItems",
    "p",
    "Avatar",
    "src",
    "Typography",
    "name",
    "variant",
    "Divider",
    "List",
    "map",
    "flexGrow",
    "Hidden",
    "lgUp",
    "Drawer",
    "anchor",
    "onClose",
    "open",
    "mdDown",
    "defaultProps",
    "Logo",
    "props",
    "alt",
    "TopBar",
    "onMobileNavOpen",
    "useState",
    "notifications",
    "AppBar",
    "elevation",
    "Toolbar",
    "IconButton",
    "Badge",
    "badgeContent",
    "length",
    "onClick",
    "overflow",
    "wrapper",
    "flex",
    "breakpoints",
    "up",
    "paddingLeft",
    "contentContainer",
    "DashboardLayout",
    "isMobileNavOpen",
    "setMobileNavOpen",
    "toolbar",
    "MainLayout",
    "Page",
    "forwardRef",
    "ref",
    "children",
    "Helmet",
    "Profile",
    "Card",
    "CardContent",
    "gutterBottom",
    "dateText",
    "moment",
    "format",
    "CardActions",
    "fullWidth",
    "states",
    "value",
    "label",
    "ProfileDetails",
    "firstName",
    "lastName",
    "email",
    "phone",
    "country",
    "values",
    "setValues",
    "handleChange",
    "event",
    "target",
    "autoComplete",
    "noValidate",
    "CardHeader",
    "subheader",
    "Grid",
    "container",
    "md",
    "xs",
    "TextField",
    "helperText",
    "onChange",
    "required",
    "select",
    "SelectProps",
    "native",
    "option",
    "minHeight",
    "Account",
    "Container",
    "maxWidth",
    "lg",
    "replace",
    "split",
    "slice",
    "v",
    "toUpperCase",
    "join",
    "str",
    "ProfileName",
    "image",
    "getInitials",
    "setEmptyStr",
    "Results",
    "customers",
    "selectedCustomerIds",
    "setSelectedCustomerIds",
    "limit",
    "setLimit",
    "page",
    "setPage",
    "minWidth",
    "Table",
    "TableHead",
    "TableRow",
    "TableCell",
    "Checkbox",
    "checked",
    "indeterminate",
    "newSelectedCustomerIds",
    "customer",
    "_id",
    "TableBody",
    "hover",
    "selected",
    "id",
    "selectedIndex",
    "concat",
    "handleSelectOne",
    "mobile",
    "gender",
    "dob",
    "lon",
    "lat",
    "city",
    "createdAt",
    "TablePagination",
    "count",
    "onChangePage",
    "newPage",
    "onChangeRowsPerPage",
    "rowsPerPage",
    "rowsPerPageOptions",
    "importButton",
    "exportButton",
    "TableToolbar",
    "hideAddButton",
    "mt",
    "InputProps",
    "startAdornment",
    "InputAdornment",
    "position",
    "SvgIcon",
    "placeholder",
    "CustomerListView",
    "dispatch",
    "useDispatch",
    "userData",
    "useSelector",
    "fetchData",
    "axios",
    "get",
    "users",
    "console",
    "log",
    "red",
    "differenceIcon",
    "differenceValue",
    "Budget",
    "justify",
    "uuid",
    "amount",
    "status",
    "actions",
    "LatestOrders",
    "orders",
    "sortDirection",
    "Tooltip",
    "enterDelay",
    "TableSortLabel",
    "direction",
    "order",
    "Chip",
    "endIcon",
    "imageUrl",
    "updatedAt",
    "subtract",
    "LatestProducts",
    "products",
    "subtitle",
    "product",
    "divider",
    "ListItemAvatar",
    "ListItemText",
    "fromNow",
    "edge",
    "Sales",
    "useTheme",
    "datasets",
    "grey",
    "labels",
    "animation",
    "layout",
    "legend",
    "maintainAspectRatio",
    "responsive",
    "scales",
    "xAxes",
    "barThickness",
    "maxBarThickness",
    "barPercentage",
    "categoryPercentage",
    "ticks",
    "fontColor",
    "gridLines",
    "drawBorder",
    "yAxes",
    "beginAtZero",
    "borderDash",
    "borderDashOffset",
    "zeroLineBorderDash",
    "zeroLineBorderDashOffset",
    "zeroLineColor",
    "tooltips",
    "bodyFontColor",
    "enabled",
    "footerFontColor",
    "intersect",
    "mode",
    "titleFontColor",
    "action",
    "orange",
    "TasksProgress",
    "LinearProgress",
    "green",
    "TotalCustomers",
    "TotalProfit",
    "TrafficByDevice",
    "hoverBorderColor",
    "cutoutPercentage",
    "devices",
    "LaptopMacIcon",
    "TabletIcon",
    "PhoneIcon",
    "style",
    "Dashboard",
    "sm",
    "xl",
    "Facebook",
    "d",
    "Google",
    "LoginView",
    "navigate",
    "useNavigate",
    "initialValues",
    "password",
    "validationSchema",
    "Yup",
    "shape",
    "max",
    "onSubmit",
    "errors",
    "handleBlur",
    "handleSubmit",
    "isSubmitting",
    "touched",
    "mb",
    "startIcon",
    "align",
    "error",
    "onBlur",
    "my",
    "disabled",
    "Link",
    "marginTop",
    "NotFoundView",
    "substr",
    "BASE_URL",
    "API_BASE_URL",
    "Image",
    "extraLarge",
    "objectFit",
    "borderRadius",
    "boxShadow",
    "date",
    "dayjs",
    "services",
    "selectedServiceIds",
    "setSelectedServiceIds",
    "handleOpenServiceDialog",
    "newSelectedServiceIds",
    "vendorId",
    "companyName",
    "trimStr",
    "description",
    "price",
    "setDate",
    "ToolTipButton",
    "tipClass",
    "btnClass",
    "placement",
    "accordion",
    "heading",
    "pxToRem",
    "fontWeightRegular",
    "blue",
    "imageContainer",
    "closeButton",
    "textCenter",
    "dataLine",
    "accordionDetails",
    "Dialog",
    "setService",
    "_data",
    "findIndex",
    "handleClose",
    "aria-labelledby",
    "DialogTitle",
    "Accordion",
    "AccordionSummary",
    "expandIcon",
    "aria-controls",
    "AccordionDetails",
    "address",
    "VednorListView",
    "serviceData",
    "bookings",
    "selectedBookingIds",
    "setSelectedBookingIds",
    "handleOpenBookingDialog",
    "newSelectedBookingIds",
    "serviceId",
    "userId",
    "isMaterialRequired",
    "frequency",
    "howManyHours",
    "howManyProfessions",
    "time",
    "setBooking",
    "marginLeft",
    "BookingListView",
    "bookingData",
    "RegisterView",
    "policy",
    "oneOf",
    "ml",
    "underline",
    "FormHelperText",
    "Notifications",
    "wrap",
    "FormControlLabel",
    "control",
    "defaultChecked",
    "Password",
    "confirm",
    "SettingsView",
    "vendors",
    "selectedVendorIds",
    "setSelectedVendorIds",
    "newSelectedVendorIds",
    "vendorData",
    "routes",
    "path",
    "element",
    "AccountView",
    "DashboardView",
    "Booking",
    "defaults",
    "baseURL",
    "App",
    "routing",
    "useRoutes",
    "ThemeProvider",
    "ReactDOM",
    "render",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "then",
    "registration",
    "unregister"
  ],
  "mappings": "oKAaoBA,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6ECnBSC,EAAY,YCEnBC,EAAe,CACnBC,KAAM,IAaOC,EAVK,WAA8C,IAA7CC,EAA4C,uDAApCH,EAAoC,yCAApBI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACjD,OAAQD,GACN,KAAKL,EACH,OAAO,2BAAKI,GAAZ,IAAmBF,KAAMI,IAE3B,QACE,OAAOF,ICZAG,EAAa,aCEpBN,EAAe,CACnBC,KAAM,IAaOM,EAVO,WAA8C,IAA7CJ,EAA4C,uDAApCH,EAAoC,yCAApBI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACnD,OAAQD,GACN,KAAKE,EACH,OAAO,2BAAKH,GAAZ,IAAmBF,KAAMI,IAE3B,QACE,OAAOF,ICZAK,EAAc,cACdC,EAAsB,sBACtBC,EAAuB,uBCA9BV,EAAe,CACnBC,KAAM,GACNU,SAAU,KACVC,cAAc,GAmBDC,EAhBQ,WAA8C,IAA7CV,EAA4C,uDAApCH,EAAoC,yCAApBI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpD,OAAQD,GACN,KAAKI,EACH,OAAO,2BAAKL,GAAZ,IAAmBF,KAAMI,IAE3B,KAAKI,EACH,OAAO,2BAAKN,GAAZ,IAAmBQ,SAAUN,EAASO,cAAc,IAEtD,KAAKF,EACH,OAAO,2BAAKP,GAAZ,IAAmBQ,SAAU,KAAMC,cAAc,IAEnD,QACE,OAAOT,ICpBAW,EAAc,cACdC,EAAsB,sBACtBC,EAAuB,uBCA9BhB,EAAe,CACnBC,KAAM,GACNU,SAAU,KACVC,cAAc,GAmBDK,EAhBQ,WAA8C,IAA7Cd,EAA4C,uDAApCH,EAAoC,yCAApBI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpD,OAAQD,GACN,KAAKU,EACH,OAAO,2BAAKX,GAAZ,IAAmBF,KAAMI,IAE3B,KAAKU,EACH,OAAO,2BAAKZ,GAAZ,IAAmBQ,SAAUN,EAASO,cAAc,IAEtD,KAAKI,EACH,OAAO,2BAAKb,GAAZ,IAAmBQ,SAAU,KAAMC,cAAc,IAEnD,QACE,OAAOT,ICVPe,EAAa,CAACC,KAEdC,EAAWC,YAAgB,CAC/BC,KAAMpB,EACNqB,OAAQhB,EACRiB,QAASX,EACTY,QAASR,IAQLS,GAJc,kBAAX/B,QAAuBA,OAAOgC,qCACjChC,OAAOgC,qCAAqC,IAC5CC,KAE4BC,IAAe,WAAf,EAAmBX,IAItCY,EAFDC,YAAYX,EAlBL,GAkB6BM,G,kBCxB5CM,EAAYC,aAAW,kBAAMC,YAAa,CAC9C,UAAW,CACT,IAAK,CACHC,UAAW,aACXC,OAAQ,EACRC,QAAS,GAEXC,KAAM,CACJ,yBAA0B,cAC1B,0BAA2B,YAC3BC,OAAQ,OACRC,MAAO,QAETC,KAAM,CACJC,gBAAiB,UACjBH,OAAQ,OACRC,MAAO,QAETG,EAAG,CACDC,eAAgB,QAElB,QAAS,CACPL,OAAQ,OACRC,MAAO,cAWEK,EANM,WAGnB,OAFAb,IAEO,M,QC2JTc,QAAMC,QAAQC,OAAOF,QAAMG,SAASC,UAAUC,UAAW,CACvDC,KAzLF,WAAiB,IAKXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAXIC,EAAQC,KAAKC,OAAbF,IACFG,EAAKF,KAAKG,MACVC,EAAgBF,EAAhBE,YAaAC,EAAiBL,KAAKC,OAAOK,OAAOC,QAApCF,aA+BN,GA9BIA,EAAe,IACjBA,EAAe,GAGW,qBAAjBA,IACTA,EAAe,GAGZH,EAAGM,YAWNjB,EAAOW,EAAGO,KACVjB,EAAQU,EAAGQ,EACXjB,EAAMS,EAAGS,EAAIT,EAAGzB,OAAS,EACzBiB,EAASQ,EAAGS,EAAIT,EAAGzB,OAAS,EAC5BkB,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBK,EAAGL,eAAiB,SAfpCN,EAAOW,EAAGQ,EAAIR,EAAGxB,MAAQ,EACzBc,EAAQU,EAAGQ,EAAIR,EAAGxB,MAAQ,EAC1Be,EAAMS,EAAGS,EAEThB,EAAQ,EACRC,GAFAF,EAASQ,EAAGO,MAEKhB,EAAM,GAAK,EAC5BI,EAAgBK,EAAGL,eAAiB,UAclCO,EAAa,CAEf,IAAMQ,EAAUC,KAAKC,IAAID,KAAKE,IAAIxB,EAAOC,GAAQqB,KAAKE,IAAItB,EAAMC,IAE1DsB,GADNZ,EAAcA,EAAcQ,EAAUA,EAAUR,GACf,EAE3Ba,EAAa1B,GAA0B,SAAlBM,EAA2BmB,EAAarB,EAAQ,GACrEuB,EAAc1B,GAA2B,UAAlBK,GAA6BmB,EAAarB,EAAQ,GACzEwB,EAAY1B,GAAyB,QAAlBI,EAA0BmB,EAAapB,EAAQ,GAClEwB,EAAe1B,GAA4B,WAAlBG,GAA8BmB,EAAapB,EAAQ,GAE9EqB,IAAeC,IACjBzB,EAAM0B,EACNzB,EAAS0B,GAGPD,IAAcC,IAChB7B,EAAO0B,EACPzB,EAAQ0B,GAIZnB,EAAIsB,YACJtB,EAAIuB,UAAYpB,EAAGtB,gBACnBmB,EAAIwB,YAAcrB,EAAGsB,YACrBzB,EAAI0B,UAAYrB,EAKhB,IAAMsB,EAAU,CAAC,CAACnC,EAAMG,GAAS,CAACH,EAAME,GAAM,CAACD,EAAOC,GAAM,CAACD,EAAOE,IAIhEiC,EADY,CAAC,SAAU,OAAQ,MAAO,SAChBC,QAAQ/B,EAAe,GAKjD,SAASgC,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,IALpB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtB9B,EAAIiC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAGjB,IAAMxD,EAAQgD,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjD,EAASiD,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpChB,EAAIgB,EAAQ,GAAG,GACff,EAAIe,EAAQ,GAAG,GAWrB,IATA5B,EAASO,GAEIQ,KAAKE,IAAItC,GAAU,IAC9BqB,EAASe,KAAKsB,MAAMtB,KAAKE,IAAItC,GAAU,IAErCqB,EAASe,KAAKE,IAAIrC,GAAS,IAC7BoB,EAASe,KAAKsB,MAAMtB,KAAKE,IAAIrC,GAAS,IAGpCD,EAAS,EAAG,CAEd,IAAM2D,EAAM1B,EACN2B,EAAM3B,EAAIhC,EACV4D,EAAM3B,EAAIlC,EACV8D,EAAM5B,EAAIlC,EAEV+D,EAAM9B,EACN+B,EAAM/B,EAAIhC,EACVgE,EAAM/B,EACNgC,EAAMhC,EAGZZ,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QACxC,GAAIhE,EAAQ,EAAG,CAEpB,IAAM0D,EAAM1B,EAAIhC,EACV2D,EAAM3B,EACN4B,EAAM3B,EACN4B,EAAM5B,EAEN6B,EAAM9B,EAAIhC,EACV+D,EAAM/B,EACNgC,EAAM/B,EAAIlC,EACVkE,EAAMhC,EAAIlC,EAGhBsB,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QAG7C3C,EAAIiC,OAAOtB,EAAIZ,EAAQa,GACvBZ,EAAI6C,OAAOlC,EAAIhC,EAAQoB,EAAQa,GAC/BZ,EAAI8C,iBAAiBnC,EAAIhC,EAAOiC,EAAGD,EAAIhC,EAAOiC,EAAIb,GAClDC,EAAI6C,OAAOlC,EAAIhC,EAAOiC,EAAIlC,EAASqB,GACnCC,EAAI8C,iBACFnC,EAAIhC,EACJiC,EAAIlC,EACJiC,EAAIhC,EAAQoB,EACZa,EAAIlC,GAENsB,EAAI6C,OAAOlC,EAAIZ,EAAQa,EAAIlC,GAC3BsB,EAAI8C,iBAAiBnC,EAAGC,EAAIlC,EAAQiC,EAAGC,EAAIlC,EAASqB,GACpDC,EAAI6C,OAAOlC,EAAGC,EAAIb,GAClBC,EAAI8C,iBAAiBnC,EAAGC,EAAGD,EAAIZ,EAAQa,GAI3CZ,EAAI+C,OACA1C,GACFL,EAAIgD,Y,oBCjJOC,EAnCDC,YAAe,CAC3BC,QAAS,CACPC,WAAY,CACVC,KAAM,UACNC,QAASC,IAAOC,OAAOC,MACvBC,MAAOH,IAAOC,OAAOC,OAEvBE,QAAS,CACPC,KAAML,IAAOM,OAAO,MAEtBC,UAAW,CACTF,KAAML,IAAOM,OAAO,MAEtBE,KAAM,CACJJ,QAASJ,IAAOS,SAAS,KACzBF,UAAWP,IAAOS,SAAS,OAG/BC,QCtBa,CACb,OACA,iEACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEDFAC,WEvBa,CACbC,GAAI,CACFC,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBC,GAAI,CACFH,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBE,GAAI,CACFJ,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBG,GAAI,CACFL,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBI,GAAI,CACFN,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBK,GAAI,CACFP,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBM,SAAU,CACRR,WAAY,MFRdS,UAAW,CACTC,aAAc,CACZC,KAAM,CACJvG,QAAS,GAEXI,KAAM,CACJoG,UAAW,UAEbC,KAAM,CACJD,UAAW,c,4MGvBb7G,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCiC,KAAM,CACJC,QAAS,OACTC,WAAY,EACZC,cAAe,GAEjBC,OAAQ,CACNC,MAAOtC,EAAME,QAAQY,KAAKD,UAC1BM,WAAYnB,EAAMiB,WAAWsB,iBAC7BC,eAAgB,aAChBnB,cAAe,EACf9F,QAAS,WACTkH,cAAe,OACf/G,MAAO,QAETgH,KAAM,CACJC,YAAa3C,EAAM4C,QAAQ,IAE7BC,MAAO,CACLF,YAAa,QAEfG,OAAQ,CACNR,MAAOtC,EAAME,QAAQQ,QAAQC,KAC7B,WAAY,CACVQ,WAAYnB,EAAMiB,WAAWsB,kBAE/B,UAAW,CACTD,MAAOtC,EAAME,QAAQQ,QAAQC,WA+CpBoC,GA1CC,SAAC,GAMV,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,KACMC,EAGF,EAHJR,KACAG,EAEI,EAFJA,MACGM,EACC,oDACEC,EAAUlI,KAEhB,OACE,cAACmI,GAAA,EAAD,yBACEL,UAAWM,aAAKF,EAAQnB,KAAMe,GAC9BO,gBAAc,GACVJ,GAHN,aAKE,eAACK,GAAA,EAAD,CACEC,gBAAiBL,EAAQN,OACzBE,UAAWI,EAAQf,OACnBqB,UAAWC,IACXC,GAAIX,EAJN,UAMGC,GACC,cAACA,EAAD,CACEF,UAAWI,EAAQV,KACnBmB,KAAK,OAGT,sBAAMb,UAAWI,EAAQP,MAAzB,SACGA,WC3CLrI,GACI,sCADJA,GAEM,aAFNA,GAGE,aAGFsJ,GAAQ,CACZ,CACEb,KAAM,iBACNP,KAAMqB,IACNlB,MAAO,aAET,CACEI,KAAM,iBACNP,KAAMsB,KACNnB,MAAO,aAET,CACEI,KAAM,eACNP,KAAMsB,KACNnB,MAAO,WAET,CACEI,KAAM,gBACNP,KAAMuB,KACNpB,MAAO,YAET,CACEI,KAAM,gBACNP,KAAMwB,KACNrB,MAAO,YAET,CACEI,KAAM,eACNP,KAAMyB,KACNtB,MAAO,WAET,CACEI,KAAM,gBACNP,KAAM0B,KACNvB,MAAO,YAET,CACEI,KAAM,SACNP,KAAM2B,KACNxB,MAAO,SAET,CACEI,KAAM,YACNP,KAAM4B,KACNzB,MAAO,YAET,CACEI,KAAM,OACNP,KAAM6B,KACN1B,MAAO,UAIL3H,GAAYC,aAAW,iBAAO,CAClCqJ,aAAc,CACZ9I,MAAO,KAET+I,cAAe,CACb/I,MAAO,IACPe,IAAK,GACLhB,OAAQ,qBAEViJ,OAAQ,CACNC,OAAQ,UACRjJ,MAAO,GACPD,OAAQ,QAINmJ,GAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACzB1B,EAAUlI,KACVpC,EAAWiM,cAEjBC,qBAAU,WACJF,GAAcD,GAChBA,MAGD,CAAC/L,EAASmM,WAEb,IAAMC,EACJ,eAACC,EAAA,EAAD,CAAK1J,OAAO,OAAOyG,QAAQ,OAAOkD,cAAc,SAAhD,UACE,eAACD,EAAA,EAAD,CAAKE,WAAW,SAASnD,QAAQ,OAAOkD,cAAc,SAASE,EAAG,EAAlE,UACE,cAACC,EAAA,EAAD,CACEvC,UAAWI,EAAQsB,OACnBhB,UAAWC,IACX6B,IAAKhL,GACLoJ,GAAG,iBAEL,cAAC6B,EAAA,EAAD,CAAYzC,UAAWI,EAAQsC,KAAMpD,MAAM,cAAcqD,QAAQ,KAAjE,SACGnL,KAEH,cAACiL,EAAA,EAAD,CAAYnD,MAAM,gBAAgBqD,QAAQ,QAA1C,SACGnL,QAGL,cAACoL,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CAAKG,EAAG,EAAR,SACE,cAACO,EAAA,EAAD,UACG/B,GAAMgC,KAAI,SAAC7D,GAAD,OACT,cAAC,GAAD,CACEgB,KAAMhB,EAAKgB,KAEXJ,MAAOZ,EAAKY,MACZH,KAAMT,EAAKS,MAFNT,EAAKY,cAOlB,cAACsC,EAAA,EAAD,CAAKY,SAAU,OAInB,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACC,EAAA,EAAD,CACEC,OAAO,OACP/C,QAAS,CAAE3C,MAAO2C,EAAQoB,cAC1B4B,QAASvB,EACTwB,KAAMvB,EACNa,QAAQ,YALV,SAOGT,MAGL,cAACc,EAAA,EAAD,CAAQM,QAAM,EAAd,SACE,cAACJ,EAAA,EAAD,CACEC,OAAO,OACP/C,QAAS,CAAE3C,MAAO2C,EAAQqB,eAC1B4B,MAAI,EACJV,QAAQ,aAJV,SAMGT,UAYXN,GAAO2B,aAAe,CACpB1B,cAAe,aACfC,YAAY,GAGCF,U,uGC3KA4B,GAVF,SAACC,GACZ,OACE,iCACEC,IAAI,OACJlB,IAAI,oBACAiB,KCWJvL,GAAYC,aAAW,iBAAO,CAClC2G,KAAM,GACN4C,OAAQ,CACNhJ,MAAO,GACPD,OAAQ,QA4CGkL,GAxCA,SAAC,GAA6C,IAA3C3D,EAA0C,EAA1CA,UAAW4D,EAA+B,EAA/BA,gBAAoBzD,EAAW,gDACpDC,EAAUlI,KAD0C,EAElC2L,mBAAS,IAA1BC,EAFmD,oBAI1D,OACE,cAACC,GAAA,EAAD,yBAAQ/D,UAAWM,aAAKF,EAAQtB,KAAMkB,GAAYgE,UAAW,GAAO7D,GAApE,aACE,eAAC8D,GAAA,EAAD,WACE,cAAC,IAAD,CAAYrD,GAAG,IAAf,SACE,cAAC,GAAD,MAEF,cAACuB,EAAA,EAAD,CAAKY,SAAU,IACf,eAACC,EAAA,EAAD,CAAQM,QAAM,EAAd,UACE,cAACY,GAAA,EAAD,CAAY5E,MAAM,UAAlB,SACE,cAAC6E,GAAA,EAAD,CACEC,aAAcN,EAAcO,OAC5B/E,MAAM,UACNqD,QAAQ,MAHV,SAKE,cAAC,KAAD,QAGJ,cAACuB,GAAA,EAAD,CAAY5E,MAAM,UAAlB,SACE,cAAC,KAAD,SAGJ,cAAC0D,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACiB,GAAA,EAAD,CAAY5E,MAAM,UAAUgF,QAASV,EAArC,SACE,cAAC,KAAD,eC/CN1L,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C8B,QAAS,OACTzG,OAAQ,OACR8L,SAAU,SACV7L,MAAO,QAET8L,QAAQ,aACNtF,QAAS,OACTuF,KAAM,WACNF,SAAU,SACVpF,WAAY,IACXnC,EAAM0H,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,MAGjBC,iBAAkB,CAChB3F,QAAS,OACTuF,KAAM,WACNF,SAAU,UAEZrC,QAAS,CACPuC,KAAM,WACNhM,OAAQ,OACR8L,SAAU,YA0BCO,GAtBS,WACtB,IAAM1E,EAAUlI,KADY,EAEgB2L,oBAAS,GAFzB,mBAErBkB,EAFqB,KAEJC,EAFI,KAI5B,OACE,sBAAKhF,UAAWI,EAAQtB,KAAxB,UACE,cAAC,GAAD,CAAQ8E,gBAAiB,kBAAMoB,GAAiB,MAChD,cAAC,GAAD,CACEnD,cAAe,kBAAMmD,GAAiB,IACtClD,WAAYiD,IAEd,qBAAK/E,UAAWI,EAAQoE,QAAxB,SACE,qBAAKxE,UAAWI,EAAQyE,iBAAxB,SACE,qBAAK7E,UAAWI,EAAQ8B,QAAxB,SACE,cAAC,IAAD,cC1CNhK,GAAYC,YAAW,CAC3B2G,KAAM,GACNmG,QAAS,CACPxM,OAAQ,MAsBGkL,GAlBA,SAAC,GAA4B,IAA1B3D,EAAyB,EAAzBA,UAAcG,EAAW,8BACnCC,EAAUlI,KAEhB,OACE,cAAC6L,GAAA,EAAD,yBAAQ/D,UAAWM,aAAKF,EAAQtB,KAAMkB,GAAYgE,UAAW,GAAO7D,GAApE,aACE,cAAC8D,GAAA,EAAD,CAASjE,UAAWI,EAAQ6E,QAA5B,SACE,cAAC,IAAD,CAAYrE,GAAG,IAAf,SACE,cAAC,GAAD,YChBJ1I,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWE,QAC1C6B,QAAS,OACTzG,OAAQ,OACR8L,SAAU,SACV7L,MAAO,QAET8L,QAAS,CACPtF,QAAS,OACTuF,KAAM,WACNF,SAAU,SACVpF,WAAY,IAEd0F,iBAAkB,CAChB3F,QAAS,OACTuF,KAAM,WACNF,SAAU,UAEZrC,QAAS,CACPuC,KAAM,WACNhM,OAAQ,OACR8L,SAAU,YAqBCW,GAjBI,WACjB,IAAM9E,EAAUlI,KAEhB,OACE,sBAAK8H,UAAWI,EAAQtB,KAAxB,UACE,cAAC,GAAD,IACA,qBAAKkB,UAAWI,EAAQoE,QAAxB,SACE,qBAAKxE,UAAWI,EAAQyE,iBAAxB,SACE,qBAAK7E,UAAWI,EAAQ8B,QAAxB,SACE,cAAC,IAAD,c,8BCbGiD,GAvBFC,sBAAW,WAIrBC,GAAS,IAHVC,EAGS,EAHTA,SAGS,IAFTzF,aAES,MAFD,GAEC,EADNM,EACM,qCACT,OACE,8CACEkF,IAAKA,GACDlF,GAFN,cAIE,cAACoF,GAAA,EAAD,UACE,gCAAQ1F,MAETyF,S,kDCDD9N,GACI,sCADJA,GAEE,cAFFA,GAGK,MAHLA,GAKE,iBALFA,GAMM,QAGNU,GAAYC,aAAW,iBAAO,CAClC2G,KAAM,GACN4C,OAAQ,CACNjJ,OAAQ,IACRC,MAAO,SA8DI8M,GA1DC,SAAC,GAA4B,IAA1BxF,EAAyB,EAAzBA,UAAcG,EAAW,8BACpCC,EAAUlI,KAEhB,OACE,eAACuN,GAAA,EAAD,yBACEzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,cAIE,cAACuF,GAAA,EAAD,UACE,eAACvD,EAAA,EAAD,CACEE,WAAW,SACXnD,QAAQ,OACRkD,cAAc,SAHhB,UAKE,cAACG,EAAA,EAAD,CACEvC,UAAWI,EAAQsB,OACnBc,IAAKhL,KAEP,cAACiL,EAAA,EAAD,CACEnD,MAAM,cACNqG,cAAY,EACZhD,QAAQ,KAHV,SAKGnL,KAEH,cAACiL,EAAA,EAAD,CACEnD,MAAM,gBACNqD,QAAQ,QAFV,mBAIMnL,GAJN,YAImBA,MAEnB,cAACiL,EAAA,EAAD,CACEzC,UAAWI,EAAQwF,SACnBtG,MAAM,gBACNqD,QAAQ,QAHV,mBAKMkD,OAASC,OAAO,WALtB,YAKoCtO,WAIxC,cAACoL,EAAA,EAAD,IACA,cAACmD,GAAA,EAAD,UACE,cAACvF,GAAA,EAAD,CACElB,MAAM,UACN0G,WAAS,EACTrD,QAAQ,OAHV,mC,oBC5DFsD,GAAS,CACb,CACEC,MAAO,UACPC,MAAO,WAET,CACED,MAAO,WACPC,MAAO,YAET,CACED,MAAO,gBACPC,MAAO,kBAILjO,GAAYC,aAAW,iBAAO,CAClC2G,KAAM,OAqKOsH,GAlKQ,SAAC,GAA4B,IAA1BpG,EAAyB,EAAzBA,UAAcG,EAAW,8BAC3CC,EAAUlI,KADiC,EAErB2L,mBAAS,CACnCwC,UAAW,WACXC,SAAU,QACVC,MAAO,iBACPC,MAAO,GACPnQ,MAAO,UACPoQ,QAAS,QARsC,mBAE1CC,EAF0C,KAElCC,EAFkC,KAW3CC,EAAe,SAACC,GACpBF,EAAU,2BACLD,GADI,kBAENG,EAAMC,OAAOpE,KAAOmE,EAAMC,OAAOZ,UAItC,OACE,8CACEa,aAAa,MACbC,YAAU,EACVhH,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAJN,aAME,eAACsF,GAAA,EAAD,WACE,cAACwB,GAAA,EAAD,CACEC,UAAU,gCACVrH,MAAM,YAER,cAAC+C,EAAA,EAAD,IACA,cAAC8C,GAAA,EAAD,UACE,eAACyB,GAAA,EAAD,CACEC,WAAS,EACTxH,QAAS,EAFX,UAIE,cAACuH,GAAA,EAAD,CACElI,MAAI,EACJoI,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACEvB,WAAS,EACTwB,WAAW,gCACXrB,MAAM,aACNzD,KAAK,YACL+E,SAAUb,EACVc,UAAQ,EACRxB,MAAOQ,EAAOL,UACd1D,QAAQ,eAGZ,cAACwE,GAAA,EAAD,CACElI,MAAI,EACJoI,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,YACNzD,KAAK,WACL+E,SAAUb,EACVc,UAAQ,EACRxB,MAAOQ,EAAOJ,SACd3D,QAAQ,eAGZ,cAACwE,GAAA,EAAD,CACElI,MAAI,EACJoI,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,gBACNzD,KAAK,QACL+E,SAAUb,EACVc,UAAQ,EACRxB,MAAOQ,EAAOH,MACd5D,QAAQ,eAGZ,cAACwE,GAAA,EAAD,CACElI,MAAI,EACJoI,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,eACNzD,KAAK,QACL+E,SAAUb,EACVtQ,KAAK,SACL4P,MAAOQ,EAAOF,MACd7D,QAAQ,eAGZ,cAACwE,GAAA,EAAD,CACElI,MAAI,EACJoI,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,UACNzD,KAAK,UACL+E,SAAUb,EACVc,UAAQ,EACRxB,MAAOQ,EAAOD,QACd9D,QAAQ,eAGZ,cAACwE,GAAA,EAAD,CACElI,MAAI,EACJoI,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,eACNzD,KAAK,QACL+E,SAAUb,EACVc,UAAQ,EACRC,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvB3B,MAAOQ,EAAOrQ,MACdsM,QAAQ,WATV,SAWGsD,GAAOnD,KAAI,SAACgF,GAAD,OACV,wBAEE5B,MAAO4B,EAAO5B,MAFhB,SAIG4B,EAAO3B,OAHH2B,EAAO5B,mBAUxB,cAACtD,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CACEjD,QAAQ,OACRM,eAAe,WACf8C,EAAG,EAHL,SAKE,cAAC9B,GAAA,EAAD,CACElB,MAAM,UACNqD,QAAQ,YAFV,mCC9KJzK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C2K,UAAW,OACX3I,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAuBfoI,GAnBC,WACd,IAAM5H,EAAUlI,KAEhB,OACE,cAAC,GAAD,CAAM8H,UAAWI,EAAQtB,KAAMe,MAAM,UAArC,SACE,cAACoI,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACf,GAAA,EAAD,CAAMC,WAAS,EAACxH,QAAS,EAAzB,UACE,cAACuH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAGd,GAAI,EAAGC,GAAI,GAA7B,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAGd,GAAI,EAAGC,GAAI,GAA7B,SACE,cAAC,GAAD,c,uHC1BG,kBAAC5E,EAAD,uDAAQ,GAAR,OAAeA,EAC3B0F,QAAQ,MAAO,KACfC,MAAM,KACNC,MAAM,EAAG,GACTxF,KAAI,SAACyF,GAAD,OAAOA,GAAKA,EAAE,GAAGC,iBACrBC,KAAK,KCLO,YAACC,GAAD,OAAUA,GAAY,KCM/BxQ,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,GACN4C,OAAQ,CACNpJ,OAAQ0E,EAAM4C,QAAQ,GACtBD,YAAa3C,EAAM4C,QAAQ,QAuBhB+I,OAnBf,YAAuC,IAAhBC,EAAe,EAAfA,MAAOlG,EAAQ,EAARA,KACtBtC,EAAUlI,KAChB,OACE,eAACiK,EAAA,EAAD,CAAKE,WAAW,SAASnD,QAAQ,OAAjC,UACE,cAACqD,EAAA,EAAD,CAAQvC,UAAWI,EAAQsB,OAAQc,IAAKoG,EAAxC,SACGC,GAAYnG,KAEf,cAACD,EAAA,EAAD,CAAYnD,MAAM,cAAcqD,QAAQ,QAAxC,SACGmG,GAAYpG,SCCfxK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,OA0IOiK,GAvIC,SAAC,GAAuC,IAArC/I,EAAoC,EAApCA,UAAWgJ,EAAyB,EAAzBA,UAAc7I,EAAW,0CAC/CC,EAAUlI,KADqC,EAEC2L,mBAAS,IAFV,mBAE9CoF,EAF8C,KAEzBC,EAFyB,OAG3BrF,mBAAS,IAHkB,mBAG9CsF,EAH8C,KAGvCC,EAHuC,OAI7BvF,mBAAS,GAJoB,mBAI9CwF,EAJ8C,KAIxCC,EAJwC,KAqDrD,OACE,eAAC7D,GAAA,EAAD,yBAAMzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAAgBG,GAApD,cACE,cAAC,KAAD,UACE,cAACgC,EAAA,EAAD,CAAKoH,SAAU,KAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWpR,QAAQ,WAAnB,SACE,cAACqR,GAAA,EAAD,CACEC,QAASZ,EAAoB5E,SAAW2E,EAAU3E,OAClD/E,MAAM,UACNwK,cACEb,EAAoB5E,OAAS,GAC7B4E,EAAoB5E,OAAS2E,EAAU3E,OAEzCoD,SA9DM,SAACZ,GACvB,IAAIkD,EAGFA,EADElD,EAAMC,OAAO+C,QACUb,EAAUlG,KAAI,SAACkH,GAAD,OAAcA,EAASC,OAErC,GAG3Bf,EAAuBa,QAwDX,cAACJ,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,kBACA,cAACA,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,qCAGJ,cAACO,GAAA,EAAD,UACGlB,EAAUV,MAAM,EAAGa,GAAOrG,KAAI,SAACkH,GAAD,OAC7B,eAACN,GAAA,EAAD,CACES,OAAK,EAELC,UAAyD,IAA/CnB,EAAoBrN,QAAQoO,EAASC,KAHjD,UAKE,cAACN,GAAA,EAAD,CAAWpR,QAAQ,WAAnB,SACE,cAACqR,GAAA,EAAD,CACEC,SAAwD,IAA/CZ,EAAoBrN,QAAQoO,EAASC,KAC9CxC,SAAU,SAACZ,GAAD,OA1EN,SAACA,EAAOwD,GAC9B,IAAMC,EAAgBrB,EAAoBrN,QAAQyO,GAC9CN,EAAyB,IAEN,IAAnBO,EACFP,EAAyBA,EAAuBQ,OAC9CtB,EACAoB,GAEyB,IAAlBC,EACTP,EAAyBA,EAAuBQ,OAC9CtB,EAAoBX,MAAM,IAEnBgC,IAAkBrB,EAAoB5E,OAAS,EACxD0F,EAAyBA,EAAuBQ,OAC9CtB,EAAoBX,MAAM,GAAI,IAEvBgC,EAAgB,IACzBP,EAAyBA,EAAuBQ,OAC9CtB,EAAoBX,MAAM,EAAGgC,GAC7BrB,EAAoBX,MAAMgC,EAAgB,KAI9CpB,EAAuBa,GAkDgBS,CAAgB3D,EAAOmD,EAASC,MACrD/D,MAAM,WAGV,cAACyD,GAAA,EAAD,UACE,cAAC,GAAD,CAAajH,KAAMsH,EAAStH,SAE9B,cAACiH,GAAA,EAAD,UAAYb,GAAYkB,EAASzD,SACjC,cAACoD,GAAA,EAAD,UAAYb,GAAYkB,EAASlU,YACjC,cAAC6T,GAAA,EAAD,UAAYb,GAAYkB,EAASS,UACjC,cAACd,GAAA,EAAD,UAAYb,GAAYkB,EAASU,UACjC,cAACf,GAAA,EAAD,UAAYb,GAAYkB,EAASW,OACjC,eAAChB,GAAA,EAAD,WACGK,EAASY,IADZ,IACkBZ,EAASa,OAE3B,cAAClB,GAAA,EAAD,UAAYb,GAAYkB,EAASc,QACjC,cAACnB,GAAA,EAAD,UACG9D,KAAOmE,EAASe,WAAWjF,OAAO,kBAvBhCkE,EAASC,iBA+B1B,cAACe,GAAA,EAAD,CACEtK,UAAU,MACVuK,MAAOjC,EAAU3E,OACjB6G,aAvEmB,SAACrE,EAAOsE,GAC/B7B,EAAQ6B,IAuEJC,oBA5EoB,SAACvE,GACzBuC,EAASvC,EAAMC,OAAOZ,QA4ElBmD,KAAMA,EACNgC,YAAalC,EACbmC,mBAAoB,CAAC,EAAG,GAAI,W,8BCxI9BpT,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,GACNyM,aAAc,CACZ5L,YAAa3C,EAAM4C,QAAQ,IAE7B4L,aAAc,CACZ7L,YAAa3C,EAAM4C,QAAQ,QAgDhB6L,OA5Cf,YAAqE,IAA7CzL,EAA4C,EAA5CA,UAAWH,EAAiC,EAAjCA,MAAO6L,EAA0B,EAA1BA,cAAkBvL,EAAQ,sDAC5DC,EAAUlI,KAEhB,OACE,8CAAK8H,UAAWM,aAAKF,EAAQtB,KAAMkB,IAAgBG,GAAnD,eACIuL,GACA,cAACvJ,EAAA,EAAD,CAAKjD,QAAQ,OAAOM,eAAe,WAAnC,SACE,eAACgB,GAAA,EAAD,CAAQlB,MAAM,UAAUqD,QAAQ,YAAhC,iBACO9C,OAIX,cAACsC,EAAA,EAAD,CAAKwJ,GAAI,EAAT,SACE,cAAClG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAACvD,EAAA,EAAD,CAAK+F,SAAU,IAAf,SACE,cAACX,GAAA,EAAD,CACEvB,WAAS,EACT4F,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,GAAA,EAAD,CAAS5N,SAAS,QAAQkB,MAAM,SAAhC,SACE,cAAC,KAAD,SAKR2M,YAAW,iBAAYpM,GACvB8C,QAAQ,0BCxClBzK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C2K,UAAW,OACX3I,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAmCfsM,GA/BU,WACvB,IAAM9L,EAAUlI,KACViU,EAAWC,cAEXC,EAAWC,aAAY,SAACjW,GAAD,OAAWA,EAAMmB,KAAKrB,QAEnD6L,qBAAU,WACRuK,MACC,IAEH,IAAMA,EAAS,yCAAG,+BAAA1T,EAAA,+EAES2T,IAAMC,IAAI,SAFnB,gBAENtW,EAFM,EAENA,KACRgW,GCjCmB5V,EDiCDJ,EAAKA,KAAKuW,MCjCI,CACpCpW,KAAML,EACNM,aD4BkB,gDAKdoW,QAAQC,IAAR,MALc,kCC9BI,IAACrW,ID8BL,oBAAH,qDASf,OACE,cAAC,GAAD,CAAMyJ,UAAWI,EAAQtB,KAAMe,MAAM,YAArC,SACE,eAACoI,GAAA,EAAD,CAAWC,UAAU,EAArB,UACE,cAAC,GAAD,CAAcrI,MAAM,WAAW6L,eAAa,IAC5C,cAACvJ,EAAA,EAAD,CAAKwJ,GAAI,EAAT,SACE,cAAC,GAAD,CAAS3C,UAAWqD,Y,0CE9BxBnU,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJrG,OAAQ,QAEViJ,OAAQ,CACN9I,gBAAiB0E,IAAOuP,IAAI,KAC5BpU,OAAQ,GACRC,MAAO,IAEToU,eAAgB,CACdxN,MAAOhC,IAAOuP,IAAI,MAEpBE,gBAAiB,CACfzN,MAAOhC,IAAOuP,IAAI,KAClBlN,YAAa3C,EAAM4C,QAAQ,QAmEhBoN,GA/DA,SAAC,GAA4B,IAA1BhN,EAAyB,EAAzBA,UAAcG,EAAW,8BACnCC,EAAUlI,KAEhB,OACE,cAACuN,GAAA,EAAD,yBACEzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,aAIE,eAACuF,GAAA,EAAD,WACE,eAACyB,GAAA,EAAD,CACEC,WAAS,EACT6F,QAAQ,gBACRrN,QAAS,EAHX,UAKE,eAACuH,GAAA,EAAD,CAAMlI,MAAI,EAAV,UACE,cAACwD,EAAA,EAAD,CACEnD,MAAM,gBACNqG,cAAY,EACZhD,QAAQ,KAHV,oBAOA,cAACF,EAAA,EAAD,CACEnD,MAAM,cACNqD,QAAQ,KAFV,wBAOF,cAACwE,GAAA,EAAD,CAAMlI,MAAI,EAAV,SACE,cAACsD,EAAA,EAAD,CAAQvC,UAAWI,EAAQsB,OAA3B,SACE,cAAC,KAAD,WAIN,eAACS,EAAA,EAAD,CACEwJ,GAAI,EACJzM,QAAQ,OACRmD,WAAW,SAHb,UAKE,cAAC,KAAD,CAAmBrC,UAAWI,EAAQ0M,iBACtC,cAACrK,EAAA,EAAD,CACEzC,UAAWI,EAAQ2M,gBACnBpK,QAAQ,QAFV,iBAMA,cAACF,EAAA,EAAD,CACEnD,MAAM,gBACNqD,QAAQ,UAFV,wC,6DCzDJxM,GAAO,CACX,CACEkU,GAAI6C,eACJ7H,IAAK,UACL8H,OAAQ,KACRnD,SAAU,CACRtH,KAAM,qBAERqI,UAAW,WACXqC,OAAQ,WAEV,CACE/C,GAAI6C,eACJ7H,IAAK,UACL8H,OAAQ,KACRnD,SAAU,CACRtH,KAAM,UAERqI,UAAW,WACXqC,OAAQ,aAEV,CACE/C,GAAI6C,eACJ7H,IAAK,UACL8H,OAAQ,MACRnD,SAAU,CACRtH,KAAM,oBAERqI,UAAW,SACXqC,OAAQ,YAEV,CACE/C,GAAI6C,eACJ7H,IAAK,UACL8H,OAAQ,MACRnD,SAAU,CACRtH,KAAM,eAERqI,UAAW,WACXqC,OAAQ,WAEV,CACE/C,GAAI6C,eACJ7H,IAAK,UACL8H,OAAQ,MACRnD,SAAU,CACRtH,KAAM,oBAERqI,UAAW,WACXqC,OAAQ,aAEV,CACE/C,GAAI6C,eACJ7H,IAAK,UACL8H,OAAQ,MACRnD,SAAU,CACRtH,KAAM,gBAERqI,UAAW,WACXqC,OAAQ,cAINlV,GAAYC,aAAW,iBAAO,CAClC2G,KAAM,GACNuO,QAAS,CACP7N,eAAgB,gBAgEL8N,GA5DM,SAAC,GAA4B,IAA1BtN,EAAyB,EAAzBA,UAAcG,EAAW,8BACzCC,EAAUlI,KAD+B,EAE9B2L,mBAAS1N,IAAnBoX,EAFwC,oBAI/C,OACE,eAAC9H,GAAA,EAAD,yBAAMzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAAgBG,GAApD,cACE,cAAC8G,GAAA,EAAD,CAAYpH,MAAM,kBAClB,cAAC+C,EAAA,EAAD,IACA,cAAC,KAAD,UACE,cAACT,EAAA,EAAD,CAAKoH,SAAU,IAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,CAAW6D,cAAc,OAAzB,SACE,cAACC,GAAA,EAAD,CAASC,WAAY,IAAK7N,MAAM,OAAhC,SACE,cAAC8N,GAAA,EAAD,CAAgB7N,QAAM,EAAC8N,UAAU,OAAjC,sBAKJ,cAACjE,GAAA,EAAD,0BAGJ,cAACO,GAAA,EAAD,UACGqD,EAAOzK,KAAI,SAAC+K,GAAD,OACV,eAACnE,GAAA,EAAD,CAAUS,OAAK,EAAf,UACE,cAACR,GAAA,EAAD,UAAYkE,EAAMxI,MAClB,cAACsE,GAAA,EAAD,UAAYkE,EAAM7D,SAAStH,OAC3B,cAACiH,GAAA,EAAD,UACG9D,KAAOgI,EAAM9C,WAAWjF,OAAO,gBAElC,cAAC6D,GAAA,EAAD,UACE,cAACmE,GAAA,EAAD,CAAMxO,MAAM,UAAU6G,MAAO0H,EAAMT,OAAQvM,KAAK,cAP/BgN,EAAM5D,iBAerC,cAAC9H,EAAA,EAAD,CAAKjD,QAAQ,OAAOM,eAAe,WAAW8C,EAAG,EAAjD,SACE,cAAC9B,GAAA,EAAD,CACElB,MAAM,UACNyO,QAAS,cAAC,KAAD,IACTlN,KAAK,QACL8B,QAAQ,OAJV,6B,yCCpHFxM,GAAO,CACX,CACEkU,GAAI6C,eACJxK,KAAM,UACNsL,SAAU,wCACVC,UAAWpI,OAASqI,SAAS,EAAG,UAElC,CACE7D,GAAI6C,eACJxK,KAAM,qBACNsL,SAAU,wCACVC,UAAWpI,OAASqI,SAAS,EAAG,UAElC,CACE7D,GAAI6C,eACJxK,KAAM,QACNsL,SAAU,wCACVC,UAAWpI,OAASqI,SAAS,EAAG,UAElC,CACE7D,GAAI6C,eACJxK,KAAM,OACNsL,SAAU,wCACVC,UAAWpI,OAASqI,SAAS,EAAG,UAElC,CACE7D,GAAI6C,eACJxK,KAAM,SACNsL,SAAU,wCACVC,UAAWpI,OAASqI,SAAS,EAAG,WAI9BhW,GAAYC,YAAW,CAC3B2G,KAAM,CACJrG,OAAQ,QAEVmQ,MAAO,CACLnQ,OAAQ,GACRC,MAAO,MAsDIyV,GAlDQ,SAAC,GAA4B,IAA1BnO,EAAyB,EAAzBA,UAAcG,EAAW,8BAC3CC,EAAUlI,KADiC,EAE9B2L,mBAAS1N,IAArBiY,EAF0C,oBAIjD,OACE,eAAC3I,GAAA,EAAD,yBAAMzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAAgBG,GAApD,cACE,cAAC8G,GAAA,EAAD,CACEoH,SAAQ,UAAKD,EAAS/J,OAAd,aACRxE,MAAM,oBAER,cAAC+C,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACGuL,EAAStL,KAAI,SAACwL,EAASrS,GAAV,OACZ,eAACoE,GAAA,EAAD,CAAUkO,QAAStS,EAAImS,EAAS/J,OAAS,EAAzC,UACE,cAACmK,GAAA,EAAD,UACE,qBACE9K,IAAI,UACJ1D,UAAWI,EAAQwI,MACnBpG,IAAK8L,EAAQN,aAGjB,cAACS,GAAA,EAAD,CACE/Q,QAAS4Q,EAAQ5L,KACjB7E,UAAS,kBAAayQ,EAAQL,UAAUS,aAE1C,cAACxK,GAAA,EAAD,CAAYyK,KAAK,MAAM9N,KAAK,QAA5B,SACE,cAAC,KAAD,QAb6CyN,EAAQrE,UAkB7D,cAACrH,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CAAKjD,QAAQ,OAAOM,eAAe,WAAW8C,EAAG,EAAjD,SACE,cAAC9B,GAAA,EAAD,CACElB,MAAM,UACNyO,QAAS,cAAC,KAAD,IACTlN,KAAK,QACL8B,QAAQ,OAJV,6B,8BC/EFzK,GAAYC,aAAW,iBAAO,CAClC2G,KAAM,OAkIO8P,GA/HD,SAAC,GAA4B,IAA1B5O,EAAyB,EAAzBA,UAAcG,EAAW,8BAClCC,EAAUlI,KACV8E,EAAQ6R,eAER1Y,EAAO,CACX2Y,SAAU,CACR,CACElW,gBAAiB0E,IAAOM,OAAO,KAC/BzH,KAAM,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAC9BgQ,MAAO,aAET,CACEvN,gBAAiB0E,IAAOyR,KAAK,KAC7B5Y,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/BgQ,MAAO,cAGX6I,OAAQ,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,UAGlDzU,EAAU,CACd0U,WAAW,EACX5U,aAAc,GACd6U,OAAQ,CAAE3W,QAAS,GACnB4W,OAAQ,CAAEjQ,SAAS,GACnBkQ,qBAAqB,EACrBC,YAAY,EACZC,OAAQ,CACNC,MAAO,CACL,CACEC,aAAc,GACdC,gBAAiB,GACjBC,cAAe,GACfC,mBAAoB,GACpBC,MAAO,CACLC,UAAW7S,EAAME,QAAQY,KAAKD,WAEhCiS,UAAW,CACT5Q,SAAS,EACT6Q,YAAY,KAIlBC,MAAO,CACL,CACEJ,MAAO,CACLC,UAAW7S,EAAME,QAAQY,KAAKD,UAC9BoS,aAAa,EACbnV,IAAK,GAEPgV,UAAW,CACTI,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnB7Q,MAAOtC,EAAME,QAAQqR,QACrBwB,YAAY,EACZK,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,GAC3BC,cAAetT,EAAME,QAAQqR,YAKrCgC,SAAU,CACR3X,gBAAiBoE,EAAME,QAAQC,WAAWE,QAC1CmT,cAAexT,EAAME,QAAQY,KAAKD,UAClCrC,YAAawB,EAAME,QAAQqR,QAC3BnU,YAAa,EACbqW,SAAS,EACTC,gBAAiB1T,EAAME,QAAQY,KAAKD,UACpC8S,WAAW,EACXC,KAAM,QACNC,eAAgB7T,EAAME,QAAQY,KAAKJ,UAIvC,OACE,eAAC+H,GAAA,EAAD,yBACEzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,cAIE,cAAC8G,GAAA,EAAD,CACE6J,OACE,cAACtQ,GAAA,EAAD,CACEuN,QAAS,cAAC,KAAD,IACTlN,KAAK,QACL8B,QAAQ,OAHV,yBAQF9C,MAAM,iBAER,cAAC+C,EAAA,EAAD,IACA,cAAC8C,GAAA,EAAD,UACE,cAACvD,EAAA,EAAD,CACE1J,OAAQ,IACRsT,SAAS,WAFX,SAIE,cAAC,MAAD,CACE5V,KAAMA,EACNoE,QAASA,QAIf,cAACqI,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CACEjD,QAAQ,OACRM,eAAe,WACf8C,EAAG,EAHL,SAKE,cAAC9B,GAAA,EAAD,CACElB,MAAM,UACNyO,QAAS,cAAC,KAAD,IACTlN,KAAK,QACL8B,QAAQ,OAJV,6B,+BCpHFzK,GAAYC,aAAW,iBAAO,CAClC2G,KAAM,CACJrG,OAAQ,QAEViJ,OAAQ,CACN9I,gBAAiB0E,IAAOyT,OAAO,KAC/BtY,OAAQ,GACRC,MAAO,QAsDIsY,GAlDO,SAAC,GAA4B,IAA1BhR,EAAyB,EAAzBA,UAAcG,EAAW,8BAC1CC,EAAUlI,KAEhB,OACE,cAACuN,GAAA,EAAD,yBACEzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,aAIE,eAACuF,GAAA,EAAD,WACE,eAACyB,GAAA,EAAD,CACEC,WAAS,EACT6F,QAAQ,gBACRrN,QAAS,EAHX,UAKE,eAACuH,GAAA,EAAD,CAAMlI,MAAI,EAAV,UACE,cAACwD,EAAA,EAAD,CACEnD,MAAM,gBACNqG,cAAY,EACZhD,QAAQ,KAHV,4BAOA,cAACF,EAAA,EAAD,CACEnD,MAAM,cACNqD,QAAQ,KAFV,sBAOF,cAACwE,GAAA,EAAD,CAAMlI,MAAI,EAAV,SACE,cAACsD,EAAA,EAAD,CAAQvC,UAAWI,EAAQsB,OAA3B,SACE,cAAC,KAAD,WAIN,cAACS,EAAA,EAAD,CAAKwJ,GAAI,EAAT,SACE,cAACsF,GAAA,EAAD,CACE/K,MAAO,KACPvD,QAAQ,yB,0CCjDdzK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJrG,OAAQ,QAEViJ,OAAQ,CACN9I,gBAAiB0E,IAAO4T,MAAM,KAC9BzY,OAAQ,GACRC,MAAO,IAEToU,eAAgB,CACdxN,MAAOhC,IAAO4T,MAAM,MAEtBnE,gBAAiB,CACfzN,MAAOhC,IAAO4T,MAAM,KACpBvR,YAAa3C,EAAM4C,QAAQ,QAmEhBuR,GA/DQ,SAAC,GAA4B,IAA1BnR,EAAyB,EAAzBA,UAAcG,EAAW,8BAC3CC,EAAUlI,KAEhB,OACE,cAACuN,GAAA,EAAD,yBACEzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,aAIE,eAACuF,GAAA,EAAD,WACE,eAACyB,GAAA,EAAD,CACEC,WAAS,EACT6F,QAAQ,gBACRrN,QAAS,EAHX,UAKE,eAACuH,GAAA,EAAD,CAAMlI,MAAI,EAAV,UACE,cAACwD,EAAA,EAAD,CACEnD,MAAM,gBACNqG,cAAY,EACZhD,QAAQ,KAHV,6BAOA,cAACF,EAAA,EAAD,CACEnD,MAAM,cACNqD,QAAQ,KAFV,sBAOF,cAACwE,GAAA,EAAD,CAAMlI,MAAI,EAAV,SACE,cAACsD,EAAA,EAAD,CAAQvC,UAAWI,EAAQsB,OAA3B,SACE,cAAC,KAAD,WAIN,eAACS,EAAA,EAAD,CACEwJ,GAAI,EACJzM,QAAQ,OACRmD,WAAW,SAHb,UAKE,cAAC,KAAD,CAAiBrC,UAAWI,EAAQ0M,iBACpC,cAACrK,EAAA,EAAD,CACEzC,UAAWI,EAAQ2M,gBACnBpK,QAAQ,QAFV,iBAMA,cAACF,EAAA,EAAD,CACEnD,MAAM,gBACNqD,QAAQ,UAFV,wC,qBCnEJzK,GAAYC,aAAW,iBAAO,CAClC2G,KAAM,CACJrG,OAAQ,QAEViJ,OAAQ,CACN9I,gBAAiB0E,IAAOM,OAAO,KAC/BnF,OAAQ,GACRC,MAAO,QAgDI0Y,GA5CK,SAAC,GAA4B,IAA1BpR,EAAyB,EAAzBA,UAAcG,EAAW,8BACxCC,EAAUlI,KAEhB,OACE,cAACuN,GAAA,EAAD,yBACEzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,aAIE,cAACuF,GAAA,EAAD,UACE,eAACyB,GAAA,EAAD,CACEC,WAAS,EACT6F,QAAQ,gBACRrN,QAAS,EAHX,UAKE,eAACuH,GAAA,EAAD,CAAMlI,MAAI,EAAV,UACE,cAACwD,EAAA,EAAD,CACEnD,MAAM,gBACNqG,cAAY,EACZhD,QAAQ,KAHV,0BAOA,cAACF,EAAA,EAAD,CACEnD,MAAM,cACNqD,QAAQ,KAFV,wBAOF,cAACwE,GAAA,EAAD,CAAMlI,MAAI,EAAV,SACE,cAACsD,EAAA,EAAD,CAAQvC,UAAWI,EAAQsB,OAA3B,SACE,cAAC,KAAD,iB,+DCrCRxJ,GAAYC,aAAW,iBAAO,CAClC2G,KAAM,CACJrG,OAAQ,YA+HG4Y,GA3HS,SAAC,GAA4B,IAA1BrR,EAAyB,EAAzBA,UAAcG,EAAW,8BAC5CC,EAAUlI,KACV8E,EAAQ6R,eAER1Y,EAAO,CACX2Y,SAAU,CACR,CACE3Y,KAAM,CAAC,GAAI,GAAI,IACfyC,gBAAiB,CACf0E,IAAOM,OAAO,KACdN,IAAOuP,IAAI,KACXvP,IAAOyT,OAAO,MAEhB3W,YAAa,EACboB,YAAa8B,IAAOC,OAAOC,MAC3B8T,iBAAkBhU,IAAOC,OAAOC,QAGpCwR,OAAQ,CAAC,UAAW,SAAU,WAG1BzU,EAAU,CACd0U,WAAW,EACXsC,iBAAkB,GAClBrC,OAAQ,CAAE3W,QAAS,GACnB4W,OAAQ,CACNjQ,SAAS,GAEXkQ,qBAAqB,EACrBC,YAAY,EACZkB,SAAU,CACR3X,gBAAiBoE,EAAME,QAAQC,WAAWE,QAC1CmT,cAAexT,EAAME,QAAQY,KAAKD,UAClCrC,YAAawB,EAAME,QAAQqR,QAC3BnU,YAAa,EACbqW,SAAS,EACTC,gBAAiB1T,EAAME,QAAQY,KAAKD,UACpC8S,WAAW,EACXC,KAAM,QACNC,eAAgB7T,EAAME,QAAQY,KAAKJ,UAIjC8T,EAAU,CACd,CACE3R,MAAO,UACPqG,MAAO,GACPxG,KAAM+R,KACNnS,MAAOhC,IAAOM,OAAO,MAEvB,CACEiC,MAAO,SACPqG,MAAO,GACPxG,KAAMgS,KACNpS,MAAOhC,IAAOuP,IAAI,MAEpB,CACEhN,MAAO,SACPqG,MAAO,GACPxG,KAAMiS,KACNrS,MAAOhC,IAAOyT,OAAO,OAIzB,OACE,eAACtL,GAAA,EAAD,yBACEzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,cAIE,cAAC8G,GAAA,EAAD,CAAYpH,MAAM,sBAClB,cAAC+C,EAAA,EAAD,IACA,eAAC8C,GAAA,EAAD,WACE,cAACvD,EAAA,EAAD,CACE1J,OAAQ,IACRsT,SAAS,WAFX,SAIE,cAAC,WAAD,CACE5V,KAAMA,EACNoE,QAASA,MAGb,cAAC4H,EAAA,EAAD,CACEjD,QAAQ,OACRM,eAAe,SACfmM,GAAI,EAHN,SAKG6F,EAAQ1O,KAAI,gBACXxD,EADW,EACXA,MACMY,EAFK,EAEXR,KACAG,EAHW,EAGXA,MACAqG,EAJW,EAIXA,MAJW,OAMX,eAAC/D,EAAA,EAAD,CAEEG,EAAG,EACHvD,UAAU,SAHZ,UAKE,cAACmB,EAAD,CAAMZ,MAAM,WACZ,cAACmD,EAAA,EAAD,CACEnD,MAAM,cACNqD,QAAQ,QAFV,SAIG9C,IAEH,eAAC4C,EAAA,EAAD,CACEmP,MAAO,CAAEtS,SACTqD,QAAQ,KAFV,UAIGuD,EAJH,SAXKrG,gBC1Gb3H,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C2K,UAAW,OACX3I,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAyCfiS,GArCG,WAChB,IAAMzR,EAAUlI,KAEhB,OACE,cAAC,GAAD,CAAM8H,UAAWI,EAAQtB,KAAMe,MAAM,YAArC,SACE,cAACoI,GAAA,EAAD,CAAWC,UAAU,EAArB,SACE,eAACf,GAAA,EAAD,CAAMC,WAAS,EAACxH,QAAS,EAAzB,UACE,cAACuH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAG2J,GAAI,EAAGC,GAAI,EAAGzK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAG2J,GAAI,EAAGC,GAAI,EAAGzK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAG2J,GAAI,EAAGC,GAAI,EAAGzK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAG2J,GAAI,EAAGC,GAAI,EAAGzK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAGd,GAAI,GAAI0K,GAAI,EAAGzK,GAAI,GAArC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAGd,GAAI,EAAG0K,GAAI,EAAGzK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAGd,GAAI,EAAG0K,GAAI,EAAGzK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAMlI,MAAI,EAACkJ,GAAI,EAAGd,GAAI,GAAI0K,GAAI,EAAGzK,GAAI,GAArC,SACE,cAAC,GAAD,c,6BCvCG0K,GARE,SAACvO,GAChB,OACE,cAACuI,GAAA,EAAD,2BAAavI,GAAb,aACE,sBAAMwO,EAAE,6mBCKCC,GARA,SAACzO,GACd,OACE,cAACuI,GAAA,EAAD,2BAAavI,GAAb,aACE,sBAAMwO,EAAE,21CCYR/Z,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C3E,OAAQ,OACR2G,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAgJfuS,GA5IG,WAChB,IAAM/R,EAAUlI,KACVka,EAAWC,cAEjB,OACE,cAAC,GAAD,CAAMrS,UAAWI,EAAQtB,KAAMe,MAAM,QAArC,SACE,cAACsC,EAAA,EAAD,CACEjD,QAAQ,OACRkD,cAAc,SACd3J,OAAO,OACP+G,eAAe,SAJjB,SAME,cAACyI,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,KAAD,CACEoK,cAAe,CACb/L,MAAO,iBACPgM,SAAU,eAEZC,iBAAkBC,OAAaC,MAAM,CACnCnM,MAAOkM,OACJlM,MAAM,yBACNoM,IAAI,KACJjL,SAAS,qBACZ6K,SAAUE,OACPE,IAAI,KACJjL,SAAS,0BAEdkL,SAAU,WACRR,EAAS,iBAAkB,CAAEhK,SAAS,KAf1C,SAkBG,gBACCyK,EADD,EACCA,OACAC,EAFD,EAECA,WACAlM,EAHD,EAGCA,aACAmM,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAvM,EAPD,EAOCA,OAPD,OASC,uBAAMkM,SAAUG,EAAhB,UACE,eAAC5Q,EAAA,EAAD,CAAK+Q,GAAI,EAAT,UACE,cAACzQ,EAAA,EAAD,CAAYnD,MAAM,cAAcqD,QAAQ,KAAxC,qBAGA,cAACF,EAAA,EAAD,CACEnD,MAAM,gBACNqG,cAAY,EACZhD,QAAQ,QAHV,iDAQF,eAACwE,GAAA,EAAD,CAAMC,WAAS,EAACxH,QAAS,EAAzB,UACE,cAACuH,GAAA,EAAD,CAAMlI,MAAI,EAACqI,GAAI,GAAID,GAAI,EAAvB,SACE,cAAC7G,GAAA,EAAD,CACElB,MAAM,UACN0G,WAAS,EACTmN,UAAW,cAAC,GAAD,IACX7O,QAASyO,EACTlS,KAAK,QACL8B,QAAQ,YANV,mCAWF,cAACwE,GAAA,EAAD,CAAMlI,MAAI,EAACqI,GAAI,GAAID,GAAI,EAAvB,SACE,cAAC7G,GAAA,EAAD,CACEwF,WAAS,EACTmN,UAAW,cAAC,GAAD,IACX7O,QAASyO,EACTlS,KAAK,QACL8B,QAAQ,YALV,oCAWJ,cAACR,EAAA,EAAD,CAAKwJ,GAAI,EAAGuH,GAAI,EAAhB,SACE,cAACzQ,EAAA,EAAD,CACE2Q,MAAM,SACN9T,MAAM,gBACNqD,QAAQ,QAHV,2CAQF,cAAC4E,GAAA,EAAD,CACE8L,MAAOzd,QAAQqd,EAAQ1M,OAASsM,EAAOtM,OACvCP,WAAS,EACTwB,WAAYyL,EAAQ1M,OAASsM,EAAOtM,MACpCJ,MAAM,gBACN7N,OAAO,SACPoK,KAAK,QACL4Q,OAAQR,EACRrL,SAAUb,EACVtQ,KAAK,QACL4P,MAAOQ,EAAOH,MACd5D,QAAQ,aAEV,cAAC4E,GAAA,EAAD,CACE8L,MAAOzd,QAAQqd,EAAQV,UAAYM,EAAON,UAC1CvM,WAAS,EACTwB,WAAYyL,EAAQV,UAAYM,EAAON,SACvCpM,MAAM,WACN7N,OAAO,SACPoK,KAAK,WACL4Q,OAAQR,EACRrL,SAAUb,EACVtQ,KAAK,WACL4P,MAAOQ,EAAO6L,SACd5P,QAAQ,aAEV,cAACR,EAAA,EAAD,CAAKoR,GAAI,EAAT,SACE,cAAC/S,GAAA,EAAD,CACElB,MAAM,UACNkU,SAAUR,EACVhN,WAAS,EACTnF,KAAK,QACLvK,KAAK,SACLqM,QAAQ,YANV,2BAWF,eAACF,EAAA,EAAD,CAAYnD,MAAM,gBAAgBqD,QAAQ,QAA1C,mCAC8B,IAC5B,cAAC8Q,GAAA,EAAD,CAAM/S,UAAWC,IAAYC,GAAG,YAAY+B,QAAQ,KAApD,qCCtJZzK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C3E,OAAQ,OACR2G,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,IAE5BgJ,MAAO,CACL8K,UAAW,GACXxU,QAAS,eACTgJ,SAAU,OACVxP,MAAO,SAoCIib,GAhCM,WACnB,IAAMvT,EAAUlI,KAEhB,OACE,cAAC,GAAD,CAAM8H,UAAWI,EAAQtB,KAAMe,MAAM,MAArC,SACE,cAACsC,EAAA,EAAD,CACEjD,QAAQ,OACRkD,cAAc,SACd3J,OAAO,OACP+G,eAAe,SAJjB,SAME,eAACyI,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACzF,EAAA,EAAD,CAAY2Q,MAAM,SAAS9T,MAAM,cAAcqD,QAAQ,KAAvD,+DAGA,cAACF,EAAA,EAAD,CAAY2Q,MAAM,SAAS9T,MAAM,cAAcqD,QAAQ,YAAvD,sHAIA,cAACR,EAAA,EAAD,CAAKpD,UAAU,SAAf,SACE,qBACE2E,IAAI,oBACJ1D,UAAWI,EAAQwI,MACnBpG,IAAI,4D,qBC1CH,YAACkG,GAAD,OAAUA,EAAIrE,QAAU,GAAKqE,EAAIkL,OAAO,EAAG,GAAK,MAAQlL,GCA1DmL,GAAW,yBACXC,GAAY,UAAMD,GAAN,OC2BVE,GAvBD,SAAC,GAAqC,IAAnCnL,EAAkC,EAAlCA,MAAOoL,EAA2B,EAA3BA,WAAevQ,EAAY,uCACjD,OACE,iCACEjB,IAAG,UAAKqR,IAAL,OAAgBjL,GACnBlF,IAAKkF,EACLgJ,MAAO,CACLlZ,MAAOsb,EAAa,IAAM,GAC1Bvb,OAAQub,EAAa,IAAM,GAC3BC,UAAW,QACXC,aAAc,EACd5b,OAAQ,EACR6b,UAAW,uCAET1Q,K,qBCjBK,YAAC2Q,GAAD,OAAUC,KAAMD,GAAMtO,OAAO,eC0BtC5N,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,GACN4C,OAAQ,CACN/B,YAAa3C,EAAM4C,QAAQ,QAmJhBmJ,GA/IC,SAAC,GAAsC,IAApC/I,EAAmC,EAAnCA,UAAWsU,EAAwB,EAAxBA,SAAanU,EAAW,yCAC9CC,EAAUlI,KACViU,EAAWC,cAFmC,EAIAvI,mBAAS,IAJT,mBAI7C0Q,EAJ6C,KAIzBC,EAJyB,OAK1B3Q,mBAAS,IALiB,mBAK7CsF,EAL6C,KAKtCC,EALsC,OAM5BvF,mBAAS,GANmB,mBAM7CwF,EAN6C,KAMvCC,EANuC,KAuD9CmL,EAA0B,SAACpK,GAC/B8B,ECnF2C,CAC7C7V,KAAMK,EACNJ,QDiF6B8T,KAG7B,OACE,eAAC5E,GAAA,EAAD,yBAAMzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAAgBG,GAApD,cACE,cAAC,KAAD,UACE,cAACgC,EAAA,EAAD,CAAKoH,SAAU,KAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWpR,QAAQ,WAAnB,SACE,cAACqR,GAAA,EAAD,CACEC,QAAS0K,EAAmBlQ,SAAWiQ,EAASjQ,OAChD/E,MAAM,UACNwK,cACEyK,EAAmBlQ,OAAS,GAC5BkQ,EAAmBlQ,OAASiQ,EAASjQ,OAEvCoD,SAlEM,SAACZ,GACvB,IAAI6N,EAGFA,EADE7N,EAAMC,OAAO+C,QACSyK,EAASxR,KAAI,SAACpL,GAAD,OAAaA,EAAQuS,OAElC,GAG1BuK,EAAsBE,QA4DV,cAAC/K,GAAA,EAAD,oCACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,0BACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,gCACA,cAACA,GAAA,EAAD,2BAGJ,cAACO,GAAA,EAAD,UACGoK,EAAShM,MAAM,EAAGa,GAAOrG,KAAI,SAACpL,GAAD,OAC5B,eAACgS,GAAA,EAAD,CACES,OAAK,EAELC,UAAuD,IAA7CmK,EAAmB3Y,QAAQlE,EAAQuS,KAH/C,UAKE,cAACN,GAAA,EAAD,CAAWpR,QAAQ,WAAnB,SACE,cAACqR,GAAA,EAAD,CACEC,SAAsD,IAA7C0K,EAAmB3Y,QAAQlE,EAAQuS,KAC5CxC,SAAU,SAACZ,GAAD,OA5EN,SAACA,EAAOwD,GAC9B,IAAMC,EAAgBiK,EAAmB3Y,QAAQyO,GAC7CqK,EAAwB,IAEL,IAAnBpK,EACFoK,EAAwBA,EAAsBnK,OAC5CgK,EACAlK,GAEyB,IAAlBC,EACToK,EAAwBA,EAAsBnK,OAC5CgK,EAAmBjM,MAAM,IAElBgC,IAAkBiK,EAAmBlQ,OAAS,EACvDqQ,EAAwBA,EAAsBnK,OAC5CgK,EAAmBjM,MAAM,GAAI,IAEtBgC,EAAgB,IACzBoK,EAAwBA,EAAsBnK,OAC5CgK,EAAmBjM,MAAM,EAAGgC,GAC5BiK,EAAmBjM,MAAMgC,EAAgB,KAI7CkK,EAAsBE,GAoDiBlK,CAAgB3D,EAAOnP,EAAQuS,MACpD/D,MAAM,WAGV,cAACyD,GAAA,EAAD,UACE,cAAC,GAAD,CAAajH,KAAMhL,EAAQid,SAASC,gBAEtC,cAACjL,GAAA,EAAD,UACE,cAAC,GAAD,CAAOf,MAAOlR,EAAQkR,UAExB,cAACe,GAAA,EAAD,UAAYb,GAAYpR,EAAQmI,SAChC,cAAC8J,GAAA,EAAD,UACGkL,GAAQ/L,GAAYpR,EAAQod,gBAE/B,cAACnL,GAAA,EAAD,UAAYb,GAAYpR,EAAQqd,SAChC,cAACpL,GAAA,EAAD,UAAYqL,GAAQtd,EAAQqT,aAC5B,cAACpB,GAAA,EAAD,UACE,cAACzF,GAAA,EAAD,CACEI,QAAS,kBAAMmQ,EAAwB/c,EAAQuS,MADjD,SAGE,cAAC,KAAD,CAAgB3K,MAAM,kBA1BrB5H,EAAQuS,iBAmCzB,cAACe,GAAA,EAAD,CACEtK,UAAU,MACVuK,MAAOqJ,EAASjQ,OAChB6G,aA7EmB,SAACrE,EAAOsE,GAC/B7B,EAAQ6B,IA6EJC,oBAlFoB,SAACvE,GACzBuC,EAASvC,EAAMC,OAAOZ,QAkFlBmD,KAAMA,EACNgC,YAAalC,EACbmC,mBAAoB,CAAC,EAAG,GAAI,W,gHEhJrB2J,GAjBO,SAAC,GAOhB,IANL3Q,EAMI,EANJA,QACA4Q,EAKI,EALJA,SACAC,EAII,EAJJA,SACAtV,EAGI,EAHJA,MACAyF,EAEI,EAFJA,SACA8P,EACI,EADJA,UAEA,OACE,cAAC,KAAD,CAASvV,MAAOA,EAAOuV,UAAWA,EAAWpV,UAAWkV,EAAxD,SACE,cAAChR,GAAA,EAAD,CAAYI,QAASA,EAAStE,UAAWmV,EAAzC,SACG7P,OCcHpN,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCqY,UAAW,CACT3c,MAAO,QAET4c,QAAS,CACPlX,SAAUpB,EAAMiB,WAAWsX,QAAQ,IACnCpX,WAAYnB,EAAMiB,WAAWuX,mBAE/B9T,OAAQ,CACN9I,gBAAiB6c,KAAK,KACtBnW,MAAOmW,KAAK,MAEdC,eAAgB,CACdrT,WAAY,SACZtD,UAAW,SACX2U,UAAW,IAEbiC,YAAa,CACX5J,SAAU,WACVvS,MAAO,OACPC,IAAK,OAEPmc,WAAY,CACV7W,UAAW,SACXxG,QAAS,GAEXsd,SAAU,CACRvd,OAAQ,QACR4G,QAAS,OACTmD,WAAY,YAEdyT,iBAAkB,OA0HLC,GAvHA,WACb,IAAM3V,EAAUlI,KACViU,EAAWC,cAFE,EAIWvI,mBAAS,IAJpB,mBAIZnM,EAJY,KAIHse,EAJG,OAMmC1J,aACpD,SAACjW,GAAD,OAAWA,EAAMqB,WADXb,EANW,EAMXA,SAAwBwM,EANb,EAMDvM,aAA0Bmf,EANzB,EAMmB9f,KAItC6L,qBAAU,WACR,GAAInL,EAAU,CACZ,IAAMiF,EAAQma,EAAMC,WAAU,SAACjX,GAAD,OAAUA,EAAKgL,MAAQpT,MACtC,IAAXiF,GACFka,EAAWC,EAAMna,OAGpB,CAACjF,EAAUof,IAEd,IAAME,EAAc,WAClBhK,EFxEqC,CACvC7V,KAAMM,KE0EN,OACE,eAAC,KAAD,CACEwM,QAAS+S,EACTC,kBAAgB,sBAChB/S,KAAMA,EACN6E,SAAS,KAJX,UAME,eAACmO,GAAA,EAAD,CAAahM,GAAG,sBAAhB,UACE,cAAC,GAAD,CACExK,MAAM,QACNyE,QAAS6R,EACThB,SAAU/U,EAAQuV,YAHpB,SAKE,cAAC,KAAD,MAEF,cAAClT,EAAA,EAAD,CAAYE,QAAQ,KAApB,gCAEF,cAAC,KAAD,UACGjL,EAAQmI,OACP,eAACsH,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAMlI,MAAI,EAACoI,GAAI,GAAf,UACE,qBAAKrH,UAAWI,EAAQsV,eAAxB,SACE,cAAC,GAAD,CAAO9M,MAAOlR,EAAQkR,MAAOoL,YAAU,MAEzC,sBAAKhU,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,wBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG5H,EAAQmI,WAGb,sBAAKG,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,8BACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG5H,EAAQod,iBAGb,sBAAK9U,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,wBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG5H,EAAQqd,WAIb,eAACtS,EAAA,EAAD,CACEzC,UAAWI,EAAQyV,SACnBlT,QAAQ,UACRrD,MAAM,gBAHR,gCAKsB0V,GAAQtd,EAAQqT,iBAGxC,cAAC5D,GAAA,EAAD,CAAMlI,MAAI,EAACoI,GAAI,GAAf,SACE,qBAAKrH,UAAWI,EAAQiV,UAAxB,SACE,eAACiB,GAAA,EAAD,CAAW9C,WAAiB,OAAP9b,QAAO,IAAPA,OAAA,EAAAA,EAASid,UAA9B,UACE,cAAC4B,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZC,gBAAc,kBACdpM,GAAG,iBAHL,SAKE,cAAC5H,EAAA,EAAD,CAAYzC,UAAWI,EAAQkV,QAA/B,8BAIF,cAACoB,GAAA,EAAD,CAAkB1W,UAAWI,EAAQ0V,iBAArC,SACE,gCACE,cAAC,GAAD,CAAapT,KAAMhL,EAAQid,SAASC,cACpC,sBAAK5U,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,yBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACGwJ,GAAYpR,EAAQid,SAASlK,aAGlC,sBAAKzK,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,0BACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACGwJ,GAAYpR,EAAQid,SAASgC,cAGlC,sBAAK3W,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,uBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACGwJ,GAAYpR,EAAQid,SAAS7J,gCCzJlD5S,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C2K,UAAW,OACX3I,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAmCfgX,GA/BQ,WACrB,IAAMxW,EAAUlI,KACViU,EAAWC,cAEXyK,EAAcvK,aAAY,SAACjW,GAAD,OAAWA,EAAMqB,QAAQvB,QAEzD6L,qBAAU,WACRuK,MACC,IAEH,IAAMA,EAAS,yCAAG,+BAAA1T,EAAA,+EAES2T,IAAMC,IAAI,YAFnB,gBAENtW,EAFM,EAENA,KACRgW,GHnCqB5V,EGmCDJ,EAAKA,KAAKme,SHnCI,CACtChe,KAAMI,EACNH,aG8BkB,gDAKdoW,QAAQC,IAAR,MALc,kCHhCM,IAACrW,IGgCP,oBAAH,qDAQf,OACE,eAAC,GAAD,CAAMyJ,UAAWI,EAAQtB,KAAMe,MAAM,WAArC,UACE,eAACoI,GAAA,EAAD,CAAWC,UAAU,EAArB,UACE,cAAC,GAAD,CAAcrI,MAAM,UAAU6L,eAAa,IAC3C,cAACvJ,EAAA,EAAD,CAAKwJ,GAAI,EAAT,SACE,cAAC,GAAD,CAAS2I,SAAUuC,SAGvB,cAAC,GAAD,QCzBA3e,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,GACN4C,OAAQ,CACN/B,YAAa3C,EAAM4C,QAAQ,QA4JhBmJ,GAxJC,SAAC,GAAsC,IAApC/I,EAAmC,EAAnCA,UAAW8W,EAAwB,EAAxBA,SAAa3W,EAAW,yCAC9CC,EAAUlI,KACViU,EAAWC,cAFmC,EAIAvI,mBAAS,IAJT,mBAI7CkT,EAJ6C,KAIzBC,EAJyB,OAK1BnT,mBAAS,IALiB,mBAK7CsF,EAL6C,KAKtCC,EALsC,OAM5BvF,mBAAS,GANmB,mBAM7CwF,EAN6C,KAMvCC,EANuC,KAuD9C2N,EAA0B,SAAC5M,GAC/B8B,ECjF2C,CAC7C7V,KAAMW,EACNV,QD+E6B8T,KAG7B,OACE,eAAC5E,GAAA,EAAD,yBAAMzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAAgBG,GAApD,cACE,cAAC,KAAD,UACE,cAACgC,EAAA,EAAD,CAAKoH,SAAU,KAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWpR,QAAQ,WAAnB,SACE,cAACqR,GAAA,EAAD,CACEC,QAASkN,EAAmB1S,SAAWyS,EAASzS,OAChD/E,MAAM,UACNwK,cACEiN,EAAmB1S,OAAS,GAC5B0S,EAAmB1S,OAASyS,EAASzS,OAEvCoD,SAlEM,SAACZ,GACvB,IAAIqQ,EAGFA,EADErQ,EAAMC,OAAO+C,QACSiN,EAAShU,KAAI,SAACnL,GAAD,OAAaA,EAAQsS,OAElC,GAG1B+M,EAAsBE,QA4DV,cAACvN,GAAA,EAAD,oCACA,cAACA,GAAA,EAAD,2BACA,cAACA,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,0BACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,yBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,4BACA,cAACA,GAAA,EAAD,2BAGJ,cAACO,GAAA,EAAD,UACG4M,EAASxO,MAAM,EAAGa,GAAOrG,KAAI,SAACnL,GAAD,OAC5B,eAAC+R,GAAA,EAAD,CACES,OAAK,EAELC,UAAuD,IAA7C2M,EAAmBnb,QAAQjE,EAAQsS,KAH/C,UAKE,cAACN,GAAA,EAAD,CAAWpR,QAAQ,WAAnB,SACE,cAACqR,GAAA,EAAD,CACEC,SAAsD,IAA7CkN,EAAmBnb,QAAQjE,EAAQsS,KAC5CxC,SAAU,SAACZ,GAAD,OAhFN,SAACA,EAAOwD,GAC9B,IAAMC,EAAgByM,EAAmBnb,QAAQyO,GAC7C6M,EAAwB,IAEL,IAAnB5M,EACF4M,EAAwBA,EAAsB3M,OAC5CwM,EACA1M,GAEyB,IAAlBC,EACT4M,EAAwBA,EAAsB3M,OAC5CwM,EAAmBzO,MAAM,IAElBgC,IAAkByM,EAAmB1S,OAAS,EACvD6S,EAAwBA,EAAsB3M,OAC5CwM,EAAmBzO,MAAM,GAAI,IAEtBgC,EAAgB,IACzB4M,EAAwBA,EAAsB3M,OAC5CwM,EAAmBzO,MAAM,EAAGgC,GAC5ByM,EAAmBzO,MAAMgC,EAAgB,KAI7C0M,EAAsBE,GAwDiB1M,CAAgB3D,EAAOlP,EAAQsS,MACpD/D,MAAM,WAGV,cAACyD,GAAA,EAAD,UAAYhS,EAAQgd,SAASC,cAC7B,cAACjL,GAAA,EAAD,UAAYhS,EAAQwf,UAAUtX,QAC9B,cAAC8J,GAAA,EAAD,UAAYb,GAAYnR,EAAQyf,OAAO1U,QACvC,cAACiH,GAAA,EAAD,UACGkL,GAAQ/L,GAAYnR,EAAQmd,gBAE/B,cAACnL,GAAA,EAAD,UACGhS,EAAQ0f,mBAAqB,KAAO,QAEvC,cAAC1N,GAAA,EAAD,UAAYb,GAAYnR,EAAQ2f,aAChC,cAAC3N,GAAA,EAAD,UAAYb,GAAYnR,EAAQ4f,gBAChC,cAAC5N,GAAA,EAAD,UACGb,GAAYnR,EAAQ6f,sBAEvB,cAAC7N,GAAA,EAAD,UAAYhS,EAAQyc,OACpB,cAACzK,GAAA,EAAD,UAAYhS,EAAQ8f,OAEpB,cAAC9N,GAAA,EAAD,UACE,cAACzF,GAAA,EAAD,CACEI,QAAS,kBAAM2S,EAAwBtf,EAAQsS,MADjD,SAGE,cAAC,KAAD,CAAgB3K,MAAM,kBA/BrB3H,EAAQsS,iBAwCzB,cAACe,GAAA,EAAD,CACEtK,UAAU,MACVuK,MAAO6L,EAASzS,OAChB6G,aAtFmB,SAACrE,EAAOsE,GAC/B7B,EAAQ6B,IAsFJC,oBA3FoB,SAACvE,GACzBuC,EAASvC,EAAMC,OAAOZ,QA2FlBmD,KAAMA,EACNgC,YAAalC,EACbmC,mBAAoB,CAAC,EAAG,GAAI,WE/I9BpT,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvCqY,UAAW,CACT3c,MAAO,QAET4c,QAAS,CACPlX,SAAUpB,EAAMiB,WAAWsX,QAAQ,IACnCpX,WAAYnB,EAAMiB,WAAWuX,mBAE/B9T,OAAQ,CACN9I,gBAAiB6c,KAAK,KACtBnW,MAAOmW,KAAK,MAEdC,eAAgB,CACdrT,WAAY,SACZtD,UAAW,SACX2U,UAAW,IAEbiC,YAAa,CACX5J,SAAU,WACVvS,MAAO,OACPC,IAAK,OAEPmc,WAAY,CACV7W,UAAW,SACXxG,QAAS,GAEXsd,SAAU,CACRvd,OAAQ,QACR4G,QAAS,OACTmD,WAAY,YAEdyT,iBAAkB,OAiOLC,GA9NA,WACb,IAAM3V,EAAUlI,KACViU,EAAWC,cAFE,EAIWvI,mBAAS,IAJpB,mBAIZlM,EAJY,KAIH+f,EAJG,OAMmCpL,aACpD,SAACjW,GAAD,OAAWA,EAAMsB,WADXd,EANW,EAMXA,SAAwBwM,EANb,EAMDvM,aAA0Bmf,EANzB,EAMmB9f,KAItC6L,qBAAU,WACR,GAAInL,EAAU,CACZ,IAAMiF,EAAQma,EAAMC,WAAU,SAACjX,GAAD,OAAUA,EAAKgL,MAAQpT,MACtC,IAAXiF,GACF4b,EAAWzB,EAAMna,OAGpB,CAACjF,EAAUof,IAEd,IAAME,EAAc,WAClBhK,EDxEqC,CACvC7V,KAAMY,KC0EN,OACE,eAAC,KAAD,CACEkM,QAAS+S,EACTC,kBAAgB,sBAChB/S,KAAMA,EACN6E,SAAS,KAJX,UAME,eAACmO,GAAA,EAAD,CAAahM,GAAG,sBAAhB,UACE,cAAC,GAAD,CACExK,MAAM,QACNyE,QAAS6R,EACThB,SAAU/U,EAAQuV,YAHpB,SAKE,cAAC,KAAD,MAEF,cAAClT,EAAA,EAAD,CAAYE,QAAQ,KAApB,gCAEF,cAAC,KAAD,UACGhL,EAAQgd,UACP,eAACxN,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAMlI,MAAI,EAACoI,GAAI,GAAf,UACE,sBAAKrH,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,8BACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQmd,iBAIb,sBAAK9U,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,4BACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQ2f,eAIb,sBAAKtX,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,wBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQ4f,kBAIb,sBAAKvX,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,8BACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQ6f,wBAIb,sBAAKxX,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,8BACA,eAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,UACG3H,EAAQyc,KADX,QACwBzc,EAAQ8f,WAIlC,eAAChV,EAAA,EAAD,CACEzC,UAAW,CAACI,EAAQyV,SAAU,CAAE8B,WAAY,SAAUlP,KAAK,KAC3D9F,QAAQ,UACRrD,MAAM,gBAHR,gCAKsB0V,GAAQrd,EAAQoT,iBAGxC,cAAC5D,GAAA,EAAD,CAAMlI,MAAI,EAACoI,GAAI,GAAf,SACE,sBAAKrH,UAAWI,EAAQiV,UAAxB,UACE,eAACiB,GAAA,EAAD,CAAW9C,WAAiB,OAAP7b,QAAO,IAAPA,OAAA,EAAAA,EAASyf,QAA9B,UACE,cAACb,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,SACE,cAAC/T,EAAA,EAAD,CAAYzC,UAAWI,EAAQkV,QAA/B,4BAIF,cAACoB,GAAA,EAAD,UACE,gCACE,sBAAK1W,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,uBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQyf,OAAO1U,UAIpB,sBAAK1C,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,wBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQyf,OAAO7Q,WAIpB,sBAAKvG,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,2BACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACGwJ,GAAYnR,EAAQyf,OAAOthB,eAIhC,sBAAKkK,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,yBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACGwJ,GAAYnR,EAAQyf,OAAO1M,aAIhC,eAACjI,EAAA,EAAD,CACEzC,UAAWI,EAAQyV,SACnBlT,QAAQ,UACRrD,MAAM,gBAHR,6BAMG0V,GAAQrd,EAAQwf,UAAUpM,sBAMnC,eAACuL,GAAA,EAAD,CAAW9C,WAAiB,OAAP7b,QAAO,IAAPA,OAAA,EAAAA,EAASwf,WAA9B,UACE,cAACZ,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,SACE,cAAC/T,EAAA,EAAD,CAAYzC,UAAWI,EAAQkV,QAA/B,+BAIF,cAACoB,GAAA,EAAD,UACE,sBAAK9E,MAAO,CAAEtZ,OAAQ,QAAtB,UACE,qBAAK0H,UAAWI,EAAQsV,eAAxB,SACE,cAAC,GAAD,CAAO9M,MAAOjR,EAAQwf,UAAUvO,MAAOoL,YAAU,MAEnD,sBAAKhU,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,wBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQwf,UAAUtX,WAGvB,sBAAKG,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,8BACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQwf,UAAUrC,iBAGvB,sBAAK9U,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,wBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACG3H,EAAQwf,UAAUpC,WAIvB,eAACtS,EAAA,EAAD,CACEzC,UAAWI,EAAQyV,SACnBlT,QAAQ,UACRrD,MAAM,gBAHR,4BAMG0V,GAAQrd,EAAQwf,UAAUpM,sBAMnC,eAACuL,GAAA,EAAD,CAAW9C,WAAiB,OAAP7b,QAAO,IAAPA,OAAA,EAAAA,EAASgd,UAA9B,UACE,cAAC4B,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZC,gBAAc,kBACdpM,GAAG,iBAHL,SAKE,cAAC5H,EAAA,EAAD,CAAYzC,UAAWI,EAAQkV,QAA/B,8BAIF,cAACoB,GAAA,EAAD,UACE,gCACE,cAAC,GAAD,CAAahU,KAAM/K,EAAQgd,SAASC,cACpC,sBAAK5U,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,yBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACGwJ,GAAYnR,EAAQgd,SAASlK,aAGlC,sBAAKzK,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,0BACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACGwJ,GAAYnR,EAAQgd,SAASgC,cAGlC,sBAAK3W,UAAWI,EAAQyV,SAAxB,UACE,cAACpT,EAAA,EAAD,CAAYE,QAAQ,KAApB,uBACA,cAACF,EAAA,EAAD,CAAYE,QAAQ,KAAKrD,MAAM,gBAA/B,SACGwJ,GAAYnR,EAAQgd,SAAS7J,iCChQlD5S,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C2K,UAAW,OACX3I,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAoCfgY,GAhCS,WACtB,IAAMxX,EAAUlI,KACViU,EAAWC,cAEXyL,EAAcvL,aAAY,SAACjW,GAAD,OAAWA,EAAMsB,QAAQxB,QAEzD6L,qBAAU,WACRuK,MACC,IAEH,IAAMA,EAAS,yCAAG,+BAAA1T,EAAA,+EAES2T,IAAMC,IAAI,YAFnB,gBAENtW,EAFM,EAENA,KACRwW,QAAQC,IAAIzW,GACZgW,GFpCqB5V,EEoCDJ,EAAKA,KAAK2gB,SFpCI,CACtCxgB,KAAMU,EACNT,aE8BkB,gDAMdoW,QAAQC,IAAR,MANc,kCFhCM,IAACrW,IEgCP,oBAAH,qDASf,OACE,eAAC,GAAD,CAAMyJ,UAAWI,EAAQtB,KAAMe,MAAM,WAArC,UACE,eAACoI,GAAA,EAAD,CAAWC,UAAU,EAArB,UACE,cAAC,GAAD,CAAcrI,MAAM,UAAU6L,eAAa,IAC3C,cAACvJ,EAAA,EAAD,CAAKwJ,GAAI,EAAT,SACE,cAAC,GAAD,CAASmL,SAAUe,SAGvB,cAAC,GAAD,Q,UClCA3f,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C3E,OAAQ,OACR2G,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAsKfkY,GAlKM,WACnB,IAAM1X,EAAUlI,KACVka,EAAWC,cAEjB,OACE,cAAC,GAAD,CAAMrS,UAAWI,EAAQtB,KAAMe,MAAM,WAArC,SACE,cAACsC,EAAA,EAAD,CACEjD,QAAQ,OACRkD,cAAc,SACd3J,OAAO,OACP+G,eAAe,SAJjB,SAME,cAACyI,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,KAAD,CACEoK,cAAe,CACb/L,MAAO,GACPF,UAAW,GACXC,SAAU,GACViM,SAAU,GACVwF,QAAQ,GAEVvF,iBAAkBC,OAAaC,MAAM,CACnCnM,MAAOkM,OACJlM,MAAM,yBACNoM,IAAI,KACJjL,SAAS,qBACZrB,UAAWoM,OACRE,IAAI,KACJjL,SAAS,0BACZpB,SAAUmM,OACPE,IAAI,KACJjL,SAAS,yBACZ6K,SAAUE,OACPE,IAAI,KACJjL,SAAS,wBACZqQ,OAAQtF,OAAcuF,MAAM,EAAC,GAAO,gCAEtCpF,SAAU,WACRR,EAAS,iBAAkB,CAAEhK,SAAS,KAzB1C,SA4BG,gBACCyK,EADD,EACCA,OACAC,EAFD,EAECA,WACAlM,EAHD,EAGCA,aACAmM,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAvM,EAPD,EAOCA,OAPD,OASC,uBAAMkM,SAAUG,EAAhB,UACE,eAAC5Q,EAAA,EAAD,CAAK+Q,GAAI,EAAT,UACE,cAACzQ,EAAA,EAAD,CAAYnD,MAAM,cAAcqD,QAAQ,KAAxC,gCAGA,cAACF,EAAA,EAAD,CACEnD,MAAM,gBACNqG,cAAY,EACZhD,QAAQ,QAHV,qDAQF,cAAC4E,GAAA,EAAD,CACE8L,MAAOzd,QAAQqd,EAAQ5M,WAAawM,EAAOxM,WAC3CL,WAAS,EACTwB,WAAYyL,EAAQ5M,WAAawM,EAAOxM,UACxCF,MAAM,aACN7N,OAAO,SACPoK,KAAK,YACL4Q,OAAQR,EACRrL,SAAUb,EACVV,MAAOQ,EAAOL,UACd1D,QAAQ,aAEV,cAAC4E,GAAA,EAAD,CACE8L,MAAOzd,QAAQqd,EAAQ3M,UAAYuM,EAAOvM,UAC1CN,WAAS,EACTwB,WAAYyL,EAAQ3M,UAAYuM,EAAOvM,SACvCH,MAAM,YACN7N,OAAO,SACPoK,KAAK,WACL4Q,OAAQR,EACRrL,SAAUb,EACVV,MAAOQ,EAAOJ,SACd3D,QAAQ,aAEV,cAAC4E,GAAA,EAAD,CACE8L,MAAOzd,QAAQqd,EAAQ1M,OAASsM,EAAOtM,OACvCP,WAAS,EACTwB,WAAYyL,EAAQ1M,OAASsM,EAAOtM,MACpCJ,MAAM,gBACN7N,OAAO,SACPoK,KAAK,QACL4Q,OAAQR,EACRrL,SAAUb,EACVtQ,KAAK,QACL4P,MAAOQ,EAAOH,MACd5D,QAAQ,aAEV,cAAC4E,GAAA,EAAD,CACE8L,MAAOzd,QAAQqd,EAAQV,UAAYM,EAAON,UAC1CvM,WAAS,EACTwB,WAAYyL,EAAQV,UAAYM,EAAON,SACvCpM,MAAM,WACN7N,OAAO,SACPoK,KAAK,WACL4Q,OAAQR,EACRrL,SAAUb,EACVtQ,KAAK,WACL4P,MAAOQ,EAAO6L,SACd5P,QAAQ,aAEV,eAACR,EAAA,EAAD,CAAKE,WAAW,SAASnD,QAAQ,OAAO+Y,IAAK,EAA7C,UACE,cAACrO,GAAA,EAAD,CACEC,QAASnD,EAAOqR,OAChBrV,KAAK,SACL+E,SAAUb,IAEZ,eAACnE,EAAA,EAAD,CAAYnD,MAAM,gBAAgBqD,QAAQ,QAA1C,4BACkB,IAChB,cAAC8Q,GAAA,EAAD,CACEnU,MAAM,UACNoB,UAAWC,IACXC,GAAG,IACHsX,UAAU,SACVvV,QAAQ,KALV,wCAWH/M,QAAQqd,EAAQ8E,QAAUlF,EAAOkF,SAChC,cAACI,GAAA,EAAD,CAAgB9E,OAAK,EAArB,SAAuBR,EAAOkF,SAEhC,cAAC5V,EAAA,EAAD,CAAKoR,GAAI,EAAT,SACE,cAAC/S,GAAA,EAAD,CACElB,MAAM,UACNkU,SAAUR,EACVhN,WAAS,EACTnF,KAAK,QACLvK,KAAK,SACLqM,QAAQ,YANV,2BAWF,eAACF,EAAA,EAAD,CAAYnD,MAAM,gBAAgBqD,QAAQ,QAA1C,6BACmB,IACjB,cAAC8Q,GAAA,EAAD,CAAM/S,UAAWC,IAAYC,GAAG,SAAS+B,QAAQ,KAAjD,qC,UC9JZzK,GAAYC,YAAY,CAC5B2G,KAAM,GACNG,KAAM,CACJC,QAAS,OACTkD,cAAe,YAoHJgW,GAhHO,SAAC,GAA4B,IAA1BpY,EAAyB,EAAzBA,UAAcG,EAAW,8BAC1CC,EAAUlI,KAEhB,OACE,8CACE8H,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,aAIE,eAACsF,GAAA,EAAD,WACE,cAACwB,GAAA,EAAD,CACEC,UAAU,2BACVrH,MAAM,kBAER,cAAC+C,EAAA,EAAD,IACA,cAAC8C,GAAA,EAAD,UACE,eAACyB,GAAA,EAAD,CACEC,WAAS,EACTxH,QAAS,EACTyY,KAAK,OAHP,UAKE,eAAClR,GAAA,EAAD,CACEnH,UAAWI,EAAQnB,KACnBA,MAAI,EACJoI,GAAI,EACJyK,GAAI,EACJxK,GAAI,GALN,UAOE,cAAC7E,EAAA,EAAD,CACEnD,MAAM,cACNqG,cAAY,EACZhD,QAAQ,KAHV,2BAOA,cAAC2V,GAAA,EAAD,CACEC,QACE,cAAC3O,GAAA,EAAD,CAAU4O,gBAAc,IAE1BrS,MAAM,UAER,cAACmS,GAAA,EAAD,CACEC,QACE,cAAC3O,GAAA,EAAD,CAAU4O,gBAAc,IAE1BrS,MAAM,uBAER,cAACmS,GAAA,EAAD,CACEC,QAAS,cAAC3O,GAAA,EAAD,IACTzD,MAAM,kBAER,cAACmS,GAAA,EAAD,CACEC,QACE,cAAC3O,GAAA,EAAD,CAAU4O,gBAAc,IAE1BrS,MAAM,mBAGV,eAACgB,GAAA,EAAD,CACEnH,UAAWI,EAAQnB,KACnBA,MAAI,EACJoI,GAAI,EACJyK,GAAI,EACJxK,GAAI,GALN,UAOE,cAAC7E,EAAA,EAAD,CACEnD,MAAM,cACNqG,cAAY,EACZhD,QAAQ,KAHV,sBAOA,cAAC2V,GAAA,EAAD,CACEC,QACE,cAAC3O,GAAA,EAAD,CAAU4O,gBAAc,IAE1BrS,MAAM,UAER,cAACmS,GAAA,EAAD,CACEC,QAAS,cAAC3O,GAAA,EAAD,IACTzD,MAAM,uBAER,cAACmS,GAAA,EAAD,CACEC,QACE,cAAC3O,GAAA,EAAD,CAAU4O,gBAAc,IAE1BrS,MAAM,wBAKd,cAACvD,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CACEjD,QAAQ,OACRM,eAAe,WACf8C,EAAG,EAHL,SAKE,cAAC9B,GAAA,EAAD,CACElB,MAAM,UACNqD,QAAQ,YAFV,2BC3GJzK,GAAYC,YAAY,CAC5B2G,KAAM,KAwEO2Z,GArEE,SAAC,GAA4B,IAA1BzY,EAAyB,EAAzBA,UAAcG,EAAW,8BACrCC,EAAUlI,KAD2B,EAEf2L,mBAAS,CACnC0O,SAAU,GACVmG,QAAS,KAJgC,mBAEpChS,EAFoC,KAE5BC,EAF4B,KAOrCC,EAAe,SAACC,GACpBF,EAAU,2BACLD,GADI,kBAENG,EAAMC,OAAOpE,KAAOmE,EAAMC,OAAOZ,UAItC,OACE,8CACElG,UAAWM,aAAKF,EAAQtB,KAAMkB,IAC1BG,GAFN,aAIE,eAACsF,GAAA,EAAD,WACE,cAACwB,GAAA,EAAD,CACEC,UAAU,kBACVrH,MAAM,aAER,cAAC+C,EAAA,EAAD,IACA,eAAC8C,GAAA,EAAD,WACE,cAAC6B,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,WACN7N,OAAO,SACPoK,KAAK,WACL+E,SAAUb,EACVtQ,KAAK,WACL4P,MAAOQ,EAAO6L,SACd5P,QAAQ,aAEV,cAAC4E,GAAA,EAAD,CACEvB,WAAS,EACTG,MAAM,mBACN7N,OAAO,SACPoK,KAAK,UACL+E,SAAUb,EACVtQ,KAAK,WACL4P,MAAOQ,EAAOgS,QACd/V,QAAQ,gBAGZ,cAACC,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CACEjD,QAAQ,OACRM,eAAe,WACf8C,EAAG,EAHL,SAKE,cAAC9B,GAAA,EAAD,CACElB,MAAM,UACNqD,QAAQ,YAFV,6BCjEJzK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C2K,UAAW,OACX3I,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAmBf+Y,GAfM,WACnB,IAAMvY,EAAUlI,KAEhB,OACE,cAAC,GAAD,CAAM8H,UAAWI,EAAQtB,KAAMe,MAAM,WAArC,SACE,eAACoI,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,GAAD,IACA,cAAC/F,EAAA,EAAD,CAAKwJ,GAAI,EAAT,SACE,cAAC,GAAD,YCAJzT,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,GACN4C,OAAQ,CACN/B,YAAa3C,EAAM4C,QAAQ,QA8HhBmJ,GA1HC,SAAC,GAAqC,IAAnC/I,EAAkC,EAAlCA,UAAW4Y,EAAuB,EAAvBA,QAAYzY,EAAW,wCAC7CC,EAAUlI,KADmC,EAED2L,mBAAS,IAFR,mBAE5CgV,EAF4C,KAEzBC,EAFyB,OAGzBjV,mBAAS,IAHgB,mBAG5CsF,EAH4C,KAGrCC,EAHqC,OAI3BvF,mBAAS,GAJkB,mBAI5CwF,EAJ4C,KAItCC,EAJsC,KAkDnD,OACE,eAAC7D,GAAA,EAAD,yBAAMzF,UAAWM,aAAKF,EAAQtB,KAAMkB,IAAgBG,GAApD,cACE,cAAC,KAAD,UACE,cAACgC,EAAA,EAAD,CAAKoH,SAAU,KAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWpR,QAAQ,WAAnB,SACE,cAACqR,GAAA,EAAD,CACEC,QAASgP,EAAkBxU,SAAWuU,EAAQvU,OAC9C/E,MAAM,UACNwK,cACE+O,EAAkBxU,OAAS,GAC3BwU,EAAkBxU,OAASuU,EAAQvU,OAErCoD,SA3DM,SAACZ,GACvB,IAAIkS,EAGFA,EADElS,EAAMC,OAAO+C,QACQ+O,EAAQ9V,KAAI,SAACrL,GAAD,OAAYA,EAAOwS,OAE/B,GAGzB6O,EAAqBC,QAqDT,cAACpP,GAAA,EAAD,2BACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,qCAGJ,cAACO,GAAA,EAAD,UACG0O,EAAQtQ,MAAM,EAAGa,GAAOrG,KAAI,SAACrL,GAAD,OAC3B,eAACiS,GAAA,EAAD,CACES,OAAK,EAELC,UAAqD,IAA3CyO,EAAkBjd,QAAQnE,EAAOwS,KAH7C,UAKE,cAACN,GAAA,EAAD,CAAWpR,QAAQ,WAAnB,SACE,cAACqR,GAAA,EAAD,CACEC,SAAoD,IAA3CgP,EAAkBjd,QAAQnE,EAAOwS,KAC1CxC,SAAU,SAACZ,GAAD,OAnEN,SAACA,EAAOwD,GAC9B,IAAMC,EAAgBuO,EAAkBjd,QAAQyO,GAC5C0O,EAAuB,IAEJ,IAAnBzO,EACFyO,EAAuBA,EAAqBxO,OAAOsO,EAAmBxO,GAC3C,IAAlBC,EACTyO,EAAuBA,EAAqBxO,OAC1CsO,EAAkBvQ,MAAM,IAEjBgC,IAAkBuO,EAAkBxU,OAAS,EACtD0U,EAAuBA,EAAqBxO,OAC1CsO,EAAkBvQ,MAAM,GAAI,IAErBgC,EAAgB,IACzByO,EAAuBA,EAAqBxO,OAC1CsO,EAAkBvQ,MAAM,EAAGgC,GAC3BuO,EAAkBvQ,MAAMgC,EAAgB,KAI5CwO,EAAqBC,GA8CkBvO,CAAgB3D,EAAOpP,EAAOwS,MACnD/D,MAAM,WAGV,cAACyD,GAAA,EAAD,UACE,cAAC,GAAD,CAAajH,KAAMjL,EAAOmd,gBAE5B,cAACjL,GAAA,EAAD,UAAYb,GAAYrR,EAAOgT,UAC/B,cAACd,GAAA,EAAD,UAAYb,GAAYrR,EAAOkf,WAC/B,cAAChN,GAAA,EAAD,UAAYb,GAAYrR,EAAOqT,QAC/B,cAACnB,GAAA,EAAD,UACG9D,KAAOpO,EAAOsT,WAAWjF,OAAO,kBAjB9BrO,EAAOwS,iBAyBxB,cAACe,GAAA,EAAD,CACEtK,UAAU,MACVuK,MAAO2N,EAAQvU,OACf6G,aA7DmB,SAACrE,EAAOsE,GAC/B7B,EAAQ6B,IA6DJC,oBAlEoB,SAACvE,GACzBuC,EAASvC,EAAMC,OAAOZ,QAkElBmD,KAAMA,EACNgC,YAAalC,EACbmC,mBAAoB,CAAC,EAAG,GAAI,WChI9BpT,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC8B,KAAM,CACJlG,gBAAiBoE,EAAME,QAAQC,WAAWC,KAC1C2K,UAAW,OACX3I,cAAepC,EAAM4C,QAAQ,GAC7BT,WAAYnC,EAAM4C,QAAQ,QAkCfgX,GA9BQ,WACrB,IAAMxW,EAAUlI,KACViU,EAAWC,cAEX4M,EAAa1M,aAAY,SAACjW,GAAD,OAAWA,EAAMoB,OAAOtB,QAEvD6L,qBAAU,WACRuK,MACC,IAEH,IAAMA,EAAS,yCAAG,+BAAA1T,EAAA,+EAES2T,IAAMC,IAAI,WAFnB,gBAENtW,EAFM,EAENA,KACRgW,GCjCoB5V,EDiCDJ,EAAKA,KAAKyiB,QCjCI,CACrCtiB,KAAME,EACND,aD4BkB,gDAKdoW,QAAQC,IAAR,MALc,kCC9BK,IAACrW,ID8BN,oBAAH,qDAQf,OACE,cAAC,GAAD,CAAMyJ,UAAWI,EAAQtB,KAAMe,MAAM,UAArC,SACE,eAACoI,GAAA,EAAD,CAAWC,UAAU,EAArB,UACE,cAAC,GAAD,CAAcrI,MAAM,SAAS6L,eAAa,IAC1C,cAACvJ,EAAA,EAAD,CAAKwJ,GAAI,EAAT,SACE,cAAC,GAAD,CAASiN,QAASI,YEFbC,GA5BA,CACb,CACEC,KAAM,MACNC,QAAS,cAAC,GAAD,IACT7T,SAAU,CACR,CAAE4T,KAAM,UAAWC,QAAS,cAACC,GAAD,KAC5B,CAAEF,KAAM,YAAaC,QAAS,cAAC,GAAD,KAC9B,CAAED,KAAM,UAAWC,QAAS,cAAC,GAAD,KAC5B,CAAED,KAAM,YAAaC,QAAS,cAACE,GAAD,KAC9B,CAAEH,KAAM,WAAYC,QAAS,cAAC,GAAD,KAC7B,CAAED,KAAM,WAAYC,QAAS,cAACG,GAAD,KAC7B,CAAEJ,KAAM,WAAYC,QAAS,cAAC,GAAD,KAC7B,CAAED,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAUvY,GAAG,YAGvC,CACEsY,KAAM,IACNC,QAAS,cAAC,GAAD,IACT7T,SAAU,CACR,CAAE4T,KAAM,QAASC,QAAS,cAAC,GAAD,KAC1B,CAAED,KAAM,WAAYC,QAAS,cAAC,GAAD,KAC7B,CAAED,KAAM,MAAOC,QAAS,cAAC,GAAD,KACxB,CAAED,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAUvY,GAAG,oBACnC,CAAEsY,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAUvY,GAAG,aCvBzC4L,IAAM+M,SAASC,QAAU1F,GAEzB,IAae2F,GAbH,WACV,IAAMC,EAAUC,YAAUV,IAE1B,OACE,cAAC,IAAD,CAAUjhB,MAAOA,EAAjB,SACE,eAAC4hB,EAAA,EAAD,CAAe5c,MAAOA,EAAtB,UACE,cAAC,EAAD,IACC0c,QClBTG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEDC,SAASC,eAAe,SpEwHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB",
  "file": "static/js/main.b1c7c003.chunk.js",
  "sourcesContent": [
    "/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",
    "export const GET_USERS = \"GET_USERS\";\r\n",
    "import { GET_USERS } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return { ...state, data: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n",
    "export const GET_VENDOR = \"GET_VENDOR\";\r\n",
    "import { GET_VENDOR } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nconst vendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_VENDOR:\r\n      return { ...state, data: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default vendorReducer;\r\n",
    "export const GET_SERVICE = \"GET_SERVICE\";\r\nexport const OPEN_SERVICE_DIALOG = \"OPEN_SERVICE_DIALOG\";\r\nexport const CLOSE_SERVICE_DIALOG = \"CLOSE_SERVICE_DIALOG\";\r\n",
    "import { CLOSE_SERVICE_DIALOG, GET_SERVICE, OPEN_SERVICE_DIALOG } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  dialogId: null,\r\n  isDialogOpen: false,\r\n};\r\n\r\nconst serviceReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_SERVICE:\r\n      return { ...state, data: payload };\r\n\r\n    case OPEN_SERVICE_DIALOG:\r\n      return { ...state, dialogId: payload, isDialogOpen: true };\r\n\r\n    case CLOSE_SERVICE_DIALOG:\r\n      return { ...state, dialogId: null, isDialogOpen: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default serviceReducer;\r\n",
    "export const GET_BOOKING = \"GET_BOOKING\";\r\nexport const OPEN_BOOKING_DIALOG = \"OPEN_BOOKING_DIALOG\";\r\nexport const CLOSE_BOOKING_DIALOG = \"CLOSE_BOOKING_DIALOG\";\r\n",
    "import { CLOSE_BOOKING_DIALOG, GET_BOOKING, OPEN_BOOKING_DIALOG } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  dialogId: null,\r\n  isDialogOpen: false,\r\n};\r\n\r\nconst bookingReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_BOOKING:\r\n      return { ...state, data: payload };\r\n\r\n    case OPEN_BOOKING_DIALOG:\r\n      return { ...state, dialogId: payload, isDialogOpen: true };\r\n\r\n    case CLOSE_BOOKING_DIALOG:\r\n      return { ...state, dialogId: null, isDialogOpen: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookingReducer;\r\n",
    "import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport userReducer from \"./user/reducer\";\r\nimport vendorReducer from \"./vendor/reducer\";\r\nimport serviceReducer from \"./service/reducer\";\r\nimport bookingReducer from \"./booking/reducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  vendor: vendorReducer,\r\n  service: serviceReducer,\r\n  booking: bookingReducer,\r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store;\r\n",
    "import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n",
    "import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n",
    "import { createMuiTheme, colors } from \"@material-ui/core\";\r\nimport shadows from \"./shadows\";\r\nimport typography from \"./typography\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: \"#F4F6F8\",\r\n      default: colors.common.white,\r\n      paper: colors.common.white,\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500],\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500],\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600],\r\n    },\r\n  },\r\n  shadows,\r\n  typography,\r\n  overrides: {\r\n    MuiTableCell: {\r\n      root: {\r\n        padding: 0,\r\n      },\r\n      body: {\r\n        textAlign: \"center\",\r\n      },\r\n      head: {\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n",
    "export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n",
    "export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n",
    "import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n",
    "import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n  Briefcase as BookingIcon,\r\n} from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst user = {\r\n  avatar: \"/static/images/avatars/avatar_6.png\",\r\n  jobTitle: \"Root Admin\",\r\n  name: \"Dummy User\",\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: \"/app/dashboard\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n  },\r\n  {\r\n    href: \"/app/customers\",\r\n    icon: UsersIcon,\r\n    title: \"Customers\",\r\n  },\r\n  {\r\n    href: \"/app/vendors\",\r\n    icon: UsersIcon,\r\n    title: \"Vendors\",\r\n  },\r\n  {\r\n    href: \"/app/services\",\r\n    icon: ShoppingBagIcon,\r\n    title: \"Services\",\r\n  },\r\n  {\r\n    href: \"/app/bookings\",\r\n    icon: BookingIcon,\r\n    title: \"Bookings\",\r\n  },\r\n  {\r\n    href: \"/app/account\",\r\n    icon: UserIcon,\r\n    title: \"Account\",\r\n  },\r\n  {\r\n    href: \"/app/settings\",\r\n    icon: SettingsIcon,\r\n    title: \"Settings\",\r\n  },\r\n  {\r\n    href: \"/login\",\r\n    icon: LockIcon,\r\n    title: \"Login\",\r\n  },\r\n  {\r\n    href: \"/register\",\r\n    icon: UserPlusIcon,\r\n    title: \"Register\",\r\n  },\r\n  {\r\n    href: \"/404\",\r\n    icon: AlertCircleIcon,\r\n    title: \"Error\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n",
    "import React from 'react';\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <img\r\n      alt=\"Logo\"\r\n      src=\"/static/logo.svg\"\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n",
    "import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport Logo from \"../../components/Logo\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default TopBar;\r\n",
    "import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n",
    "import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppBar, Toolbar, makeStyles } from \"@material-ui/core\";\r\nimport Logo from \"../../components/Logo\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64,\r\n  },\r\n});\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default TopBar;\r\n",
    "import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n",
    "import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n",
    "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n",
    "import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n",
    "import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Profile from \"./Profile\";\r\nimport ProfileDetails from \"./ProfileDetails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Account\">\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} md={6} xs={12}>\r\n            <Profile />\r\n          </Grid>\r\n          <Grid item lg={8} md={6} xs={12}>\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n",
    "export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n",
    "export default (str) => (str ? str : \"-\");\r\n",
    "import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Avatar, Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport getInitials from \"../utils/getInitials\";\r\nimport setEmptyStr from \"../utils/setEmptyStr\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction ProfileName({ image, name }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box alignItems=\"center\" display=\"flex\">\r\n      <Avatar className={classes.avatar} src={image}>\r\n        {getInitials(name)}\r\n      </Avatar>\r\n      <Typography color=\"textPrimary\" variant=\"body1\">\r\n        {setEmptyStr(name)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nProfileName.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default ProfileName;\r\n",
    "import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport getInitials from \"../../../utils/getInitials\";\r\nimport setEmptyStr from \"../../../utils/setEmptyStr\";\r\nimport ProfileName from \"../../../components/ProfileName\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer._id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0 &&\r\n                      selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>Location</TableCell>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>Gender</TableCell>\r\n                <TableCell>DOB</TableCell>\r\n                <TableCell>Lon-Lat</TableCell>\r\n                <TableCell>City</TableCell>\r\n                <TableCell>Registration date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer._id}\r\n                  selected={selectedCustomerIds.indexOf(customer._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={customer.name} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(customer.email)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.location)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.mobile)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.gender)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.dob)}</TableCell>\r\n                  <TableCell>\r\n                    {customer.lon}-{customer.lat}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(customer.city)}</TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n",
    "import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction TableToolbar({ className, title, hideAddButton, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      {!hideAddButton && (\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Add {title}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder={`Search ${title}`}\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nTableToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  hideAddButton: PropTypes.bool,\r\n};\r\n\r\nexport default TableToolbar;\r\n",
    "import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../../components/Page\";\r\nimport Results from \"./Results\";\r\nimport { getUsers } from \"../../../redux/user/actions\";\r\nimport TableToolbar from \"../../../components/TableToolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst CustomerListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const userData = useSelector((state) => state.user.data);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/user\");\r\n      dispatch(getUsers(data.data.users));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Customers\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Customer\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results customers={userData} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerListView;\r\n",
    "import { GET_USERS } from \"./type\";\r\n\r\nexport const getUsers = (payload) => ({\r\n  type: GET_USERS,\r\n  payload,\r\n});\r\n",
    "import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              BUDGET\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $24,000\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n",
    "import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1049\",\r\n    amount: 30.5,\r\n    customer: {\r\n      name: \"Ekaterina Tankova\",\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: \"pending\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1048\",\r\n    amount: 25.1,\r\n    customer: {\r\n      name: \"Cao Yu\",\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: \"delivered\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1047\",\r\n    amount: 10.99,\r\n    customer: {\r\n      name: \"Alexa Richardson\",\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: \"refunded\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1046\",\r\n    amount: 96.43,\r\n    customer: {\r\n      name: \"Anje Keizer\",\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: \"pending\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1045\",\r\n    amount: 32.54,\r\n    customer: {\r\n      name: \"Clarke Gillebert\",\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: \"delivered\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1044\",\r\n    amount: 16.76,\r\n    customer: {\r\n      name: \"Adam Denisov\",\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: \"delivered\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst LatestOrders = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [orders] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Order Ref</TableCell>\r\n                <TableCell>Customer</TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip enterDelay={300} title=\"Sort\">\r\n                    <TableSortLabel active direction=\"desc\">\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow hover key={order._id}>\r\n                  <TableCell>{order.ref}</TableCell>\r\n                  <TableCell>{order.customer.name}</TableCell>\r\n                  <TableCell>\r\n                    {moment(order.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip color=\"primary\" label={order.status} size=\"small\" />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LatestOrders;\r\n",
    "import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: \"Dropbox\",\r\n    imageUrl: \"/static/images/products/product_1.png\",\r\n    updatedAt: moment().subtract(2, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Medium Corporation\",\r\n    imageUrl: \"/static/images/products/product_2.png\",\r\n    updatedAt: moment().subtract(2, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Slack\",\r\n    imageUrl: \"/static/images/products/product_3.png\",\r\n    updatedAt: moment().subtract(3, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Lyft\",\r\n    imageUrl: \"/static/images/products/product_4.png\",\r\n    updatedAt: moment().subtract(5, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"GitHub\",\r\n    imageUrl: \"/static/images/products/product_5.png\",\r\n    updatedAt: moment().subtract(9, \"hours\"),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n});\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem divider={i < products.length - 1} key={product._id}>\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton edge=\"end\" size=\"small\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LatestProducts;\r\n",
    "import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n",
    "import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n",
    "import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL CUSTOMERS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            16%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n",
    "import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n",
    "import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mt={2}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              p={1}\r\n              textAlign=\"center\"\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n",
    "import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Budget from \"./Budget\";\r\nimport LatestOrders from \"./LatestOrders\";\r\nimport LatestProducts from \"./LatestProducts\";\r\nimport Sales from \"./Sales\";\r\nimport TasksProgress from \"./TasksProgress\";\r\nimport TotalCustomers from \"./TotalCustomers\";\r\nimport TotalProfit from \"./TotalProfit\";\r\nimport TrafficByDevice from \"./TrafficByDevice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <Budget />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <Sales />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n",
    "import React from 'react';\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nconst Facebook = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\r\n    </SvgIcon>\r\n  );\r\n};\r\n\r\nexport default Facebook;\r\n",
    "import React from 'react';\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nconst Google = (props) => {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\r\n    </SvgIcon>\r\n  );\r\n};\r\n\r\nexport default Google;\r\n",
    "import React from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport FacebookIcon from \"../../icons/Facebook\";\r\nimport GoogleIcon from \"../../icons/Google\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Login\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: \"demo@devias.io\",\r\n              password: \"Password123\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              password: Yup.string()\r\n                .max(255)\r\n                .required(\"Password is required\"),\r\n            })}\r\n            onSubmit={() => {\r\n              navigate(\"/app/dashboard\", { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Sign in\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Sign in on the internal platform\r\n                  </Typography>\r\n                </Box>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      startIcon={<FacebookIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Facebook\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <Button\r\n                      fullWidth\r\n                      startIcon={<GoogleIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      Login with Google\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box mt={3} mb={1}>\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    or login with email address\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Don&apos;t have an account?{\" \"}\r\n                  <Link component={RouterLink} to=\"/register\" variant=\"h6\">\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n",
    "import React from \"react\";\r\nimport { Box, Container, Typography, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: \"inline-block\",\r\n    maxWidth: \"100%\",\r\n    width: 560,\r\n  },\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"404\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n",
    "export default (str) => (str.length >= 10 ? str.substr(0, 7) + \"...\" : str);\r\n",
    "export const BASE_URL = \"http://localhost:5000/\";\r\nexport const API_BASE_URL = `${BASE_URL}api`;\r\n",
    "import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { BASE_URL } from \"../constrants\";\r\n\r\nconst Image = ({ image, extraLarge, ...props }) => {\r\n  return (\r\n    <img\r\n      src={`${BASE_URL}${image}`}\r\n      alt={image}\r\n      style={{\r\n        width: extraLarge ? 200 : 80,\r\n        height: extraLarge ? 200 : 80,\r\n        objectFit: \"cover\",\r\n        borderRadius: 5,\r\n        margin: 2,\r\n        boxShadow: \"rgba(0, 0, 0, 0.3) 2px 3px 5px 1px\",\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nImage.propTypes = {\r\n  image: PropTypes.string,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n",
    "import dayjs from \"dayjs\";\r\nexport default (date) => dayjs(date).format(\"DD/MM/YYYY\");\r\n",
    "import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\nimport trimStr from \"../../utils/trimStr\";\r\nimport Image from \"../../components/Image\";\r\nimport { openServiceDialog } from \"../../redux/service/actions\";\r\nimport setDate from \"../../utils/setDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, services, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedServiceIds, setSelectedServiceIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedServiceIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedServiceIds = services.map((service) => service._id);\r\n    } else {\r\n      newSelectedServiceIds = [];\r\n    }\r\n\r\n    setSelectedServiceIds(newSelectedServiceIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedServiceIds.indexOf(id);\r\n    let newSelectedServiceIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedServiceIds.length - 1) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(0, selectedIndex),\r\n        selectedServiceIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedServiceIds(newSelectedServiceIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleOpenServiceDialog = (id) => {\r\n    dispatch(openServiceDialog(id));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedServiceIds.length === services.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedServiceIds.length > 0 &&\r\n                      selectedServiceIds.length < services.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Vendor's Company Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Title</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Price</TableCell>\r\n                <TableCell>Registration date</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {services.slice(0, limit).map((service) => (\r\n                <TableRow\r\n                  hover\r\n                  key={service._id}\r\n                  selected={selectedServiceIds.indexOf(service._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedServiceIds.indexOf(service._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, service._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={service.vendorId.companyName} />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Image image={service.image} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(service.title)}</TableCell>\r\n                  <TableCell>\r\n                    {trimStr(setEmptyStr(service.description))}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(service.price)}</TableCell>\r\n                  <TableCell>{setDate(service.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      onClick={() => handleOpenServiceDialog(service._id)}\r\n                    >\r\n                      <VisibilityIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={services.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  services: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n",
    "import { GET_SERVICE, OPEN_SERVICE_DIALOG, CLOSE_SERVICE_DIALOG } from \"./type\";\r\n\r\nexport const getService = (payload) => ({\r\n  type: GET_SERVICE,\r\n  payload,\r\n});\r\n\r\nexport const openServiceDialog = (payload) => ({\r\n  type: OPEN_SERVICE_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const closeServiceDialog = () => ({\r\n  type: CLOSE_SERVICE_DIALOG,\r\n});\r\n",
    "import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ToolTip from \"@material-ui/core/Tooltip\";\r\n\r\nconst ToolTipButton = ({\r\n  onClick,\r\n  tipClass,\r\n  btnClass,\r\n  title,\r\n  children,\r\n  placement,\r\n}) => {\r\n  return (\r\n    <ToolTip title={title} placement={placement} className={tipClass}>\r\n      <IconButton onClick={onClick} className={btnClass}>\r\n        {children}\r\n      </IconButton>\r\n    </ToolTip>\r\n  );\r\n};\r\n\r\nexport default ToolTipButton;\r\n",
    "import React, { useState, useEffect } from \"react\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeServiceDialog } from \"../../redux/service/actions\";\r\n\r\n// Mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\n\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport setDate from \"../../utils/setDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  imageContainer: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"5px\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n  },\r\n  dataLine: {\r\n    margin: \"5px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  accordionDetails: {},\r\n}));\r\n\r\nconst Dialog = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [service, setService] = useState({});\r\n\r\n  const { dialogId, isDialogOpen: open, data: _data } = useSelector(\r\n    (state) => state.service\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      const index = _data.findIndex((item) => item._id === dialogId);\r\n      if (index !== -1) {\r\n        setService(_data[index]);\r\n      }\r\n    }\r\n  }, [dialogId, _data]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeServiceDialog());\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <ToolTipButton\r\n          title=\"Close\"\r\n          onClick={handleClose}\r\n          btnClass={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </ToolTipButton>\r\n        <Typography variant=\"h3\">Service Details</Typography>\r\n      </DialogTitle>\r\n      <MuiDialogContent>\r\n        {service.title && (\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              <div className={classes.imageContainer}>\r\n                <Image image={service.image} extraLarge />\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Title:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.title}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Description:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.description}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Price:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.price}\r\n                </Typography>\r\n              </div>\r\n\r\n              <Typography\r\n                className={classes.dataLine}\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n              >\r\n                Registration Date: {setDate(service.createdAt)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <div className={classes.accordion}>\r\n                <Accordion disabled={service?.vendorId ? false : true}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      Vendor Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordionDetails}>\r\n                    <div>\r\n                      <ProfileName name={service.vendorId.companyName} />\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Mobile:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(service.vendorId.mobile)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Address:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(service.vendorId.address)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">City:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(service.vendorId.city)}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </MuiDialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n",
    "import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\n\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\nimport { getService } from \"../../redux/service/actions\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst VednorListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const serviceData = useSelector((state) => state.service.data);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/service\");\r\n      dispatch(getService(data.data.services));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Page className={classes.root} title=\"Services\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Service\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results services={serviceData} />\r\n        </Box>\r\n      </Container>\r\n      <Dialog />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VednorListView;\r\n",
    "import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\n\r\nimport trimStr from \"../../utils/trimStr\";\r\n\r\nimport { openBookingDialog } from \"../../redux/booking/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, bookings, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedBookingIds, setSelectedBookingIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedBookingIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedBookingIds = bookings.map((booking) => booking._id);\r\n    } else {\r\n      newSelectedBookingIds = [];\r\n    }\r\n\r\n    setSelectedBookingIds(newSelectedBookingIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedBookingIds.indexOf(id);\r\n    let newSelectedBookingIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedBookingIds.length - 1) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(0, selectedIndex),\r\n        selectedBookingIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedBookingIds(newSelectedBookingIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleOpenBookingDialog = (id) => {\r\n    dispatch(openBookingDialog(id));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedBookingIds.length === bookings.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedBookingIds.length > 0 &&\r\n                      selectedBookingIds.length < bookings.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Vendor's Company Name</TableCell>\r\n                <TableCell>Service Name</TableCell>\r\n                <TableCell>User Name</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Material</TableCell>\r\n                <TableCell>Frequency</TableCell>\r\n                <TableCell>Hours</TableCell>\r\n                <TableCell>Profession</TableCell>\r\n                <TableCell>Days</TableCell>\r\n                <TableCell>Time Duration</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {bookings.slice(0, limit).map((booking) => (\r\n                <TableRow\r\n                  hover\r\n                  key={booking._id}\r\n                  selected={selectedBookingIds.indexOf(booking._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedBookingIds.indexOf(booking._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, booking._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{booking.vendorId.companyName}</TableCell>\r\n                  <TableCell>{booking.serviceId.title}</TableCell>\r\n                  <TableCell>{setEmptyStr(booking.userId.name)}</TableCell>\r\n                  <TableCell>\r\n                    {trimStr(setEmptyStr(booking.description))}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {booking.isMaterialRequired ? \"on\" : \"off\"}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(booking.frequency)}</TableCell>\r\n                  <TableCell>{setEmptyStr(booking.howManyHours)}</TableCell>\r\n                  <TableCell>\r\n                    {setEmptyStr(booking.howManyProfessions)}\r\n                  </TableCell>\r\n                  <TableCell>{booking.date}</TableCell>\r\n                  <TableCell>{booking.time}</TableCell>\r\n\r\n                  <TableCell>\r\n                    <IconButton\r\n                      onClick={() => handleOpenBookingDialog(booking._id)}\r\n                    >\r\n                      <VisibilityIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={bookings.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  bookings: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n",
    "import { GET_BOOKING, OPEN_BOOKING_DIALOG, CLOSE_BOOKING_DIALOG } from \"./type\";\r\n\r\nexport const getBooking = (payload) => ({\r\n  type: GET_BOOKING,\r\n  payload,\r\n});\r\n\r\nexport const openBookingDialog = (payload) => ({\r\n  type: OPEN_BOOKING_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const closeBookingDialog = () => ({\r\n  type: CLOSE_BOOKING_DIALOG,\r\n});\r\n",
    "import React, { useState, useEffect } from \"react\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\n\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport setDate from \"../../utils/setDate\";\r\nimport { closeBookingDialog } from \"../../redux/booking/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  imageContainer: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"5px\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n  },\r\n  dataLine: {\r\n    margin: \"5px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  accordionDetails: {},\r\n}));\r\n\r\nconst Dialog = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [booking, setBooking] = useState({});\r\n\r\n  const { dialogId, isDialogOpen: open, data: _data } = useSelector(\r\n    (state) => state.booking\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      const index = _data.findIndex((item) => item._id === dialogId);\r\n      if (index !== -1) {\r\n        setBooking(_data[index]);\r\n      }\r\n    }\r\n  }, [dialogId, _data]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeBookingDialog());\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <ToolTipButton\r\n          title=\"Close\"\r\n          onClick={handleClose}\r\n          btnClass={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </ToolTipButton>\r\n        <Typography variant=\"h3\">Booking Details</Typography>\r\n      </DialogTitle>\r\n      <MuiDialogContent>\r\n        {booking.vendorId && (\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Instruction:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.description}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Frequency:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.frequency}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Hours:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.howManyHours}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Professions:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.howManyProfessions}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Date & Time:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.date},&nbsp;{booking.time}\r\n                </Typography>\r\n              </div>\r\n\r\n              <Typography\r\n                className={[classes.dataLine, { marginLeft: \"auto\" }].join(\" \")}\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n              >\r\n                Registration Date: {setDate(booking.createdAt)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <div className={classes.accordion}>\r\n                <Accordion disabled={booking?.userId ? false : true}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>\r\n                      User Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Name:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.userId.name}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Email:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.userId.email}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Location:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.userId.location)}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Gender:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.userId.gender)}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <Typography\r\n                        className={classes.dataLine}\r\n                        variant=\"caption\"\r\n                        color=\"textSecondary\"\r\n                      >\r\n                        Joined Date:&nbsp;\r\n                        {setDate(booking.serviceId.createdAt)}\r\n                      </Typography>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion disabled={booking?.serviceId ? false : true}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>\r\n                      Service Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div style={{ margin: \"auto\" }}>\r\n                      <div className={classes.imageContainer}>\r\n                        <Image image={booking.serviceId.image} extraLarge />\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Title:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.title}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Description:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.description}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Price:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.price}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <Typography\r\n                        className={classes.dataLine}\r\n                        variant=\"caption\"\r\n                        color=\"textSecondary\"\r\n                      >\r\n                        Created At:&nbsp;\r\n                        {setDate(booking.serviceId.createdAt)}\r\n                      </Typography>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion disabled={booking?.vendorId ? false : true}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      Vendor Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div>\r\n                      <ProfileName name={booking.vendorId.companyName} />\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Mobile:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.mobile)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Address:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.address)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">City:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.city)}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </MuiDialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n",
    "import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\n\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\nimport { getBooking } from \"../../redux/booking/actions\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst BookingListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const bookingData = useSelector((state) => state.booking.data);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/booking\");\r\n      console.log(data);\r\n      dispatch(getBooking(data.data.bookings));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Page className={classes.root} title=\"Bookings\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Booking\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results bookings={bookingData} />\r\n        </Box>\r\n      </Container>\r\n      <Dialog />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default BookingListView;\r\n",
    "import React from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Register\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              password: \"\",\r\n              policy: false,\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              firstName: Yup.string()\r\n                .max(255)\r\n                .required(\"First name is required\"),\r\n              lastName: Yup.string()\r\n                .max(255)\r\n                .required(\"Last name is required\"),\r\n              password: Yup.string()\r\n                .max(255)\r\n                .required(\"password is required\"),\r\n              policy: Yup.boolean().oneOf([true], \"This field must be checked\"),\r\n            })}\r\n            onSubmit={() => {\r\n              navigate(\"/app/dashboard\", { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box alignItems=\"center\" display=\"flex\" ml={-1}>\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography color=\"textSecondary\" variant=\"body1\">\r\n                    I have read the{\" \"}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>{errors.policy}</FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Have an account?{\" \"}\r\n                  <Link component={RouterLink} to=\"/login\" variant=\"h6\">\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n",
    "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Text message\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                message\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n",
    "import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n",
    "import React from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Notifications from \"./Notifications\";\r\nimport Password from \"./Password\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Settings\">\r\n      <Container maxWidth=\"lg\">\r\n        <Notifications />\r\n        <Box mt={3}>\r\n          <Password />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n",
    "import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport getInitials from \"../../utils/getInitials\";\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, vendors, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedVendorIds, setSelectedVendorIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedVendorIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedVendorIds = vendors.map((vendor) => vendor._id);\r\n    } else {\r\n      newSelectedVendorIds = [];\r\n    }\r\n\r\n    setSelectedVendorIds(newSelectedVendorIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedVendorIds.indexOf(id);\r\n    let newSelectedVendorIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(selectedVendorIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedVendorIds.length - 1) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(0, selectedIndex),\r\n        selectedVendorIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedVendorIds(newSelectedVendorIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedVendorIds.length === vendors.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedVendorIds.length > 0 &&\r\n                      selectedVendorIds.length < vendors.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Company Name</TableCell>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>Address</TableCell>\r\n                <TableCell>Staff</TableCell>\r\n                <TableCell>Registration date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {vendors.slice(0, limit).map((vendor) => (\r\n                <TableRow\r\n                  hover\r\n                  key={vendor._id}\r\n                  selected={selectedVendorIds.indexOf(vendor._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedVendorIds.indexOf(vendor._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, vendor._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={vendor.companyName} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(vendor.mobile)}</TableCell>\r\n                  <TableCell>{setEmptyStr(vendor.address)}</TableCell>\r\n                  <TableCell>{setEmptyStr(vendor.city)}</TableCell>\r\n                  <TableCell>\r\n                    {moment(vendor.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={vendors.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  vendors: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n",
    "import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\nimport { getVendor } from \"../../redux/vendor/actions\";\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst VednorListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const vendorData = useSelector((state) => state.vendor.data);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/vendor\");\r\n      dispatch(getVendor(data.data.vendors));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Page className={classes.root} title=\"Vendors\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Vendor\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results vendors={vendorData} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VednorListView;\r\n",
    "import { GET_VENDOR } from \"./type\";\r\n\r\nexport const getVendor = (payload) => ({\r\n  type: GET_VENDOR,\r\n  payload,\r\n});\r\n",
    "import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport DashboardLayout from \"./layouts/DashboardLayout\";\r\nimport MainLayout from \"./layouts/MainLayout\";\r\nimport AccountView from \"./views/account/AccountView\";\r\nimport CustomerListView from \"./views/customer/CustomerListView\";\r\nimport DashboardView from \"./views/reports/DashboardView\";\r\nimport LoginView from \"./views/auth/LoginView\";\r\nimport NotFoundView from \"./views/errors/NotFoundView\";\r\nimport ServiceListView from \"./views/service\";\r\nimport BookingListView from \"./views/Booking\";\r\nimport RegisterView from \"./views/auth/RegisterView\";\r\nimport SettingsView from \"./views/settings/SettingsView\";\r\nimport VendorListView from \"./views/vendor\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"app\",\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: \"account\", element: <AccountView /> },\r\n      { path: \"customers\", element: <CustomerListView /> },\r\n      { path: \"vendors\", element: <VendorListView /> },\r\n      { path: \"dashboard\", element: <DashboardView /> },\r\n      { path: \"services\", element: <ServiceListView /> },\r\n      { path: \"bookings\", element: <BookingListView /> },\r\n      { path: \"settings\", element: <SettingsView /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/\",\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: \"login\", element: <LoginView /> },\r\n      { path: \"register\", element: <RegisterView /> },\r\n      { path: \"404\", element: <NotFoundView /> },\r\n      { path: \"/\", element: <Navigate to=\"/app/dashboard\" /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n",
    "import \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport React from \"react\";\r\nimport { useRoutes } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n// redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport GlobalStyles from \"./components/GlobalStyles\";\r\nimport \"./mixins/chartjs\";\r\nimport theme from \"./theme\";\r\nimport routes from \"./routes\";\r\nimport { API_BASE_URL } from \"./constrants\";\r\n\r\naxios.defaults.baseURL = API_BASE_URL;\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        {routing}\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n",
    "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"
  ],
  "sourceRoot": ""
}
