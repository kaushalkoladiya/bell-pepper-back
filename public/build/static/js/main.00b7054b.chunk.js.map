{"version":3,"sources":["components/GlobalStyles.js","mixins/chartjs.js","theme/shadows.js","theme/typography.js","theme/index.js","utils/PrivateRoute.js","utils/AuthRoute.js","layouts/DashboardLayout/NavBar/NavItem.js","redux/admin/type.js","redux/admin/actions.js","layouts/DashboardLayout/NavBar/index.js","images/icon.jpeg","components/Logo.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","utils/alert.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/index.js","utils/setEmptyStr.js","utils/getInitials.js","components/ProfileName.js","views/customer/CustomerListView/Results.js","redux/user/type.js","components/TableToolbar.js","views/customer/CustomerListView/index.js","redux/user/actions.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/index.js","views/auth/LoginView.js","views/errors/NotFoundView.js","redux/service/type.js","redux/service/actions.js","utils/trimStr.js","utils/setDate.js","constrants.js","components/Image.js","components/ToolTipButton.js","views/service/Results.js","views/service/Dialog.js","views/service/index.js","redux/booking/type.js","components/Chip.js","views/Booking/Results.js","redux/booking/actions.js","views/Booking/Dialog.js","views/Booking/StaffDialog.js","views/Booking/index.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","redux/vendor/type.js","views/vendor/Results.js","redux/vendor/actions.js","views/vendor/index.js","routes.js","App.js","redux/user/reducer.js","redux/vendor/reducer.js","redux/service/reducer.js","redux/booking/reducer.js","utils/setToken.js","redux/admin/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","shadows","typography","fontFamily","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","light","green","main","contrastText","secondary","lightGreen","text","blueGrey","overrides","MuiTableCell","root","textAlign","head","MuiTooltip","tooltip","color","maxWidth","border","arrow","props","MuiIcon","MuiTextField","variant","size","PrivateRoute","Component","component","isAuth","rest","element","to","PropTypes","bool","isRequired","object","connect","state","admin","AuthRoute","item","display","paddingTop","paddingBottom","button","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","handleOnClick","classes","ListItem","clsx","disableGutters","onClick","Button","activeclassname","activeClassName","RouterLink","SET_ADMIN","UNSET_ADMIN","SET_ADMIN_DATA","loginAdmin","payload","type","setAdminData","user","items","BarChartIcon","UsersIcon","ShoppingBagIcon","BookingIcon","UserIcon","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","location","useLocation","dispatch","useDispatch","navigation","useNavigate","userData","useSelector","data","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","email","Divider","List","map","LogOutIcon","replace","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","alt","style","borderRadius","TopBar","onMobileNavOpen","AppBar","elevation","Toolbar","IconButton","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","useState","isMobileNavOpen","setMobileNavOpen","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","Profile","Card","CardContent","gutterBottom","dateText","moment","createdAt","format","warning","swal","dangerMode","buttons","alert","ProfileDetails","formData","setFormData","error","setError","handleChange","event","target","value","handleSubmit","preventDefault","Axios","patch","console","log","autoComplete","noValidate","CardHeader","subheader","Grid","container","md","xs","TextField","fullWidth","helperText","label","onChange","required","minHeight","Account","Container","lg","setEmptyStr","str","getInitials","split","slice","v","toUpperCase","join","ProfileName","image","Results","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","length","indeterminate","newSelectedCustomerIds","customer","_id","TableBody","hover","selected","id","selectedIndex","concat","handleSelectOne","mobile","gender","dob","lon","lat","city","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","GET_USERS","importButton","exportButton","TableToolbar","hideAddButton","onSearch","onAddButtonClick","mt","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","CustomerListView","axios","get","users","response","fetchData","red","differenceIcon","differenceValue","Budget","justify","uuid","amount","status","actions","LatestOrders","orders","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","order","endIcon","imageUrl","updatedAt","subtract","LatestProducts","products","subtitle","product","divider","ListItemAvatar","ListItemText","fromNow","edge","Sales","useTheme","datasets","indigo","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","orange","TasksProgress","LinearProgress","TotalCustomers","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","Dashboard","sm","xl","LoginView","navigate","initialValues","password","validationSchema","Yup","shape","max","onSubmit","methods","post","then","res","token","catch","setErrors","setSubmitting","errors","handleBlur","isSubmitting","touched","values","mb","Boolean","onBlur","my","disabled","marginTop","NotFoundView","align","GET_SERVICE","OPEN_SERVICE_DIALOG","CLOSE_SERVICE_DIALOG","ADD_NEW_SERVICE","UPDATE_SERVICE","DELETE_SERVICE","openServiceDialog","addNewService","trimStr","substr","setDate","date","dayjs","API_BASE_URL","Image","extraLarge","objectFit","boxShadow","ToolTipButton","tipClass","btnClass","placement","services","selectedServiceIds","setSelectedServiceIds","newSelectedServiceIds","service","description","disableElevation","disableFocusRipple","disableRipple","disableTouchRipple","price","isDeleted","delete","err","accordion","heading","pxToRem","fontWeightRegular","blue","imageContainer","closeButton","textCenter","dataLine","textField","submitButton","Dialog","mongoID","setMongoID","setTitle","setDescription","setPrice","imageData","setImageData","imagePath","setImagePath","dialogId","isDialogOpen","_data","findIndex","_service","handleClose","FormData","append","networkRequest","url","method","aria-labelledby","DialogTitle","document","getElementById","click","hidden","accept","e","files","reader","FileReader","addEventListener","result","readAsDataURL","pattern","multiline","rows","VendorListView","serviceData","setServices","filter","row","GET_BOOKING","DELETE_BOOKING","OPEN_BOOKING_DIALOG","CLOSE_BOOKING_DIALOG","OPEN_STAFF_ASSIGN_DIALOG","CLOSE_STAFF_ASSIGN_DIALOG","ASSIGN_STAFF","Chip","isSuccess","bookings","selectedBookingIds","setSelectedBookingIds","handleOpenBookingDialog","handleOpenStaffAssignDialog","serviceId","bookingId","newSelectedBookingIds","booking","userId","isMaterialRequired","frequency","howManyHours","howManyProfessions","time","profession","isCancelled","isDone","cancelledByWhom","accordionDetails","setBooking","show","setShow","marginLeft","Accordion","AccordionSummary","expandIcon","AccordionDetails","formControl","StaffDialog","React","staffs","setStaffs","selectedStaff","setSelectedStaff","isStaffDialogOpen","staffId","put","bookingData","message","disableBackdropClick","disableEscapeKeyDown","DialogContent","FormControl","InputLabel","htmlFor","Select","labelId","MenuItem","DialogActions","BookingListView","Notifications","wrap","FormControlLabel","control","defaultChecked","Password","confirm","setValues","SettingsView","GET_VENDOR","DELETE_VENDOR","vendors","selectedVendorIds","setSelectedVendorIds","newSelectedVendorIds","vendor","companyName","address","houseNumber","street","vendorData","routes","path","AccountView","DashboardView","ServiceListView","defaults","baseURL","App","localStorage","getItem","routing","useRoutes","ThemeProvider","initialState","userReducer","vendorReducer","category","serviceReducer","unshift","poster","bookingReducer","setToken","setItem","headers","removeItem","adminReducer","middleware","thunk","reducers","combineReducers","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iSAEMA,EAAYC,aAAW,kBAAMC,YAAa,CAC9C,UAAW,CACT,IAAK,CACHC,UAAW,aACXC,OAAQ,EACRC,QAAS,GAEXC,KAAM,CACJ,yBAA0B,cAC1B,0BAA2B,YAC3BC,OAAQ,OACRC,MAAO,QAETC,KAAM,CACJC,gBAAiB,UACjBH,OAAQ,OACRC,MAAO,QAETG,EAAG,CACDC,eAAgB,QAElB,QAAS,CACPL,OAAQ,OACRC,MAAO,cAWEK,EANM,WAGnB,OAFAb,IAEO,M,QC2JTc,QAAMC,QAAQC,OAAOF,QAAMG,SAASC,UAAUC,UAAW,CACvDC,KAzLF,WAAiB,IAKXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAXIC,EAAQC,KAAKC,OAAbF,IACFG,EAAKF,KAAKG,MACVC,EAAgBF,EAAhBE,YAaAC,EAAiBL,KAAKC,OAAOK,OAAOC,QAApCF,aA+BN,GA9BIA,EAAe,IACjBA,EAAe,GAGW,qBAAjBA,IACTA,EAAe,GAGZH,EAAGM,YAWNjB,EAAOW,EAAGO,KACVjB,EAAQU,EAAGQ,EACXjB,EAAMS,EAAGS,EAAIT,EAAGzB,OAAS,EACzBiB,EAASQ,EAAGS,EAAIT,EAAGzB,OAAS,EAC5BkB,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBK,EAAGL,eAAiB,SAfpCN,EAAOW,EAAGQ,EAAIR,EAAGxB,MAAQ,EACzBc,EAAQU,EAAGQ,EAAIR,EAAGxB,MAAQ,EAC1Be,EAAMS,EAAGS,EAEThB,EAAQ,EACRC,GAFAF,EAASQ,EAAGO,MAEKhB,EAAM,GAAK,EAC5BI,EAAgBK,EAAGL,eAAiB,UAclCO,EAAa,CAEf,IAAMQ,EAAUC,KAAKC,IAAID,KAAKE,IAAIxB,EAAOC,GAAQqB,KAAKE,IAAItB,EAAMC,IAE1DsB,GADNZ,EAAcA,EAAcQ,EAAUA,EAAUR,GACf,EAE3Ba,EAAa1B,GAA0B,SAAlBM,EAA2BmB,EAAarB,EAAQ,GACrEuB,EAAc1B,GAA2B,UAAlBK,GAA6BmB,EAAarB,EAAQ,GACzEwB,EAAY1B,GAAyB,QAAlBI,EAA0BmB,EAAapB,EAAQ,GAClEwB,EAAe1B,GAA4B,WAAlBG,GAA8BmB,EAAapB,EAAQ,GAE9EqB,IAAeC,IACjBzB,EAAM0B,EACNzB,EAAS0B,GAGPD,IAAcC,IAChB7B,EAAO0B,EACPzB,EAAQ0B,GAIZnB,EAAIsB,YACJtB,EAAIuB,UAAYpB,EAAGtB,gBACnBmB,EAAIwB,YAAcrB,EAAGsB,YACrBzB,EAAI0B,UAAYrB,EAKhB,IAAMsB,EAAU,CAAC,CAACnC,EAAMG,GAAS,CAACH,EAAME,GAAM,CAACD,EAAOC,GAAM,CAACD,EAAOE,IAIhEiC,EADY,CAAC,SAAU,OAAQ,MAAO,SAChBC,QAAQ/B,EAAe,GAKjD,SAASgC,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,IALpB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtB9B,EAAIiC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAGjB,IAAMxD,EAAQgD,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjD,EAASiD,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpChB,EAAIgB,EAAQ,GAAG,GACff,EAAIe,EAAQ,GAAG,GAWrB,IATA5B,EAASO,GAEIQ,KAAKE,IAAItC,GAAU,IAC9BqB,EAASe,KAAKsB,MAAMtB,KAAKE,IAAItC,GAAU,IAErCqB,EAASe,KAAKE,IAAIrC,GAAS,IAC7BoB,EAASe,KAAKsB,MAAMtB,KAAKE,IAAIrC,GAAS,IAGpCD,EAAS,EAAG,CAEd,IAAM2D,EAAM1B,EACN2B,EAAM3B,EAAIhC,EACV4D,EAAM3B,EAAIlC,EACV8D,EAAM5B,EAAIlC,EAEV+D,EAAM9B,EACN+B,EAAM/B,EAAIhC,EACVgE,EAAM/B,EACNgC,EAAMhC,EAGZZ,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QACxC,GAAIhE,EAAQ,EAAG,CAEpB,IAAM0D,EAAM1B,EAAIhC,EACV2D,EAAM3B,EACN4B,EAAM3B,EACN4B,EAAM5B,EAEN6B,EAAM9B,EAAIhC,EACV+D,EAAM/B,EACNgC,EAAM/B,EAAIlC,EACVkE,EAAMhC,EAAIlC,EAGhBsB,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QAG7C3C,EAAIiC,OAAOtB,EAAIZ,EAAQa,GACvBZ,EAAI6C,OAAOlC,EAAIhC,EAAQoB,EAAQa,GAC/BZ,EAAI8C,iBAAiBnC,EAAIhC,EAAOiC,EAAGD,EAAIhC,EAAOiC,EAAIb,GAClDC,EAAI6C,OAAOlC,EAAIhC,EAAOiC,EAAIlC,EAASqB,GACnCC,EAAI8C,iBACFnC,EAAIhC,EACJiC,EAAIlC,EACJiC,EAAIhC,EAAQoB,EACZa,EAAIlC,GAENsB,EAAI6C,OAAOlC,EAAIZ,EAAQa,EAAIlC,GAC3BsB,EAAI8C,iBAAiBnC,EAAGC,EAAIlC,EAAQiC,EAAGC,EAAIlC,EAASqB,GACpDC,EAAI6C,OAAOlC,EAAGC,EAAIb,GAClBC,EAAI8C,iBAAiBnC,EAAGC,EAAGD,EAAIZ,EAAQa,GAI3CZ,EAAI+C,OACA1C,GACFL,EAAIgD,Y,oBC5JOC,EA5BC,CACd,OACA,iEACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iECYaC,EArCI,CACjBC,WAAY,YACZC,GAAI,CACFC,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBC,GAAI,CACFH,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBE,GAAI,CACFJ,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBG,GAAI,CACFL,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBI,GAAI,CACFN,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBK,GAAI,CACFP,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBM,SAAU,CACRR,WAAY,MCkCDS,EA/DDC,YAAe,CAC3BC,QAAS,CACPC,WAAY,CACVC,KAAM,UACNC,QAASC,IAAOC,OAAOC,MACvBC,MAAOH,IAAOC,OAAOC,OAEvBE,QAAS,CACPC,MAAOL,IAAOM,MAAM,KACpBC,KAAMP,IAAOM,MAAM,KACnBR,KAAME,IAAOM,MAAM,KACnBE,aAAcR,IAAOC,OAAOC,OAE9BO,UAAW,CACTF,KAAMP,IAAOU,WAAW,MAE1BC,KAAM,CACJP,QAASJ,IAAOY,SAAS,KACzBH,UAAWT,IAAOY,SAAS,OAG/B/B,UACAC,aACA+B,UAAW,CACTC,aAAc,CACZC,KAAM,CACJ3G,QAAS,GAEXI,KAAM,CACJwG,UAAW,UAEbC,KAAM,CACJD,UAAW,SACXvG,gBAAiB,UACjBwE,WAAY,SAGhBiC,WAAY,CACVC,QAAS,CACP1G,gBAAiB,sBACjB2G,MAAO,UACPC,SAAU,IACVC,OAAQ,qBAEVC,MAAO,CACLH,MAAO,mBAIbI,MAAO,CACLC,QAAS,CACPvC,SAAU,SAEZgC,WAAY,CACVK,OAAO,GAETG,aAAc,CACZC,QAAS,WACTC,KAAM,Y,+BCxDNC,EAAe,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAsBC,EAAzB,EAAyBA,OAAWC,EAApC,6CACnB,cAAC,WAAD,UACGD,EACC,cAAC,IAAD,aAAOE,QAAS,cAACJ,EAAD,KAAmBG,IAEnC,cAAC,IAAD,CAAUE,GAAG,cAKnBN,EAAa3G,UAAY,CACvB8G,OAAQI,IAAUC,KAAKC,WACvBP,UAAWK,IAAUG,OAAOD,YAG9B,IAIeE,eAJS,SAACC,GAAD,MAAY,CAClCT,OAAQS,EAAMC,MAAMV,UAGPQ,CAAyBX,GCnBlCc,EAAY,SAAC,GAAD,IAAcb,EAAd,EAAGC,UAAsBC,EAAzB,EAAyBA,OAAWC,EAApC,6CAChB,cAAC,WAAD,UACGD,EACC,cAAC,IAAD,CAAUG,GAAG,wBAEb,cAAC,IAAD,aAAOD,QAAS,cAACJ,EAAD,KAAmBG,OAKzCU,EAAUzH,UAAY,CACpB8G,OAAQI,IAAUC,KAAKC,WACvBP,UAAWK,IAAUG,OAAOD,YAG9B,IAIeE,eAJS,SAACC,GAAD,MAAY,CAClCT,OAAQS,EAAMC,MAAMV,UAGPQ,CAAyBG,G,6JCnBlC5I,EAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCkD,KAAM,CACJC,QAAS,OACTC,WAAY,EACZC,cAAe,GAEjBC,OAAQ,CACN5B,MAAO1B,EAAME,QAAQe,KAAKF,UAC1BxB,WAAYS,EAAMZ,WAAWmE,iBAC7BC,eAAgB,aAChB/D,cAAe,EACf/E,QAAS,WACT+I,cAAe,OACf5I,MAAO,QAET6I,KAAM,CACJC,YAAa3D,EAAM4D,QAAQ,IAE7BC,MAAO,CACLF,YAAa,QAEfG,OAAQ,CACNpC,MAAO1B,EAAME,QAAQQ,QAAQG,KAC7B,WAAY,CACVtB,WAAYS,EAAMZ,WAAWmE,kBAE/B,UAAW,CACT7B,MAAO1B,EAAME,QAAQQ,QAAQG,WAqDpBkD,GAhDC,SAAC,GAOV,IANLC,EAMI,EANJA,UACAC,EAKI,EALJA,KACMC,EAIF,EAJJR,KACAG,EAGI,EAHJA,MACAM,EAEI,EAFJA,cACG5B,EACC,mEACE6B,EAAU/J,IAEhB,OAAO8J,EACL,cAACE,EAAA,EAAD,yBACEL,UAAWM,YAAKF,EAAQlB,KAAMc,GAC9BO,gBAAc,GACVhC,GAHN,IAIEiC,QAASL,EAJX,SAME,eAACM,EAAA,EAAD,CAAQC,gBAAiBN,EAAQN,OAAQE,UAAWI,EAAQd,OAA5D,UACGY,GAAQ,cAACA,EAAD,CAAMF,UAAWI,EAAQV,KAAMxB,KAAK,OAC7C,sBAAM8B,UAAWI,EAAQP,MAAzB,SAAiCA,UAIrC,cAACQ,EAAA,EAAD,yBACEL,UAAWM,YAAKF,EAAQlB,KAAMc,GAC9BO,gBAAc,GACVhC,GAHN,aAKE,eAACkC,EAAA,EAAD,CACEE,gBAAiBP,EAAQN,OACzBE,UAAWI,EAAQd,OACnBjB,UAAWuC,IACXnC,GAAIwB,EAJN,UAMGC,GAAQ,cAACA,EAAD,CAAMF,UAAWI,EAAQV,KAAMxB,KAAK,OAC7C,sBAAM8B,UAAWI,EAAQP,MAAzB,SAAiCA,WCzE5BgB,GAAY,YACZC,GAAc,cACdC,GAAiB,iBCAjBC,GAAa,SAACC,GAAD,MAAc,CACtCC,KAAML,GACNI,YAGWE,GAAe,SAACF,GAAD,MAAc,CACxCC,KAAMH,GACNE,YCgBIG,GACI,4BAKJC,GAAQ,CACZ,CACEpB,KAAM,sBACNP,KAAM4B,IACNzB,MAAO,aAET,CACEI,KAAM,sBACNP,KAAM6B,IACN1B,MAAO,aAET,CACEI,KAAM,oBACNP,KAAM6B,IACN1B,MAAO,WAET,CACEI,KAAM,qBACNP,KAAM8B,IACN3B,MAAO,YAET,CACEI,KAAM,qBACNP,KAAM+B,IACN5B,MAAO,YAET,CACEI,KAAM,oBACNP,KAAMgC,IACN7B,MAAO,YAILxJ,GAAYC,aAAW,iBAAO,CAClCqL,aAAc,CACZ9K,MAAO,KAET+K,cAAe,CACb/K,MAAO,IACPe,IAAK,GACLhB,OAAQ,qBAEViL,OAAQ,CACNC,OAAQ,UACRjL,MAAO,GACPD,OAAQ,QAINmL,GAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACzB7B,EAAU/J,KACV6L,EAAWC,cACXC,EAAWC,cACXC,EAAaC,cAEbC,EAAWC,aAAY,SAAC1D,GAAD,OAAWA,EAAMC,MAAM0D,QAEpDC,qBAAU,WACJV,GAAcD,GAChBA,MAGD,CAACE,EAASU,WAEb,IAKMC,EACJ,eAACC,EAAA,EAAD,CAAKlM,OAAO,OAAOuI,QAAQ,OAAO4D,cAAc,SAAhD,UACE,eAACD,EAAA,EAAD,CAAKE,WAAW,SAAS7D,QAAQ,OAAO4D,cAAc,SAASE,EAAG,EAAlE,UACE,cAACC,EAAA,EAAD,CACElD,UAAWI,EAAQyB,OACnBxD,UAAWuC,IACXuC,IAAK/B,GACL3C,GAAG,sBAEL,cAAC2E,EAAA,EAAD,CAAYpD,UAAWI,EAAQiD,KAAM3F,MAAM,cAAcO,QAAQ,KAAjE,SACGuE,EAASa,OAEZ,cAACD,EAAA,EAAD,CAAY1F,MAAM,gBAAgBO,QAAQ,QAA1C,SACGuE,EAASc,WAGd,cAACC,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CAAKG,EAAG,EAAR,SACE,eAACO,EAAA,EAAD,WACGnC,GAAMoC,KAAI,SAACvE,GAAD,OACT,cAAC,GAAD,CACEe,KAAMf,EAAKe,KAEXJ,MAAOX,EAAKW,MACZH,KAAMR,EAAKQ,MAFNR,EAAKW,UAKd,cAAC,GAAD,CACEH,KAAMgE,IACN7D,MAAM,UACNM,cAnCW,WACnBiC,EDpF8B,CAChClB,KAAMJ,KCoFJwB,EAAW,SAAU,CAAEqB,SAAS,YAqC9B,cAACb,EAAA,EAAD,CAAKc,SAAU,OAInB,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACC,EAAA,EAAD,CACEC,OAAO,OACP5D,QAAS,CAAE3D,MAAO2D,EAAQuB,cAC1BsC,QAASjC,EACTkC,KAAMjC,EACNhE,QAAQ,YALV,SAOG4E,MAGL,cAACgB,EAAA,EAAD,CAAQM,QAAM,EAAd,SACE,cAACJ,EAAA,EAAD,CACEC,OAAO,OACP5D,QAAS,CAAE3D,MAAO2D,EAAQwB,eAC1BsC,MAAI,EACJjG,QAAQ,aAJV,SAMG4E,UAYXd,GAAOqC,aAAe,CACpBpC,cAAe,aACfC,YAAY,GAGCF,U,mDC/KA,OAA0B,kCCkB1BsC,GAfF,SAACvG,GACZ,OACE,6CACEwG,IAAI,OACJnB,IAAKjD,IACDpC,GAHN,IAIEyG,MAAO,CACL1N,MAAO,GACPD,OAAQ,GACR4N,aAAc,SCGhBnO,GAAYC,aAAW,iBAAO,CAClC+G,KAAM,GACNwE,OAAQ,CACNhL,MAAO,GACPD,OAAQ,QA2CG6N,GAvCA,SAAC,GAA6C,IAA3CzE,EAA0C,EAA1CA,UAAW0E,EAA+B,EAA/BA,gBAAoBnG,EAAW,+CACpD6B,EAAU/J,KAEhB,OACE,cAACsO,GAAA,EAAD,yBAAQ3E,UAAWM,YAAKF,EAAQ/C,KAAM2C,GAAY4E,UAAW,GAAOrG,GAApE,aACE,eAACsG,GAAA,EAAD,WACE,cAAC,IAAD,CAAYpG,GAAG,IAAf,SACE,cAAC,GAAD,MAEF,cAACqE,EAAA,EAAD,CAAKc,SAAU,IAef,cAACC,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACgB,GAAA,EAAD,CAAYpH,MAAM,UAAU8C,QAASkE,EAArC,SACE,cAAC,KAAD,eC3CNrO,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1C+C,QAAS,OACTvI,OAAQ,OACRmO,SAAU,SACVlO,MAAO,QAETmO,QAAQ,aACN7F,QAAS,OACT8F,KAAM,WACNF,SAAU,SACV3F,WAAY,IACXpD,EAAMkJ,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,MAGjBC,iBAAkB,CAChBlG,QAAS,OACT8F,KAAM,WACNF,SAAU,UAEZlC,QAAS,CACPoC,KAAM,WACNrO,OAAQ,OACRmO,SAAU,YA0BCO,GAtBS,WACtB,IAAMlF,EAAU/J,KADY,EAEgBkP,oBAAS,GAFzB,mBAErBC,EAFqB,KAEJC,EAFI,KAI5B,OACE,sBAAKzF,UAAWI,EAAQ/C,KAAxB,UACE,cAAC,GAAD,CAAQqH,gBAAiB,kBAAMe,GAAiB,MAChD,cAAC,GAAD,CACEzD,cAAe,kBAAMyD,GAAiB,IACtCxD,WAAYuD,IAEd,qBAAKxF,UAAWI,EAAQ4E,QAAxB,SACE,qBAAKhF,UAAWI,EAAQiF,iBAAxB,SACE,qBAAKrF,UAAWI,EAAQyC,QAAxB,SACE,cAAC,IAAD,cC1CNxM,GAAYC,YAAW,CAC3B+G,KAAM,GACNqI,QAAS,CACP9O,OAAQ,MAsBG6N,GAlBA,SAAC,GAA4B,IAA1BzE,EAAyB,EAAzBA,UAAczB,EAAW,6BACnC6B,EAAU/J,KAEhB,OACE,cAACsO,GAAA,EAAD,yBAAQ3E,UAAWM,YAAKF,EAAQ/C,KAAM2C,GAAY4E,UAAW,GAAOrG,GAApE,aACE,cAACsG,GAAA,EAAD,CAAS7E,UAAWI,EAAQsF,QAA5B,SACE,cAAC,IAAD,CAAYjH,GAAG,IAAf,SACE,cAAC,GAAD,YChBJpI,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWE,QAC1C8C,QAAS,OACTvI,OAAQ,OACRmO,SAAU,SACVlO,MAAO,QAETmO,QAAS,CACP7F,QAAS,OACT8F,KAAM,WACNF,SAAU,SACV3F,WAAY,IAEdiG,iBAAkB,CAChBlG,QAAS,OACT8F,KAAM,WACNF,SAAU,UAEZlC,QAAS,CACPoC,KAAM,WACNrO,OAAQ,OACRmO,SAAU,YAqBCY,GAjBI,WACjB,IAAMvF,EAAU/J,KAEhB,OACE,sBAAK2J,UAAWI,EAAQ/C,KAAxB,UACE,cAAC,GAAD,IACA,qBAAK2C,UAAWI,EAAQ4E,QAAxB,SACE,qBAAKhF,UAAWI,EAAQiF,iBAAxB,SACE,qBAAKrF,UAAWI,EAAQyC,QAAxB,SACE,cAAC,IAAD,c,8BCbG+C,GAvBFC,sBAAW,WAIrBC,GAAS,IAHVC,EAGS,EAHTA,SAGS,IAFTlG,aAES,MAFD,GAEC,EADNtB,EACM,oCACT,OACE,8CACEuH,IAAKA,GACDvH,GAFN,cAIE,cAACyH,GAAA,EAAD,UACE,gCAAQnG,MAETkG,S,wCCDD3E,GACI,sCAQJ/K,GAAYC,aAAW,iBAAO,CAClC+G,KAAM,GACNwE,OAAQ,CACNjL,OAAQ,IACRC,MAAO,SAqCIoP,GAjCC,SAAC,GAAsC,IAApCjG,EAAmC,EAAnCA,UAAWwC,EAAwB,EAAxBA,SAAajE,EAAW,wCAC9C6B,EAAU/J,KAEhB,OACE,cAAC6P,GAAA,EAAD,yBAAMlG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAAgBzB,GAApD,aACE,cAAC4H,GAAA,EAAD,UACE,eAACrD,EAAA,EAAD,CAAKE,WAAW,SAAS7D,QAAQ,OAAO4D,cAAc,SAAtD,UACE,cAACG,EAAA,EAAD,CAAQlD,UAAWI,EAAQyB,OAAQsB,IAAK/B,KACxC,cAACgC,EAAA,EAAD,CAAY1F,MAAM,cAAc0I,cAAY,EAACnI,QAAQ,KAArD,SACGuE,EAASa,OAEZ,cAACD,EAAA,EAAD,CAAY1F,MAAM,gBAAgBO,QAAQ,QAA1C,SACGuE,EAASc,QAEZ,cAACF,EAAA,EAAD,CACEpD,UAAWI,EAAQiG,SACnB3I,MAAM,gBACNO,QAAQ,QAHV,0BAKaqI,KAAO9D,EAAS+D,WAAWC,OACpC,oC,yCCnDDC,GAAU,SAACxJ,GACtB,OAAOyJ,KAAK,CACV7G,MAAO,kCACPH,KAAM,UACNiH,YAAY,EACZC,SAAS,EACT3J,UAkBS4J,GAAQ,SAAChH,EAAO6C,EAAMxB,GACjC,OAAOwF,KAAK7G,EAAO6C,EAAMxB,ICoFZ4F,GA9FQ,SAAC,GAAsC,IAApC9G,EAAmC,EAAnCA,UAAWwC,EAAwB,EAAxBA,SAAajE,EAAW,wCACrD6D,EAAWC,cAD0C,EAE3BkD,mBAAS,CACvClC,KAAM,GACNC,MAAO,KAJkD,mBAEpDyD,EAFoD,KAE1CC,EAF0C,OAOjCzB,mBAAS,CAAElC,KAAM,GAAIC,MAAO,KAPK,mBAOpD2D,EAPoD,KAO7CC,EAP6C,KAS3DvE,qBAAU,WAKR,OAJAqE,EAAY,CACV3D,KAAMb,EAASa,KACfC,MAAOd,EAASc,QAEX,WACL4D,EAAS,CAAE7D,KAAM,GAAIC,MAAO,QAE7B,IAEH,IAAM6D,EAAe,SAACC,GACpBJ,EAAY,2BACPD,GADM,kBAERK,EAAMC,OAAOhE,KAAO+D,EAAMC,OAAOC,UAIhCC,EAAY,uCAAG,WAAOH,GAAP,iBAAApQ,EAAA,yDACnBoQ,EAAMI,iBAEgB,KAAlBT,EAAS1D,KAHM,yCAIV6D,EAAS,2BAAKD,GAAN,IAAa5D,KAAM,wBAJjB,UAKW,KAAnB0D,EAASzD,MALD,yCAMV4D,EAAS,2BAAKD,GAAN,IAAa3D,MAAO,yBANlB,iCAUMmE,IAAMC,MAAM,SAAUX,GAV5B,iBAUTrE,EAVS,EAUTA,KACRN,EAASjB,GAAauB,EAAKA,KAAK1D,QAChC6H,GAAM,OAAQ,gCAAiC,WAZ9B,kDAcjBc,QAAQC,IAAR,MAdiB,0DAAH,sDAkBlB,OACE,8CAAMC,aAAa,MAAMC,YAAU,EAAC9H,UAAWA,GAAezB,GAA9D,aACE,eAAC2H,GAAA,EAAD,WACE,cAAC6B,GAAA,EAAD,CAAYC,UAAU,gCAAgCnI,MAAM,YAC5D,cAAC0D,EAAA,EAAD,IACA,cAAC4C,GAAA,EAAD,UACE,eAAC8B,GAAA,EAAD,CAAMC,WAAS,EAACtI,QAAS,EAAzB,UACE,cAACqI,GAAA,EAAD,CAAM/I,MAAI,EAACiJ,GAAI,EAAGC,GAAI,GAAtB,SACE,cAACC,GAAA,EAAD,CACEC,WAAS,EACTC,WAAW,2BACXtB,QAAOA,EAAM5D,KACbmF,MAAM,OACNnF,KAAK,OACLoF,SAAUtB,EACVuB,UAAQ,EACRpB,MAAOP,EAAS1D,KAChBpF,QAAQ,eAGZ,cAACgK,GAAA,EAAD,CAAM/I,MAAI,EAACiJ,GAAI,EAAGC,GAAI,GAAtB,SACE,cAACC,GAAA,EAAD,CACEC,WAAS,EACTC,WAAW,4BACXtB,QAAOA,EAAM3D,MACbkF,MAAM,QACNnF,KAAK,QACLoF,SAAUtB,EACVuB,UAAQ,EACRpB,MAAOP,EAASzD,MAChBrF,QAAQ,oBAKhB,cAACsF,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CAAK3D,QAAQ,OAAOK,eAAe,WAAWyD,EAAG,EAAjD,SACE,cAACxC,EAAA,EAAD,CAAQ/C,MAAM,UAAUO,QAAQ,YAAYuC,QAAS+G,EAArD,mCC3FJlR,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CuM,UAAW,OACXtJ,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,QAyBfgJ,GArBC,WACd,IAAMxI,EAAU/J,KAEVmM,EAAWC,aAAY,SAAC1D,GAAD,OAAWA,EAAMC,MAAM0D,QAEpD,OACE,cAAC,GAAD,CAAM1C,UAAWI,EAAQ/C,KAAMwC,MAAM,UAArC,SACE,cAACgJ,GAAA,EAAD,CAAWlL,SAAS,KAApB,SACE,eAACsK,GAAA,EAAD,CAAMC,WAAS,EAACtI,QAAS,EAAzB,UACE,cAACqI,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGX,GAAI,EAAGC,GAAI,GAA7B,SACE,cAAC,GAAD,CAAS5F,SAAUA,MAErB,cAACyF,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGX,GAAI,EAAGC,GAAI,GAA7B,SACE,cAAC,GAAD,CAAgB5F,SAAUA,c,0FC5BvBuG,GADK,SAACC,GAAD,OAAUA,GAAY,KCQ3BC,GARK,eAAC5F,EAAD,uDAAQ,GAAR,OAClBA,EACGM,QAAQ,MAAO,KACfuF,MAAM,KACNC,MAAM,EAAG,GACT1F,KAAI,SAAC2F,GAAD,OAAOA,GAAKA,EAAE,GAAGC,iBACrBC,KAAK,KCAJjT,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,GACNwE,OAAQ,CACNpL,OAAQuF,EAAM4D,QAAQ,GACtBD,YAAa3D,EAAM4D,QAAQ,QAuBhB2J,OAnBf,YAAuC,IAAhBC,EAAe,EAAfA,MAAOnG,EAAQ,EAARA,KACtBjD,EAAU/J,KAChB,OACE,eAACyM,EAAA,EAAD,CAAKE,WAAW,SAAS7D,QAAQ,OAAjC,UACE,cAAC+D,EAAA,EAAD,CAAQlD,UAAWI,EAAQyB,OAAQsB,IAAKqG,EAAxC,SACGP,GAAY5F,KAEf,cAACD,EAAA,EAAD,CAAY1F,MAAM,cAAcO,QAAQ,QAAxC,SACG8K,GAAY1F,SCFfhN,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,OA0IOoM,GAvIC,SAAC,GAAuC,IAArCzJ,EAAoC,EAApCA,UAAW0J,EAAyB,EAAzBA,UAAcnL,EAAW,yCAC/C6B,EAAU/J,KADqC,EAECkP,mBAAS,IAFV,mBAE9CoE,EAF8C,KAEzBC,EAFyB,OAG3BrE,mBAAS,IAHkB,mBAG9CsE,EAH8C,KAGvCC,EAHuC,OAI7BvE,mBAAS,GAJoB,mBAI9CwE,EAJ8C,KAIxCC,EAJwC,KAqDrD,OACE,eAAC9D,GAAA,EAAD,yBAAMlG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAAgBzB,GAApD,cACE,cAAC,KAAD,UACE,cAACuE,EAAA,EAAD,CAAKmH,SAAU,KAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW3T,QAAQ,WAAnB,SACE,cAAC4T,GAAA,EAAD,CACEC,QAASZ,EAAoBa,SAAWd,EAAUc,OAClD9M,MAAM,UACN+M,cACEd,EAAoBa,OAAS,GAC7Bb,EAAoBa,OAASd,EAAUc,OAEzC/B,SA9DM,SAACrB,GACvB,IAAIsD,EAGFA,EADEtD,EAAMC,OAAOkD,QACUb,EAAUjG,KAAI,SAACkH,GAAD,OAAcA,EAASC,OAErC,GAG3BhB,EAAuBc,QAwDX,cAACL,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,kBACA,cAACA,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,qCAGJ,cAACQ,GAAA,EAAD,UACGnB,EAAUP,MAAM,EAAGU,GAAOpG,KAAI,SAACkH,GAAD,OAC7B,eAACP,GAAA,EAAD,CACEU,OAAK,EAELC,UAAyD,IAA/CpB,EAAoB5P,QAAQ4Q,EAASC,KAHjD,UAKE,cAACP,GAAA,EAAD,CAAW3T,QAAQ,WAAnB,SACE,cAAC4T,GAAA,EAAD,CACEC,SAAwD,IAA/CZ,EAAoB5P,QAAQ4Q,EAASC,KAC9CnC,SAAU,SAACrB,GAAD,OA1EN,SAACA,EAAO4D,GAC9B,IAAMC,EAAgBtB,EAAoB5P,QAAQiR,GAC9CN,EAAyB,IAEN,IAAnBO,EACFP,EAAyBA,EAAuBQ,OAC9CvB,EACAqB,GAEyB,IAAlBC,EACTP,EAAyBA,EAAuBQ,OAC9CvB,EAAoBR,MAAM,IAEnB8B,IAAkBtB,EAAoBa,OAAS,EACxDE,EAAyBA,EAAuBQ,OAC9CvB,EAAoBR,MAAM,GAAI,IAEvB8B,EAAgB,IACzBP,EAAyBA,EAAuBQ,OAC9CvB,EAAoBR,MAAM,EAAG8B,GAC7BtB,EAAoBR,MAAM8B,EAAgB,KAI9CrB,EAAuBc,GAkDgBS,CAAgB/D,EAAOuD,EAASC,MACrDtD,MAAM,WAGV,cAAC+C,GAAA,EAAD,UACE,cAAC,GAAD,CAAahH,KAAMsH,EAAStH,SAE9B,cAACgH,GAAA,EAAD,UAAYtB,GAAY4B,EAASrH,SACjC,cAAC+G,GAAA,EAAD,UAAYtB,GAAY4B,EAASzI,YACjC,cAACmI,GAAA,EAAD,UAAYtB,GAAY4B,EAASS,UACjC,cAACf,GAAA,EAAD,UAAYtB,GAAY4B,EAASU,UACjC,cAAChB,GAAA,EAAD,UAAYtB,GAAY4B,EAASW,OACjC,eAACjB,GAAA,EAAD,WACGM,EAASY,IADZ,IACkBZ,EAASa,OAE3B,cAACnB,GAAA,EAAD,UAAYtB,GAAY4B,EAASc,QACjC,cAACpB,GAAA,EAAD,UACG/D,KAAOqE,EAASpE,WAAWC,OAAO,kBAvBhCmE,EAASC,iBA+B1B,cAACc,GAAA,EAAD,CACErN,UAAU,MACVsN,MAAOjC,EAAUc,OACjBoB,aAvEmB,SAACxE,EAAOyE,GAC/B7B,EAAQ6B,IAuEJC,oBA5EoB,SAAC1E,GACzB0C,EAAS1C,EAAMC,OAAOC,QA4ElByC,KAAMA,EACNgC,YAAalC,EACbmC,mBAAoB,CAAC,EAAG,GAAI,WCpJvBC,GAAY,Y,8BCenB5V,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,GACN6O,aAAc,CACZvM,YAAa3D,EAAM4D,QAAQ,IAE7BuM,aAAc,CACZxM,YAAa3D,EAAM4D,QAAQ,QAkEhBwM,OA9Df,YAOI,IANFpM,EAMC,EANDA,UACAH,EAKC,EALDA,MACAwM,EAIC,EAJDA,cACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,iBACGhO,EACF,mFACK6B,EAAU/J,KAEhB,OACE,6CAAK2J,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAAgBzB,GAAnD,aACE,cAACuE,EAAA,EAAD,CAAK0J,GAAI,EAAT,SACE,cAACtG,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACE5B,MAAO,CACLpF,QAAS,OACT6D,WAAY,SACZxD,eAAgB,iBAJpB,UAOE,cAACsD,EAAA,EAAD,CAAKmH,SAAU,IAAf,SACE,cAAC5B,GAAA,EAAD,CACEC,WAAS,EACTmE,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,GAAA,EAAD,CAASrR,SAAS,QAAQkC,MAAM,SAAhC,SACE,cAAC,KAAD,SAKRoP,YAAW,iBAAYjN,GACvB5B,QAAQ,WACRwK,SAAU6D,OAGZD,GACA,cAACvJ,EAAA,EAAD,CAAK3D,QAAQ,OAAOK,eAAe,WAAnC,SACE,eAACiB,EAAA,EAAD,CACE/C,MAAM,UACNO,QAAQ,YACRuC,QAAS+L,EAHX,iBAKO1M,kBCzDjBxJ,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CuM,UAAW,OACXtJ,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,QAoCfmN,GAhCU,WACvB,IAAM3M,EAAU/J,KACV+L,EAAWC,cAEXG,EAAWC,aAAY,SAAC1D,GAAD,OAAWA,EAAMqC,KAAKsB,QAgBnD,OAdAC,qBAAU,YACO,uCAAG,gCAAA3L,EAAA,+EAESgW,IAAMC,IAAI,SAFnB,gBAENvK,EAFM,EAENA,KACRN,GC9BiBnB,ED8BCyB,EAAKA,KAAKwK,MC9BE,CACpChM,KAAM+K,GACNhL,aDyBoB,gDAKd0G,QAAQC,IAAR,MACAD,QAAQC,IAAR,UAAY,KAAMuF,gBAAlB,aAAY,EAAgBzK,MAC5BiF,QAAQC,IAAI,KAAMuF,UAPJ,kCC3BE,IAAClM,ID2BH,oBAAH,qDAUfmM,KACC,CAAChL,IAGF,cAAC,GAAD,CAAMpC,UAAWI,EAAQ/C,KAAMwC,MAAM,YAArC,SACE,eAACgJ,GAAA,EAAD,CAAWlL,UAAU,EAArB,UACE,cAAC,GAAD,CAAckC,MAAM,WAAWwM,eAAa,IAC5C,cAACvJ,EAAA,EAAD,CAAK0J,GAAI,EAAT,SACE,cAAC,GAAD,CAAS9C,UAAWlH,Y,0CE/BxBnM,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJzG,OAAQ,QAEViL,OAAQ,CACN9K,gBAAiBuF,IAAO+Q,IAAI,KAC5BzW,OAAQ,GACRC,MAAO,IAETyW,eAAgB,CACd5P,MAAOpB,IAAO+Q,IAAI,MAEpBE,gBAAiB,CACf7P,MAAOpB,IAAO+Q,IAAI,KAClB1N,YAAa3D,EAAM4D,QAAQ,QAmEhB4N,GA/DA,SAAC,GAA4B,IAA1BxN,EAAyB,EAAzBA,UAAczB,EAAW,6BACnC6B,EAAU/J,KAEhB,OACE,cAAC6P,GAAA,EAAD,yBACElG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAC1BzB,GAFN,aAIE,eAAC4H,GAAA,EAAD,WACE,eAAC8B,GAAA,EAAD,CACEC,WAAS,EACTuF,QAAQ,gBACR7N,QAAS,EAHX,UAKE,eAACqI,GAAA,EAAD,CAAM/I,MAAI,EAAV,UACE,cAACkE,EAAA,EAAD,CACE1F,MAAM,gBACN0I,cAAY,EACZnI,QAAQ,KAHV,oBAOA,cAACmF,EAAA,EAAD,CACE1F,MAAM,cACNO,QAAQ,KAFV,wBAOF,cAACgK,GAAA,EAAD,CAAM/I,MAAI,EAAV,SACE,cAACgE,EAAA,EAAD,CAAQlD,UAAWI,EAAQyB,OAA3B,SACE,cAAC,KAAD,WAIN,eAACiB,EAAA,EAAD,CACE0J,GAAI,EACJrN,QAAQ,OACR6D,WAAW,SAHb,UAKE,cAAC,KAAD,CAAmBhD,UAAWI,EAAQkN,iBACtC,cAAClK,EAAA,EAAD,CACEpD,UAAWI,EAAQmN,gBACnBtP,QAAQ,QAFV,iBAMA,cAACmF,EAAA,EAAD,CACE1F,MAAM,gBACNO,QAAQ,UAFV,wC,6DCzDJyE,GAAO,CACX,CACEsI,GAAI0C,eACJ5H,IAAK,UACL6H,OAAQ,KACRhD,SAAU,CACRtH,KAAM,qBAERkD,UAAW,WACXqH,OAAQ,WAEV,CACE5C,GAAI0C,eACJ5H,IAAK,UACL6H,OAAQ,KACRhD,SAAU,CACRtH,KAAM,UAERkD,UAAW,WACXqH,OAAQ,aAEV,CACE5C,GAAI0C,eACJ5H,IAAK,UACL6H,OAAQ,MACRhD,SAAU,CACRtH,KAAM,oBAERkD,UAAW,SACXqH,OAAQ,YAEV,CACE5C,GAAI0C,eACJ5H,IAAK,UACL6H,OAAQ,MACRhD,SAAU,CACRtH,KAAM,eAERkD,UAAW,WACXqH,OAAQ,WAEV,CACE5C,GAAI0C,eACJ5H,IAAK,UACL6H,OAAQ,MACRhD,SAAU,CACRtH,KAAM,oBAERkD,UAAW,WACXqH,OAAQ,aAEV,CACE5C,GAAI0C,eACJ5H,IAAK,UACL6H,OAAQ,MACRhD,SAAU,CACRtH,KAAM,gBAERkD,UAAW,WACXqH,OAAQ,cAINvX,GAAYC,aAAW,iBAAO,CAClC+G,KAAM,GACNwQ,QAAS,CACPrO,eAAgB,gBAgELsO,GA5DM,SAAC,GAA4B,IAA1B9N,EAAyB,EAAzBA,UAAczB,EAAW,6BACzC6B,EAAU/J,KAD+B,EAE9BkP,mBAAS7C,IAAnBqL,EAFwC,oBAI/C,OACE,eAAC7H,GAAA,EAAD,yBAAMlG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAAgBzB,GAApD,cACE,cAACwJ,GAAA,EAAD,CAAYlI,MAAM,kBAClB,cAAC0D,EAAA,EAAD,IACA,cAAC,KAAD,UACE,cAACT,EAAA,EAAD,CAAKmH,SAAU,IAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,CAAW2D,cAAc,OAAzB,SACE,cAACC,GAAA,EAAD,CAASC,WAAY,IAAKrO,MAAM,OAAhC,SACE,cAACsO,GAAA,EAAD,CAAgBrO,QAAM,EAACsO,UAAU,OAAjC,sBAKJ,cAAC/D,GAAA,EAAD,0BAGJ,cAACQ,GAAA,EAAD,UACGkD,EAAOtK,KAAI,SAAC4K,GAAD,OACV,eAACjE,GAAA,EAAD,CAAUU,OAAK,EAAf,UACE,cAACT,GAAA,EAAD,UAAYgE,EAAMvI,MAClB,cAACuE,GAAA,EAAD,UAAYgE,EAAM1D,SAAStH,OAC3B,cAACgH,GAAA,EAAD,UACG/D,KAAO+H,EAAM9H,WAAWC,OAAO,gBAElC,cAAC6D,GAAA,EAAD,UACE,cAAC,KAAD,CAAM3M,MAAM,UAAU8K,MAAO6F,EAAMT,OAAQ1P,KAAK,cAP/BmQ,EAAMzD,iBAerC,cAAC9H,EAAA,EAAD,CAAK3D,QAAQ,OAAOK,eAAe,WAAWyD,EAAG,EAAjD,SACE,cAACxC,EAAA,EAAD,CACE/C,MAAM,UACN4Q,QAAS,cAAC,KAAD,IACTpQ,KAAK,QACLD,QAAQ,OAJV,6B,yCCpHFyE,GAAO,CACX,CACEsI,GAAI0C,eACJrK,KAAM,UACNkL,SAAU,wCACVC,UAAWlI,OAASmI,SAAS,EAAG,UAElC,CACEzD,GAAI0C,eACJrK,KAAM,qBACNkL,SAAU,wCACVC,UAAWlI,OAASmI,SAAS,EAAG,UAElC,CACEzD,GAAI0C,eACJrK,KAAM,QACNkL,SAAU,wCACVC,UAAWlI,OAASmI,SAAS,EAAG,UAElC,CACEzD,GAAI0C,eACJrK,KAAM,OACNkL,SAAU,wCACVC,UAAWlI,OAASmI,SAAS,EAAG,UAElC,CACEzD,GAAI0C,eACJrK,KAAM,SACNkL,SAAU,wCACVC,UAAWlI,OAASmI,SAAS,EAAG,WAI9BpY,GAAYC,YAAW,CAC3B+G,KAAM,CACJzG,OAAQ,QAEV4S,MAAO,CACL5S,OAAQ,GACRC,MAAO,MAsDI6X,GAlDQ,SAAC,GAA4B,IAA1B1O,EAAyB,EAAzBA,UAAczB,EAAW,6BAC3C6B,EAAU/J,KADiC,EAE9BkP,mBAAS7C,IAArBiM,EAF0C,oBAIjD,OACE,eAACzI,GAAA,EAAD,yBAAMlG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAAgBzB,GAApD,cACE,cAACwJ,GAAA,EAAD,CACE6G,SAAQ,UAAKD,EAASnE,OAAd,aACR3K,MAAM,oBAER,cAAC0D,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACGmL,EAASlL,KAAI,SAACoL,EAASzU,GAAV,OACZ,eAACiG,EAAA,EAAD,CAAUyO,QAAS1U,EAAIuU,EAASnE,OAAS,EAAzC,UACE,cAACuE,GAAA,EAAD,UACE,qBACEzK,IAAI,UACJtE,UAAWI,EAAQoJ,MACnBrG,IAAK0L,EAAQN,aAGjB,cAACS,GAAA,EAAD,CACEtS,QAASmS,EAAQxL,KACjBtG,UAAS,kBAAa8R,EAAQL,UAAUS,aAE1C,cAACnK,GAAA,EAAD,CAAYoK,KAAK,MAAMhR,KAAK,QAA5B,SACE,cAAC,KAAD,QAb6C2Q,EAAQjE,UAkB7D,cAACrH,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CAAK3D,QAAQ,OAAOK,eAAe,WAAWyD,EAAG,EAAjD,SACE,cAACxC,EAAA,EAAD,CACE/C,MAAM,UACN4Q,QAAS,cAAC,KAAD,IACTpQ,KAAK,QACLD,QAAQ,OAJV,6B,8BC/EF5H,GAAYC,aAAW,iBAAO,CAClC+G,KAAM,OAkIO8R,GA/HD,SAAC,GAA4B,IAA1BnP,EAAyB,EAAzBA,UAAczB,EAAW,6BAClC6B,EAAU/J,KACV2F,EAAQoT,eAER1M,EAAO,CACX2M,SAAU,CACR,CACEtY,gBAAiBuF,IAAOgT,OAAO,KAC/B5M,KAAM,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAC9B8F,MAAO,aAET,CACEzR,gBAAiBuF,IAAOiT,KAAK,KAC7B7M,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/B8F,MAAO,cAGXgH,OAAQ,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,UAGlD9W,EAAU,CACd+W,WAAW,EACXjX,aAAc,GACdkX,OAAQ,CAAEhZ,QAAS,GACnBiZ,OAAQ,CAAExQ,SAAS,GACnByQ,qBAAqB,EACrBC,YAAY,EACZC,OAAQ,CACNC,MAAO,CACL,CACEC,aAAc,GACdC,gBAAiB,GACjBC,cAAe,GACfC,mBAAoB,GACpBC,MAAO,CACLC,UAAWrU,EAAME,QAAQe,KAAKF,WAEhCuT,UAAW,CACTnR,SAAS,EACToR,YAAY,KAIlBC,MAAO,CACL,CACEJ,MAAO,CACLC,UAAWrU,EAAME,QAAQe,KAAKF,UAC9B0T,aAAa,EACbxX,IAAK,GAEPqX,UAAW,CACTI,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnBjT,MAAO1B,EAAME,QAAQ4S,QACrByB,YAAY,EACZK,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,GAC3BC,cAAe9U,EAAME,QAAQ4S,YAKrCiC,SAAU,CACRha,gBAAiBiF,EAAME,QAAQC,WAAWE,QAC1C2U,cAAehV,EAAME,QAAQe,KAAKF,UAClCpD,YAAaqC,EAAME,QAAQ4S,QAC3BvW,YAAa,EACb0Y,SAAS,EACTC,gBAAiBlV,EAAME,QAAQe,KAAKF,UACpCoU,WAAW,EACXC,KAAM,QACNC,eAAgBrV,EAAME,QAAQe,KAAKP,UAIvC,OACE,eAACwJ,GAAA,EAAD,yBACElG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAC1BzB,GAFN,cAIE,cAACwJ,GAAA,EAAD,CACEuJ,OACE,cAAC7Q,EAAA,EAAD,CACE6N,QAAS,cAAC,KAAD,IACTpQ,KAAK,QACLD,QAAQ,OAHV,yBAQF4B,MAAM,iBAER,cAAC0D,EAAA,EAAD,IACA,cAAC4C,GAAA,EAAD,UACE,cAACrD,EAAA,EAAD,CACElM,OAAQ,IACRgW,SAAS,WAFX,SAIE,cAAC,MAAD,CACElK,KAAMA,EACNhK,QAASA,QAIf,cAAC6K,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CACE3D,QAAQ,OACRK,eAAe,WACfyD,EAAG,EAHL,SAKE,cAACxC,EAAA,EAAD,CACE/C,MAAM,UACN4Q,QAAS,cAAC,KAAD,IACTpQ,KAAK,QACLD,QAAQ,OAJV,6B,+BCpHF5H,GAAYC,aAAW,iBAAO,CAClC+G,KAAM,CACJzG,OAAQ,QAEViL,OAAQ,CACN9K,gBAAiBuF,IAAOiV,OAAO,KAC/B3a,OAAQ,GACRC,MAAO,QAsDI2a,GAlDO,SAAC,GAA4B,IAA1BxR,EAAyB,EAAzBA,UAAczB,EAAW,6BAC1C6B,EAAU/J,KAEhB,OACE,cAAC6P,GAAA,EAAD,yBACElG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAC1BzB,GAFN,aAIE,eAAC4H,GAAA,EAAD,WACE,eAAC8B,GAAA,EAAD,CACEC,WAAS,EACTuF,QAAQ,gBACR7N,QAAS,EAHX,UAKE,eAACqI,GAAA,EAAD,CAAM/I,MAAI,EAAV,UACE,cAACkE,EAAA,EAAD,CACE1F,MAAM,gBACN0I,cAAY,EACZnI,QAAQ,KAHV,4BAOA,cAACmF,EAAA,EAAD,CACE1F,MAAM,cACNO,QAAQ,KAFV,sBAOF,cAACgK,GAAA,EAAD,CAAM/I,MAAI,EAAV,SACE,cAACgE,EAAA,EAAD,CAAQlD,UAAWI,EAAQyB,OAA3B,SACE,cAAC,KAAD,WAIN,cAACiB,EAAA,EAAD,CAAK0J,GAAI,EAAT,SACE,cAACiF,GAAA,EAAD,CACEnK,MAAO,KACPrJ,QAAQ,yB,0CCjDd5H,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJzG,OAAQ,QAEViL,OAAQ,CACN9K,gBAAiBuF,IAAOM,MAAM,KAC9BhG,OAAQ,GACRC,MAAO,IAETyW,eAAgB,CACd5P,MAAOpB,IAAOM,MAAM,MAEtB2Q,gBAAiB,CACf7P,MAAOpB,IAAOM,MAAM,KACpB+C,YAAa3D,EAAM4D,QAAQ,QAmEhB8R,GA/DQ,SAAC,GAA4B,IAA1B1R,EAAyB,EAAzBA,UAAczB,EAAW,6BAC3C6B,EAAU/J,KAEhB,OACE,cAAC6P,GAAA,EAAD,yBACElG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAC1BzB,GAFN,aAIE,eAAC4H,GAAA,EAAD,WACE,eAAC8B,GAAA,EAAD,CACEC,WAAS,EACTuF,QAAQ,gBACR7N,QAAS,EAHX,UAKE,eAACqI,GAAA,EAAD,CAAM/I,MAAI,EAAV,UACE,cAACkE,EAAA,EAAD,CACE1F,MAAM,gBACN0I,cAAY,EACZnI,QAAQ,KAHV,6BAOA,cAACmF,EAAA,EAAD,CACE1F,MAAM,cACNO,QAAQ,KAFV,sBAOF,cAACgK,GAAA,EAAD,CAAM/I,MAAI,EAAV,SACE,cAACgE,EAAA,EAAD,CAAQlD,UAAWI,EAAQyB,OAA3B,SACE,cAAC,KAAD,WAIN,eAACiB,EAAA,EAAD,CACE0J,GAAI,EACJrN,QAAQ,OACR6D,WAAW,SAHb,UAKE,cAAC,KAAD,CAAiBhD,UAAWI,EAAQkN,iBACpC,cAAClK,EAAA,EAAD,CACEpD,UAAWI,EAAQmN,gBACnBtP,QAAQ,QAFV,iBAMA,cAACmF,EAAA,EAAD,CACE1F,MAAM,gBACNO,QAAQ,UAFV,wC,qBCnEJ5H,GAAYC,aAAW,iBAAO,CAClC+G,KAAM,CACJzG,OAAQ,QAEViL,OAAQ,CACN9K,gBAAiBuF,IAAOgT,OAAO,KAC/B1Y,OAAQ,GACRC,MAAO,QAgDI8a,GA5CK,SAAC,GAA4B,IAA1B3R,EAAyB,EAAzBA,UAAczB,EAAW,6BACxC6B,EAAU/J,KAEhB,OACE,cAAC6P,GAAA,EAAD,yBACElG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAC1BzB,GAFN,aAIE,cAAC4H,GAAA,EAAD,UACE,eAAC8B,GAAA,EAAD,CACEC,WAAS,EACTuF,QAAQ,gBACR7N,QAAS,EAHX,UAKE,eAACqI,GAAA,EAAD,CAAM/I,MAAI,EAAV,UACE,cAACkE,EAAA,EAAD,CACE1F,MAAM,gBACN0I,cAAY,EACZnI,QAAQ,KAHV,0BAOA,cAACmF,EAAA,EAAD,CACE1F,MAAM,cACNO,QAAQ,KAFV,wBAOF,cAACgK,GAAA,EAAD,CAAM/I,MAAI,EAAV,SACE,cAACgE,EAAA,EAAD,CAAQlD,UAAWI,EAAQyB,OAA3B,SACE,cAAC,KAAD,iB,+DCrCRxL,GAAYC,aAAW,iBAAO,CAClC+G,KAAM,CACJzG,OAAQ,YA+HGgb,GA3HS,SAAC,GAA4B,IAA1B5R,EAAyB,EAAzBA,UAAczB,EAAW,6BAC5C6B,EAAU/J,KACV2F,EAAQoT,eAER1M,EAAO,CACX2M,SAAU,CACR,CACE3M,KAAM,CAAC,GAAI,GAAI,IACf3L,gBAAiB,CACfuF,IAAOgT,OAAO,KACdhT,IAAO+Q,IAAI,KACX/Q,IAAOiV,OAAO,MAEhBhZ,YAAa,EACboB,YAAa2C,IAAOC,OAAOC,MAC3BqV,iBAAkBvV,IAAOC,OAAOC,QAGpCgT,OAAQ,CAAC,UAAW,SAAU,WAG1B9W,EAAU,CACd+W,WAAW,EACXqC,iBAAkB,GAClBpC,OAAQ,CAAEhZ,QAAS,GACnBiZ,OAAQ,CACNxQ,SAAS,GAEXyQ,qBAAqB,EACrBC,YAAY,EACZkB,SAAU,CACRha,gBAAiBiF,EAAME,QAAQC,WAAWE,QAC1C2U,cAAehV,EAAME,QAAQe,KAAKF,UAClCpD,YAAaqC,EAAME,QAAQ4S,QAC3BvW,YAAa,EACb0Y,SAAS,EACTC,gBAAiBlV,EAAME,QAAQe,KAAKF,UACpCoU,WAAW,EACXC,KAAM,QACNC,eAAgBrV,EAAME,QAAQe,KAAKP,UAIjCqV,EAAU,CACd,CACElS,MAAO,UACPyH,MAAO,GACP5H,KAAMsS,KACNtU,MAAOpB,IAAOgT,OAAO,MAEvB,CACEzP,MAAO,SACPyH,MAAO,GACP5H,KAAMuS,KACNvU,MAAOpB,IAAO+Q,IAAI,MAEpB,CACExN,MAAO,SACPyH,MAAO,GACP5H,KAAMwS,KACNxU,MAAOpB,IAAOiV,OAAO,OAIzB,OACE,eAACrL,GAAA,EAAD,yBACElG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAC1BzB,GAFN,cAIE,cAACwJ,GAAA,EAAD,CAAYlI,MAAM,sBAClB,cAAC0D,EAAA,EAAD,IACA,eAAC4C,GAAA,EAAD,WACE,cAACrD,EAAA,EAAD,CACElM,OAAQ,IACRgW,SAAS,WAFX,SAIE,cAAC,WAAD,CACElK,KAAMA,EACNhK,QAASA,MAGb,cAACoK,EAAA,EAAD,CACE3D,QAAQ,OACRK,eAAe,SACfgN,GAAI,EAHN,SAKGuF,EAAQtO,KAAI,gBACX/F,EADW,EACXA,MACMwC,EAFK,EAEXR,KACAG,EAHW,EAGXA,MACAyH,EAJW,EAIXA,MAJW,OAMX,eAACxE,EAAA,EAAD,CAEEG,EAAG,EACH3F,UAAU,SAHZ,UAKE,cAAC4C,EAAD,CAAMxC,MAAM,WACZ,cAAC0F,EAAA,EAAD,CACE1F,MAAM,cACNO,QAAQ,QAFV,SAIG4B,IAEH,eAACuD,EAAA,EAAD,CACEmB,MAAO,CAAE7G,SACTO,QAAQ,KAFV,UAIGqJ,EAJH,SAXKzH,gBC1GbxJ,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CuM,UAAW,OACXtJ,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,QAyCfuS,GArCG,WAChB,IAAM/R,EAAU/J,KAEhB,OACE,cAAC,GAAD,CAAM2J,UAAWI,EAAQ/C,KAAMwC,MAAM,YAArC,SACE,cAACgJ,GAAA,EAAD,CAAWlL,UAAU,EAArB,SACE,eAACsK,GAAA,EAAD,CAAMC,WAAS,EAACtI,QAAS,EAAzB,UACE,cAACqI,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGsJ,GAAI,EAAGC,GAAI,EAAGjK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGsJ,GAAI,EAAGC,GAAI,EAAGjK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGsJ,GAAI,EAAGC,GAAI,EAAGjK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGsJ,GAAI,EAAGC,GAAI,EAAGjK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGX,GAAI,GAAIkK,GAAI,EAAGjK,GAAI,GAArC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGX,GAAI,EAAGkK,GAAI,EAAGjK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGX,GAAI,EAAGkK,GAAI,EAAGjK,GAAI,GAApC,SACE,cAAC,GAAD,MAEF,cAACH,GAAA,EAAD,CAAM/I,MAAI,EAAC4J,GAAI,EAAGX,GAAI,GAAIkK,GAAI,EAAGjK,GAAI,GAArC,SACE,cAAC,GAAD,c,oBC1BN/R,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CxF,OAAQ,OACRyI,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,QAwHf0S,GApHG,WAChB,IAAMlS,EAAU/J,KACVkc,EAAWhQ,cACXH,EAAWC,cAMjB,OAJAM,qBAAU,WACR4P,EAAS,SAAU,CAAE5O,SAAS,MAC7B,IAGD,cAAC,GAAD,CAAM3D,UAAWI,EAAQ/C,KAAMwC,MAAM,QAArC,SACE,cAACiD,EAAA,EAAD,CACE3D,QAAQ,OACR4D,cAAc,SACdnM,OAAO,OACP4I,eAAe,SAJjB,SAME,cAACqJ,GAAA,EAAD,CAAWlL,SAAS,KAApB,SACE,cAAC,KAAD,CACE6U,cAAe,CACblP,MAAO,GACPmP,SAAU,IAEZC,iBAAkBC,OAAaC,MAAM,CACnCtP,MAAOqP,OACJrP,MAAM,yBACNuP,IAAI,KACJnK,SAAS,qBACZ+J,SAAUE,OAAaE,IAAI,KAAKnK,SAAS,0BAE3CoK,SAAU,SAAC/L,EAAUgM,GACnBtL,IAAMuL,KAAK,eAAgBjM,GACxBkM,MAAK,SAACC,GACLvL,QAAQC,IAAIsL,EAAIxQ,MAEhBN,EAASpB,GAAWkS,EAAIxQ,KAAKA,KAAKyQ,WAEnCC,OAAM,YAAmB,IAAhBjG,EAAe,EAAfA,UACR,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAUzK,KAAKuE,SACjB8L,EAAQM,UAAR,OAAkBlG,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUzK,KAAKuE,OACjC8L,EAAQO,eAAc,QAtBhC,SA4BG,gBACCC,EADD,EACCA,OACAC,EAFD,EAECA,WACArM,EAHD,EAGCA,aACAI,EAJD,EAICA,aACAkM,EALD,EAKCA,aACAC,EAND,EAMCA,QACAC,EAPD,EAOCA,OAPD,OASC,uBAAMb,SAAUvL,EAAhB,UACE,eAACzE,EAAA,EAAD,CAAK8Q,GAAI,EAAT,UACE,cAACxQ,EAAA,EAAD,CAAY1F,MAAM,cAAcO,QAAQ,KAAxC,qBAGA,cAACmF,EAAA,EAAD,CACE1F,MAAM,gBACN0I,cAAY,EACZnI,QAAQ,QAHV,iDASF,cAACoK,GAAA,EAAD,CACEpB,MAAO4M,QAAQH,EAAQpQ,OAASiQ,EAAOjQ,OACvCgF,WAAS,EACTC,WAAYmL,EAAQpQ,OAASiQ,EAAOjQ,MACpCkF,MAAM,gBACN/R,OAAO,SACP4M,KAAK,QACLyQ,OAAQN,EACR/K,SAAUtB,EACVjG,KAAK,QACLoG,MAAOqM,EAAOrQ,MACdrF,QAAQ,aAEV,cAACoK,GAAA,EAAD,CACEpB,MAAO4M,QAAQH,EAAQjB,UAAYc,EAAOd,UAC1CnK,WAAS,EACTC,WAAYmL,EAAQjB,UAAYc,EAAOd,SACvCjK,MAAM,WACN/R,OAAO,SACP4M,KAAK,WACLyQ,OAAQN,EACR/K,SAAUtB,EACVjG,KAAK,WACLoG,MAAOqM,EAAOlB,SACdxU,QAAQ,aAEV,cAAC6E,EAAA,EAAD,CAAKiR,GAAI,EAAT,SACE,cAACtT,EAAA,EAAD,CACE/C,MAAM,UACNsW,SAAUP,EACVnL,WAAS,EACTpK,KAAK,QACLgD,KAAK,SACLjD,QAAQ,YANV,wCC7HZ5H,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CxF,OAAQ,OACRyI,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,IAE5B4J,MAAO,CACLyK,UAAW,GACX9U,QAAS,eACTxB,SAAU,OACV9G,MAAO,SAoCIqd,GAhCM,WACnB,IAAM9T,EAAU/J,KAEhB,OACE,cAAC,GAAD,CAAM2J,UAAWI,EAAQ/C,KAAMwC,MAAM,MAArC,SACE,cAACiD,EAAA,EAAD,CACE3D,QAAQ,OACR4D,cAAc,SACdnM,OAAO,OACP4I,eAAe,SAJjB,SAME,eAACqJ,GAAA,EAAD,CAAWlL,SAAS,KAApB,UACE,cAACyF,EAAA,EAAD,CAAY+Q,MAAM,SAASzW,MAAM,cAAcO,QAAQ,KAAvD,+DAGA,cAACmF,EAAA,EAAD,CAAY+Q,MAAM,SAASzW,MAAM,cAAcO,QAAQ,YAAvD,sHAIA,cAAC6E,EAAA,EAAD,CAAKxF,UAAU,SAAf,SACE,qBACEgH,IAAI,oBACJtE,UAAWI,EAAQoJ,MACnBrG,IAAI,4DC1CLiR,GAAc,cACdC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAiB,iBCSjBC,GAAoB,SAACzT,GAAD,MAAc,CAC7CC,KAAMmT,GACNpT,YAOW0T,GAAgB,SAAC1T,GAAD,MAAc,CACzCC,KAAMqT,GACNtT,Y,0CCvBa2T,GAFC,SAAC5L,GAAD,OAAUA,EAAIwB,QAAU,GAAKxB,EAAI6L,OAAO,EAAG,GAAK,MAAQ7L,G,qBCGzD8L,GAFC,SAACC,GAAD,OAAUC,KAAMD,GAAMvO,OAAO,eCAhCyO,GAAY,UADD,mCACC,OCgCVC,GA3BD,SAAC,GAAqC,IAAnC1L,EAAkC,EAAlCA,MAAO2L,EAA2B,EAA3BA,WAAerX,EAAY,sCAIjD,OACE,cAACoF,EAAA,EAAD,aACEC,IAAKqG,GAAS,kCACdlF,IAAKkF,EACLjF,MAAO,CACL1N,MAAOse,EAAa,IAAM,GAC1Bve,OAAQue,EAAa,IAAM,GAC3BC,UAAW,QACX5Q,aAAc,EACd/N,OAAQ,OACR4e,UAAW,qCACXvT,OAAQ,YAENhE,KCDKwX,GAjBO,SAAC,GAOhB,IANL9U,EAMI,EANJA,QACA+U,EAKI,EALJA,SACAC,EAII,EAJJA,SACA3V,EAGI,EAHJA,MACAkG,EAEI,EAFJA,SACA0P,EACI,EADJA,UAEA,OACE,cAAC,KAAD,CAAS5V,MAAOA,EAAO4V,UAAWA,EAAWzV,UAAWuV,EAAxD,SACE,cAACzQ,GAAA,EAAD,CAAYtE,QAASA,EAASR,UAAWwV,EAAzC,SACGzP,OCwBH1P,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,GACNwE,OAAQ,CACNlC,YAAa3D,EAAM4D,QAAQ,QAwLhB6J,GApLC,SAAC,GAAsC,IAApCzJ,EAAmC,EAAnCA,UAAW0V,EAAwB,EAAxBA,SAAanX,EAAW,wCAC9C6B,EAAU/J,KACV+L,EAAWC,cAFmC,EAIAkD,mBAAS,IAJT,mBAI7CoQ,EAJ6C,KAIzBC,EAJyB,OAK1BrQ,mBAAS,IALiB,mBAK7CsE,EAL6C,KAKtCC,EALsC,OAM5BvE,mBAAS,GANmB,mBAM7CwE,EAN6C,KAMvCC,EANuC,KA+EpD,OACE,eAAC9D,GAAA,EAAD,yBAAMlG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAAgBzB,GAApD,cACE,cAAC,KAAD,UACE,cAACuE,EAAA,EAAD,CAAKmH,SAAU,KAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW3T,QAAQ,WAAnB,SACE,cAAC4T,GAAA,EAAD,CACEC,QAASoL,EAAmBnL,SAAWkL,EAASlL,OAChD9M,MAAM,UACN+M,cACEkL,EAAmBnL,OAAS,GAC5BmL,EAAmBnL,OAASkL,EAASlL,OAEvC/B,SAtFM,SAACrB,GACvB,IAAIyO,EAGFA,EADEzO,EAAMC,OAAOkD,QACSmL,EAASjS,KAAI,SAACqS,GAAD,OAAaA,EAAQlL,OAElC,GAG1BgL,EAAsBC,QAgFV,cAACxL,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,0BACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,yBACA,cAACA,GAAA,EAAD,2BAGJ,cAACQ,GAAA,EAAD,WACIhB,EAAQ,EACN6L,EAASvM,MAAMY,EAAOF,EAAOE,EAAOF,EAAQA,GAC5C6L,GACFjS,KAAI,SAACqS,GAAD,OACJ,eAAC1L,GAAA,EAAD,CACEU,OAAK,EAELC,UAAuD,IAA7C4K,EAAmB5b,QAAQ+b,EAAQlL,KAH/C,UAKE,cAACP,GAAA,EAAD,CAAW3T,QAAQ,WAAnB,SACE,cAAC4T,GAAA,EAAD,CACEC,SAAsD,IAA7CoL,EAAmB5b,QAAQ+b,EAAQlL,KAC5CnC,SAAU,SAACrB,GAAD,OAlGN,SAACA,EAAO4D,GAC9B,IAAMC,EAAgB0K,EAAmB5b,QAAQiR,GAC7C6K,EAAwB,IAEL,IAAnB5K,EACF4K,EAAwBA,EAAsB3K,OAC5CyK,EACA3K,GAEyB,IAAlBC,EACT4K,EAAwBA,EAAsB3K,OAC5CyK,EAAmBxM,MAAM,IAElB8B,IAAkB0K,EAAmBnL,OAAS,EACvDqL,EAAwBA,EAAsB3K,OAC5CyK,EAAmBxM,MAAM,GAAI,IAEtB8B,EAAgB,IACzB4K,EAAwBA,EAAsB3K,OAC5CyK,EAAmBxM,MAAM,EAAG8B,GAC5B0K,EAAmBxM,MAAM8B,EAAgB,KAI7C2K,EAAsBC,GA0EiB1K,CAAgB/D,EAAO0O,EAAQlL,MACpDtD,MAAM,WAGV,cAAC+C,GAAA,EAAD,UACE,cAAC,GAAD,CAAOb,MAAOsM,EAAQtM,UAExB,cAACa,GAAA,EAAD,UAAYtB,GAAY+M,EAAQjW,SAChC,cAACwK,GAAA,EAAD,UACE,cAAC4D,GAAA,EAAD,CAASpO,MAAOkJ,GAAY+M,EAAQC,aAApC,SACE,cAACtV,EAAA,EAAD,CACET,UAAWI,EAAQ2V,YACnBC,kBAAgB,EAChBC,oBAAkB,EAClBC,eAAa,EACbC,oBAAkB,EAClBlY,QAAQ,OANV,SAQG2W,GAAQ7L,GAAY+M,EAAQC,oBAInC,cAAC1L,GAAA,EAAD,UAAYtB,GAAY+M,EAAQM,SAChC,cAAC/L,GAAA,EAAD,UAAYyK,GAAQgB,EAAQvP,aAC5B,eAAC8D,GAAA,EAAD,WACE,cAAC,GAAD,CACE7J,QAAS,kBAzFIwK,EAyF0B8K,EAAQlL,SAxFjExI,EAASsS,GAAkB1J,IADG,IAACA,GA0FbnL,MAAM,OAFR,SAIE,cAAC,KAAD,CAAUnC,MAAM,cAElB,cAAC,GAAD,CACEmC,MAAM,SACNW,QAAS,kBA5FPwK,EA4F0B8K,EAAQlL,SA3FzCnE,KAEVwM,KADH,uCACQ,WAAOoD,GAAP,SAAArf,EAAA,0DACAqf,EADA,0CAIuB5O,IAAM6O,OAAN,mBAAyBtL,IAJhD,OAKoB,MALpB,OAIQtI,KACCkL,SACPxL,ENlF6B,CACzClB,KAAMuT,GACNxT,QMgFmC+J,IACvBnE,GAAM,WAAY,4BAA6B,YAPjD,gDAUAc,QAAQC,IAAR,MAVA,yDADR,uDAeGwL,OAAM,SAACmD,GAAD,OAAS5O,QAAQC,IAAI2O,MAjBX,IAACvL,GA0FJ,SAIE,cAAC,KAAD,CAAYtN,MAAM,iBAzCjBoY,EAAQlL,iBAkDzB,cAACc,GAAA,EAAD,CACErN,UAAU,MACVsN,MAAO+J,EAASlL,OAChBoB,aAlHmB,SAACxE,EAAOyE,GAC/B7B,EAAQ6B,IAkHJC,oBAvHoB,SAAC1E,GACzB0C,EAAS1C,EAAMC,OAAOC,QAuHlByC,KAAMA,EACNgC,YAAalC,EACbmC,mBAAoB,CAAC,EAAG,GAAI,W,6DC5L9B3V,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCwa,UAAW,CACT3f,MAAO,QAET4f,QAAS,CACPjb,SAAUQ,EAAMZ,WAAWsb,QAAQ,IACnCnb,WAAYS,EAAMZ,WAAWub,mBAE/B9U,OAAQ,CACN9K,gBAAiB6f,KAAK,KACtBlZ,MAAOkZ,KAAK,MAEdC,eAAgB,CACd7T,WAAY,SACZ1F,UAAW,SACX2W,UAAW,IAEb6C,YAAa,CACXlK,SAAU,WACVjV,MAAO,OACPC,IAAK,OAEPmf,WAAY,CACVzZ,UAAW,SACX5G,QAAS,GAEXsgB,SAAU,CACRvgB,OAAQ,QACR0I,QAAS,OACT6D,WAAY,YAEdiU,UAAW,CACTxgB,OAAQ,UAEVygB,aAAc,CACZ5Z,UAAW,QACX2W,UAAW,QAoMAkD,GAhMA,WACb,IAAM/W,EAAU/J,KACV+L,EAAWC,cAFE,EAIWkD,mBAAS,MAJpB,mBAIZ6R,EAJY,KAIHC,EAJG,OAKO9R,mBAAS,IALhB,mBAKZ1F,EALY,KAKLyX,EALK,OAMmB/R,mBAAS,IAN5B,mBAMZwQ,EANY,KAMCwB,EAND,OAOOhS,mBAAS,IAPhB,mBAOZ6Q,EAPY,KAOLoB,EAPK,OAQejS,mBAAS,MARxB,mBAQZkS,EARY,KAQDC,EARC,OASenS,mBAAS,MATxB,mBASZoS,EATY,KASDC,EATC,OAUSrS,mBAAS,CACnClC,KAAM,GACNmG,MAAO,GACPuM,YAAa,GACbK,MAAO,KAdU,mBAUZ7C,EAVY,KAUJF,EAVI,OAiBmC5Q,aACpD,SAAC1D,GAAD,OAAWA,EAAM+W,WADX+B,EAjBW,EAiBXA,SAAwB3T,EAjBb,EAiBD4T,aAA0BC,EAjBzB,EAiBmBrV,KAItCC,qBAAU,WACR,GAAIkV,EAAU,CACZ,IAAM5d,EAAQ8d,EAAMC,WAAU,SAAC9Y,GAAD,OAAUA,EAAK0L,MAAQiN,KACrD,IAAe,IAAX5d,EAAc,CAChB,IAAMge,EAAWF,EAAM9d,GAEvBod,EAAWY,EAASrN,KACpB0M,EAASW,EAASpY,OAClB0X,EAAeU,EAASlC,aACxByB,EAASS,EAAS7B,OAClBwB,EAAaK,EAASzO,WAKzB,CAACqO,EAAUE,IAEd,IAAMG,EAAc,WAClB9V,EPxFqC,CACvClB,KAAMoT,MOyGA/M,EAAY,uCAAG,WAAOH,GAAP,mBAAApQ,EAAA,yDACnBoQ,EAAMI,kBAEF4P,EAHe,mBAIZK,GAAcE,EAJF,yCAKRtE,EAAU,2BAAKE,GAAN,IAAc/J,MAAO,8BALtB,gCAMP4N,EANO,mBAOZK,GAAcE,EAPF,yCAQRtE,EAAU,2BAAKE,GAAN,IAAc/J,MAAO,8BARtB,UAWd3J,EAXc,0CAWAwT,EAAU,2BAAKE,GAAN,IAAc1T,MAAO,oBAX9B,WAYdkW,EAZc,0CAaV1C,EAAU,2BAAKE,GAAN,IAAcwC,YAAa,0BAb1B,WAcdK,EAdc,0CAcA/C,EAAU,2BAAKE,GAAN,IAAc6C,MAAO,oBAd9B,WAgBbrP,EAAW,IAAIoR,SACjBV,GAAW1Q,EAASqR,OAAO,QAASX,GACxC1Q,EAASqR,OAAO,QAASvY,GACzBkH,EAASqR,OAAO,cAAerC,GAC/BhP,EAASqR,OAAO,QAAShC,IAErByB,IAAYT,EAtBG,kCAwBEiB,EAAe,YAAD,OACnBjB,GACZ,QACArQ,GA3Be,QAwBXrE,EAxBW,OA6BjBN,GP9HwBnB,EO8HD,CAAEyB,KAAMA,EAAKA,KAAKoT,QAAS9K,GAAIoM,GP9HjB,CACzClW,KAAMsT,GACNvT,aO6HIiX,IA9BiB,yCAiCEG,EAAe,WAAY,OAAQtR,GAjCrC,QAiCXrE,EAjCW,OAkCjBN,EAASuS,GAAcjS,EAAKA,KAAKoT,UACjCoC,IAnCiB,kCPjGM,IAACjX,IOiGP,OAAH,sDAuCZoX,EAAc,uCAAG,WAAOC,EAAKC,EAAQR,GAApB,iBAAA/gB,EAAA,+EAEIyQ,IAAM8Q,GAAQD,EAAKP,GAFvB,uBAEXrV,EAFW,EAEXA,KAFW,kBAGZA,GAHY,gCAKnBiF,QAAQC,IAAR,MALmB,yDAAH,0DASpB,OACE,eAAC,KAAD,CACE3D,QAASiU,EACTM,kBAAgB,sBAChBtU,KAAMA,EACNvG,SAAS,KAJX,UAME,eAAC8a,GAAA,EAAD,CAAazN,GAAG,sBAAhB,UACE,cAAC,GAAD,CACEnL,MAAM,QACNW,QAAS0X,EACT1C,SAAUpV,EAAQ0W,YAHpB,SAKE,cAAC,KAAD,MAEF,cAAC1T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,gCAEF,cAAC,KAAD,UACE,sBAAM6U,SAAUvL,EAAhB,SACE,eAACU,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,GAAA,EAAD,CAAM/I,MAAI,EAACkT,GAAI,GAAf,SACE,sBAAK5R,QAzEO,WACtBkY,SAASC,eAAe,gBAAgBC,SAwE9B,UACE,uBACEvV,KAAK,eACL2H,GAAG,eACH9J,KAAK,OACL2X,QAAM,EACNC,OAAO,UACPrQ,SA3Fc,SAACsQ,GAC7B,GAAIA,EAAE1R,OAAO2R,MAAM,GAAI,CACrBtB,EAAaqB,EAAE1R,OAAO2R,MAAM,IAC5B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WAC9BvB,EAAaqB,EAAOG,WAEtBH,EAAOI,cAAcN,EAAE1R,OAAO2R,MAAM,QAsF1B,cAAC,GAAD,CAAO7D,YAAU,EAAC3L,MAAOmO,IACxBpE,EAAO/J,OACN,qBAAKjF,MAAO,CAAEjH,UAAW,UAAzB,SACE,cAAC8F,EAAA,EAAD,CAAYnF,QAAQ,UAAUP,MAAM,QAApC,SACG6V,EAAO/J,eAMlB,cAACvB,GAAA,EAAD,CAAM/I,MAAI,EAACkT,GAAI,GAAIpS,UAAWI,EAAQ6W,UAAtC,SACE,cAAC5O,GAAA,EAAD,CACEf,MAAOzH,EACP4I,SAAU,SAACsQ,GAAD,OAAOzB,EAASyB,EAAE1R,OAAOC,QACnCL,QAAOsM,EAAO1T,MACd0I,WAAYgL,EAAO1T,MACnB2I,MAAM,QACN8Q,QAAQ,oBACRhR,WAAS,MAGb,cAACL,GAAA,EAAD,CAAM/I,MAAI,EAACkT,GAAI,GAAIpS,UAAWI,EAAQ6W,UAAtC,SACE,cAAC5O,GAAA,EAAD,CACEf,MAAO8O,EACP3N,SAAU,SAACsQ,GAAD,OAAOvB,EAASuB,EAAE1R,OAAOC,QACnCL,QAAOsM,EAAO6C,MACd7N,WAAYgL,EAAO6C,MACnB5N,MAAM,QACNtH,KAAK,SACLoH,WAAS,MAGb,cAACL,GAAA,EAAD,CAAM/I,MAAI,EAACkT,GAAI,GAAIpS,UAAWI,EAAQ6W,UAAtC,SACE,cAAC5O,GAAA,EAAD,CACEf,MAAOyO,EACPtN,SAAU,SAACsQ,GAAD,OAAOxB,EAAewB,EAAE1R,OAAOC,QACzCL,QAAOsM,EAAOwC,YACdxN,WAAYgL,EAAOwC,YACnBvN,MAAM,cACN8Q,QAAQ,oBACRhR,WAAS,EACTiR,WAAS,EACTC,KAAM,MAGV,cAACvR,GAAA,EAAD,CAAM/I,MAAI,EAACkT,GAAI,GAAIpS,UAAWI,EAAQ8W,aAAtC,SACE,cAACzW,EAAA,EAAD,CAAQxC,QAAQ,YAAYP,MAAM,UAAUwD,KAAK,SAAjD,SACIkW,EAAqB,SAAX,wBC1OtB/gB,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CuM,UAAW,OACXtJ,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,QAgEf6Z,GA5DQ,WACrB,IAAMrZ,EAAU/J,KACV+L,EAAWC,cAEXqX,EAAcjX,aAAY,SAAC1D,GAAD,OAAWA,EAAM+W,QAAQpT,QAJ9B,EAMK6C,mBAAS,IANd,mBAMpBmQ,EANoB,KAMViE,EANU,KAQ3BhX,qBAAU,YACO,uCAAG,8BAAA3L,EAAA,+EAESgW,IAAMC,IAAI,YAFnB,gBAENvK,EAFM,EAENA,KACRN,GR5BmBnB,EQ4BCyB,EAAKA,KAAKgT,SR5BE,CACtCxU,KAAMkT,GACNnT,aQuBoB,gDAKd0G,QAAQC,IAAR,MALc,kCRzBI,IAAC3G,IQyBL,oBAAH,qDAQfmM,KACC,CAAChL,IAEJO,qBAAU,WACRgX,EAAYD,KACX,CAACA,IAqBJ,OACE,eAAC,GAAD,CAAM1Z,UAAWI,EAAQ/C,KAAMwC,MAAM,WAArC,UACE,eAACgJ,GAAA,EAAD,CAAWlL,UAAU,EAArB,UACE,cAAC,GAAD,CACEkC,MAAM,UACNyM,SAxBa,SAACyM,GACpB,IAAMzR,EAAQyR,EAAE1R,OAAOC,MAAM+B,cAC7B,GAAI/B,EAAO,CACT,IAAM5E,EAAOgX,EAAYE,QAAO,SAACC,GAAS,IAAD,QACvC,OACK,OAAHA,QAAG,IAAHA,GAAA,UAAAA,EAAKha,aAAL,mBAAYwJ,qBAAZ,eAA2BtP,QAAQuN,KAAU,IAC1C,OAAHuS,QAAG,IAAHA,GAAA,UAAAA,EAAK9D,mBAAL,mBAAkB1M,qBAAlB,eAAiCtP,QAAQuN,KAAU,KAGvDqS,EAAYjX,QAEZiX,EAAYD,IAcRnN,iBAViB,WACvBnK,EAASsS,SAWL,cAAC5R,EAAA,EAAD,CAAK0J,GAAI,EAAT,SACE,cAAC,GAAD,CAASkJ,SAAUA,SAGvB,cAAC,GAAD,QChFOoE,GAAc,cACdC,GAAiB,iBACjBC,GAAsB,sBACtBC,GAAuB,uBAEvBC,GAA2B,2BAC3BC,GAA4B,4BAC5BC,GAAe,e,yGCqBbC,GArBF,SAAC,GAAsC,IAAD,IAAnCnZ,YAAmC,MAA5B,UAA4B,MAAjBsH,aAAiB,MAAT,GAAS,EAC3C8R,EAAqB,YAATpZ,EAClB,OACE,cAAC,KAAD,CACEhD,KAAK,QACLsK,MAAOA,EACPjE,MAAO,CACLxN,gBAAiBujB,EAAYhe,IAAOgT,OAAO,KAAOhT,IAAO+Q,IAAI,KAC7D3P,MAAOpB,IAAOC,OAAOC,MACrB/F,OAAQ,GAEViJ,KACE4a,EACE,cAAC,KAAD,CAAU9e,SAAS,QAAQ+I,MAAO,CAAE7G,MAAOpB,IAAOC,OAAOC,SAEzD,cAAC,KAAD,CAAYhB,SAAS,QAAQ+I,MAAO,CAAE7G,MAAOpB,IAAOC,OAAOC,YCwB/DnG,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,GACNwE,OAAQ,CACNlC,YAAa3D,EAAM4D,QAAQ,IAE7BmW,YAAa,CACXtf,OAAQuF,EAAM4D,QAAQ,QAqPX6J,GAjPC,SAAC,GAAsC,IAApCzJ,EAAmC,EAAnCA,UAAWua,EAAwB,EAAxBA,SAAahc,EAAW,wCAC9C6B,EAAU/J,KACV+L,EAAWC,cAFmC,EAIAkD,mBAAS,IAJT,mBAI7CiV,EAJ6C,KAIzBC,EAJyB,OAK1BlV,mBAAS,IALiB,mBAK7CsE,EAL6C,KAKtCC,EALsC,OAM5BvE,mBAAS,GANmB,mBAM7CwE,EAN6C,KAMvCC,EANuC,KAuD9C0Q,EAA0B,SAAC1P,GAC/B5I,ECjG2C,CAC7ClB,KAAM8Y,GACN/Y,QD+F6B+J,KAGvB2P,EAA8B,SAACC,EAAWC,GAC9CzY,EC5FyC,CAC3ClB,KAAMgZ,GACNjZ,QD0F2B,CAAE2Z,YAAWC,gBAwBxC,OACE,eAAC3U,GAAA,EAAD,yBAAMlG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAAgBzB,GAApD,cACE,cAAC,KAAD,UACE,cAACuE,EAAA,EAAD,CAAKmH,SAAU,KAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW3T,QAAQ,WAAnB,SACE,cAAC4T,GAAA,EAAD,CACEC,QAASiQ,EAAmBhQ,SAAW+P,EAAS/P,OAChD9M,MAAM,UACN+M,cACE+P,EAAmBhQ,OAAS,GAC5BgQ,EAAmBhQ,OAAS+P,EAAS/P,OAEvC/B,SA3FM,SAACrB,GACvB,IAAI0T,EAGFA,EADE1T,EAAMC,OAAOkD,QACSgQ,EAAS9W,KAAI,SAACsX,GAAD,OAAaA,EAAQnQ,OAElC,GAG1B6P,EAAsBK,QAqFV,cAACzQ,GAAA,EAAD,4BACA,cAACA,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,2BACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,0BACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,yBACA,cAACA,GAAA,EAAD,2BAGJ,cAACQ,GAAA,EAAD,WACIhB,EAAQ,EACN0Q,EAASpR,MAAMY,EAAOF,EAAOE,EAAOF,EAAQA,GAC5C0Q,GACF9W,KAAI,SAACsX,GAAD,aACJ,eAAC3Q,GAAA,EAAD,CACEU,OAAK,EAELC,UAAuD,IAA7CyP,EAAmBzgB,QAAQghB,EAAQnQ,KAH/C,UAKE,cAACP,GAAA,EAAD,CAAW3T,QAAQ,WAAnB,SACE,cAAC4T,GAAA,EAAD,CACEC,SAAsD,IAA7CiQ,EAAmBzgB,QAAQghB,EAAQnQ,KAC5CnC,SAAU,SAACrB,GAAD,OA5GN,SAACA,EAAO4D,GAC9B,IAAMC,EAAgBuP,EAAmBzgB,QAAQiR,GAC7C8P,EAAwB,IAEL,IAAnB7P,EACF6P,EAAwBA,EAAsB5P,OAC5CsP,EACAxP,GAEyB,IAAlBC,EACT6P,EAAwBA,EAAsB5P,OAC5CsP,EAAmBrR,MAAM,IAElB8B,IAAkBuP,EAAmBhQ,OAAS,EACvDsQ,EAAwBA,EAAsB5P,OAC5CsP,EAAmBrR,MAAM,GAAI,IAEtB8B,EAAgB,IACzB6P,EAAwBA,EAAsB5P,OAC5CsP,EAAmBrR,MAAM,EAAG8B,GAC5BuP,EAAmBrR,MAAM8B,EAAgB,KAI7CwP,EAAsBK,GAoFiB3P,CAAgB/D,EAAO2T,EAAQnQ,MACpDtD,MAAM,WAGV,cAAC+C,GAAA,EAAD,UAAY0Q,EAAQH,UAAU/a,QAC9B,cAACwK,GAAA,EAAD,UAAYtB,GAAW,OAACgS,QAAD,IAACA,GAAD,UAACA,EAASC,cAAV,aAAC,EAAiB3X,QACzC,cAACgH,GAAA,EAAD,UACE,cAAC4D,GAAA,EAAD,CAASpO,MAAOkJ,GAAYgS,EAAQhF,aAApC,SACE,cAACtV,EAAA,EAAD,CACET,UAAWI,EAAQ2V,YACnBC,kBAAgB,EAChBC,oBAAkB,EAClBC,eAAa,EACbC,oBAAkB,EAClBlY,QAAQ,OANV,SAQG2W,GAAQ7L,GAAYgS,EAAQhF,oBAInC,cAAC1L,GAAA,EAAD,UACG0Q,EAAQE,mBAAqB,KAAO,QAEvC,cAAC5Q,GAAA,EAAD,UAAYtB,GAAYgS,EAAQG,aAChC,cAAC7Q,GAAA,EAAD,UAAYtB,GAAYgS,EAAQI,gBAChC,cAAC9Q,GAAA,EAAD,UACGtB,GAAYgS,EAAQK,sBAEvB,cAAC/Q,GAAA,EAAD,UAAYuK,GAAQmG,EAAQhG,QAC5B,cAAC1K,GAAA,EAAD,UAAYuK,GAAQmG,EAAQM,QAC5B,eAAChR,GAAA,EAAD,YACI0Q,EAAQO,aAAeP,EAAQQ,aAC/B,cAAC,GAAD,CACE/a,QAAS,kBACPma,EACEI,EAAQH,UAAUhQ,IAClBmQ,EAAQnQ,MAGZ/K,MAAM,kBACN4V,UAAU,MARZ,SAUE,cAAC,KAAD,CAAgB/X,MAAM,SAASlC,SAAS,YAG3Cuf,EAAQO,aAAeP,EAAQQ,aAC9B,cAAC,KAAD,CACE/S,MAAOuS,EAAQO,WAAWjY,KAC1BnF,KAAK,QACLqG,MAAO,CACLxN,gBACEgkB,EAAQO,YACRP,EAAQS,QACRlf,IAAOM,MAAM,KACfc,MACEqd,EAAQO,YACRP,EAAQS,QACRlf,IAAOC,OAAOC,OAElBkD,KAAM,cAACwD,EAAA,EAAD,MAGT6X,EAAQQ,aAAeR,EAAQU,iBAC9B,cAAC,GAAD,CAAMva,KAAK,SAASsH,MAAOuS,EAAQU,kBAEpCV,EAAQO,YAAcP,EAAQS,QAC7B,cAAC,GAAD,CAAMta,KAAK,UAAUsH,MAAM,cAE5BuS,EAAQO,aAAeP,EAAQS,QAC9B,cAAC,GAAD,CAAMta,KAAK,UAAUsH,MAAM,gBAI/B,eAAC6B,GAAA,EAAD,WACE,cAAC,GAAD,CACE7J,QAAS,kBAAMka,EAAwBK,EAAQnQ,MAC/C/K,MAAM,OACN4V,UAAU,MAHZ,SAKE,cAAC,KAAD,CAAgB/X,MAAM,UAAUlC,SAAS,YAE3C,cAAC,GAAD,CACEgF,QAAS,kBAnJPwK,EAmJ0B+P,EAAQnQ,SAlJzCnE,KAEVwM,KADH,uCACQ,WAAOoD,GAAP,iBAAArf,EAAA,0DACAqf,EADA,0CAIuB5O,IAAM6O,OAAN,mBAAyBtL,IAJhD,gBAIQtI,EAJR,EAIQA,KACRiF,QAAQC,IAAIlF,GACQ,MAAhBA,EAAKkL,SACPxL,EC3F6B,CACzClB,KAAM6Y,GACN9Y,QDyFmC+J,IACvBnE,GAAM,WAAY,4BAA6B,YARjD,kDAWAc,QAAQC,IAAI,KAAMuF,UAXlB,0DADR,uDAgBGiG,OAAM,SAACmD,GAAD,OAAS5O,QAAQC,IAAI2O,MAlBX,IAACvL,GAoJFnL,MAAM,SACN4V,UAAU,MAHZ,SAKE,cAAC,KAAD,CAAY/X,MAAM,QAAQlC,SAAS,iBA5FlCuf,EAAQnQ,iBAqGzB,cAACc,GAAA,EAAD,CACErN,UAAU,MACVsN,MAAO4O,EAAS/P,OAChBoB,aA/KmB,SAACxE,EAAOyE,GAC/B7B,EAAQ6B,IA+KJC,oBApLoB,SAAC1E,GACzB0C,EAAS1C,EAAMC,OAAOC,QAoLlByC,KAAMA,EACNgC,YAAalC,EACbmC,mBAAoB,CAAC,EAAG,GAAI,W,mDEhQ9B3V,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCwa,UAAW,CACT3f,MAAO,QAET4f,QAAS,CACPjb,SAAUQ,EAAMZ,WAAWsb,QAAQ,IACnCnb,WAAYS,EAAMZ,WAAWub,mBAE/B9U,OAAQ,CACN9K,gBAAiB6f,KAAK,KACtBlZ,MAAOkZ,KAAK,MAEdC,eAAgB,CACd7T,WAAY,SACZ1F,UAAW,SACX2W,UAAW,IAEb6C,YAAa,CACXlK,SAAU,WACVjV,MAAO,OACPC,IAAK,OAEPmf,WAAY,CACVzZ,UAAW,SACX5G,QAAS,GAEXsgB,SAAU,CACRvgB,OAAQ,QACR0I,QAAS,OACT6D,WAAY,YAEd0Y,iBAAkB,OAgMLvE,GA7LA,WACb,IAAM/W,EAAU/J,KACV+L,EAAWC,cAFE,EAIWkD,mBAAS,IAJpB,mBAIZwV,EAJY,KAIHY,EAJG,OAKKpW,oBAAS,GALd,mBAKZqW,EALY,KAKNC,EALM,OAOmCpZ,aACpD,SAAC1D,GAAD,OAAWA,EAAMgc,WADXlD,EAPW,EAOXA,SAAwB3T,EAPb,EAOD4T,aAA0BC,EAPzB,EAOmBrV,KAItCC,qBAAU,WACR,GAAIkV,EAAU,CACZ,IAAM5d,EAAQ8d,EAAMC,WAAU,SAAC9Y,GAAD,OAAUA,EAAK0L,MAAQiN,MACtC,IAAX5d,IACF4hB,GAAQ,GACRF,EAAW5D,EAAM9d,KAGrB,OAAO,kBAAM4hB,GAAQ,MACpB,CAAChE,EAAUE,IAEd,IAAMG,EAAc,WAClB9V,EDnEqC,CACvClB,KAAM+Y,MCqEN,OACE,eAAC,KAAD,CACEhW,QAASiU,EACTM,kBAAgB,sBAChBtU,KAAMA,EACNvG,SAAS,KAJX,UAME,eAAC8a,GAAA,EAAD,CAAazN,GAAG,sBAAhB,UACE,cAAC,GAAD,CACEnL,MAAM,QACNW,QAAS0X,EACT1C,SAAUpV,EAAQ0W,YAHpB,SAKE,cAAC,KAAD,MAEF,cAAC1T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,gCAEF,cAAC,KAAD,UACG2d,GACC,eAAC3T,GAAA,EAAD,CAAMC,WAAS,EAACtI,QAAS,EAAzB,UACE,eAACqI,GAAA,EAAD,CAAM/I,MAAI,EAACiJ,GAAI,GAAf,UACE,sBAAKnI,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,8BACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQhF,iBAIb,sBAAK/V,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,4BACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQG,eAIb,sBAAKlb,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,wBACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQI,kBAIb,sBAAKnb,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,8BACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQK,wBAIb,sBAAKpb,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,8BACA,eAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,UACGqd,EAAQhG,KADX,QACwBgG,EAAQM,WAIlC,eAACjY,EAAA,EAAD,CACEpD,UAAW,CAACI,EAAQ4W,SAAU,CAAE8E,WAAY,SAAUxS,KAAK,KAC3DrL,QAAQ,UACRP,MAAM,gBAHR,gCAKsBoX,GAAQiG,EAAQxU,iBAGxC,cAAC0B,GAAA,EAAD,CAAM/I,MAAI,EAACiJ,GAAI,EAAf,SACE,eAAC4T,GAAA,EAAD,CAAW/H,WAAiB,OAAP+G,QAAO,IAAPA,OAAA,EAAAA,EAASC,QAA9B,UACE,cAACgB,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,SACE,cAAC7Y,EAAA,EAAD,CAAYpD,UAAWI,EAAQqW,QAA/B,4BAIF,cAACyF,GAAA,EAAD,UACE,gCACE,sBAAKlc,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,uBACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQC,OAAO3X,UAIpB,sBAAKrD,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,wBACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQC,OAAO1X,WAIpB,sBAAKtD,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,2BACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqL,GAAYgS,EAAQC,OAAO9Y,eAIhC,sBAAKlC,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,yBACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqL,GAAYgS,EAAQC,OAAO3P,aAIhC,eAACjI,EAAA,EAAD,CACEpD,UAAWI,EAAQ4W,SACnB/Y,QAAQ,UACRP,MAAM,gBAHR,6BAMGoX,GAAQiG,EAAQH,UAAUrU,wBAMrC,cAAC0B,GAAA,EAAD,CAAM/I,MAAI,EAACiJ,GAAI,EAAf,SACE,eAAC4T,GAAA,EAAD,CAAW/H,WAAiB,OAAP+G,QAAO,IAAPA,OAAA,EAAAA,EAASH,WAA9B,UACE,cAACoB,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,SACE,cAAC7Y,EAAA,EAAD,CAAYpD,UAAWI,EAAQqW,QAA/B,+BAIF,cAACyF,GAAA,EAAD,UACE,sBAAK3X,MAAO,CAAE9N,OAAQ,QAAtB,UACE,qBAAKuJ,UAAWI,EAAQyW,eAAxB,SACE,cAAC,GAAD,CAAOrN,MAAOuR,EAAQH,UAAUpR,MAAO2L,YAAU,MAEnD,sBAAKnV,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,wBACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQH,UAAU/a,WAGvB,sBAAKG,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,8BACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQH,UAAU7E,iBAGvB,sBAAK/V,UAAWI,EAAQ4W,SAAxB,UACE,cAAC5T,EAAA,EAAD,CAAYnF,QAAQ,KAApB,wBACA,cAACmF,EAAA,EAAD,CAAYnF,QAAQ,KAAKP,MAAM,gBAA/B,SACGqd,EAAQH,UAAUxE,WAIvB,eAAChT,EAAA,EAAD,CACEpD,UAAWI,EAAQ4W,SACnB/Y,QAAQ,UACRP,MAAM,gBAHR,4BAMGoX,GAAQiG,EAAQH,UAAUrU,iC,kDC7N3ClQ,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCmgB,YAAa,CACXlS,SAAU,SAIC,SAASmS,GAAT,GAAmC,EAAZ3T,SAAa,IAC3CrI,EAAU/J,KACV+L,EAAWC,cAF+B,EAIpBga,IAAM9W,SAAS,IAJK,mBAIzC+W,EAJyC,KAIjCC,EAJiC,OAKNF,IAAM9W,SAAS,IALT,mBAKzCiX,EALyC,KAK1BC,EAL0B,OAOUha,aACxD,SAAC1D,GAAD,OAAWA,EAAMgc,WADXH,EAPwC,EAOxCA,UAAWC,EAP6B,EAO7BA,UAA8B3W,EAPD,EAOlBwY,kBAI9B/Z,qBAAU,WASJiY,GARW,uCAAG,8BAAA5jB,EAAA,+EAESgW,IAAMC,IAAN,yBAA4B2N,IAFrC,gBAENlY,EAFM,EAENA,KACR6Z,EAAU7Z,EAAKA,KAAK4Z,QAHN,gDAKd3U,QAAQC,IAAR,MALc,yDAAH,oDAQAwF,KACd,CAACwN,IAEJ,IAAM1C,EAAc,WAClB9V,EFfmC,CACrClB,KAAMiZ,MEqBA5S,EAAY,uCAAG,oCAAAvQ,EAAA,yDACd4jB,GAAcC,EADA,yCAEVhU,GAAM,WAAY,+BAAgC,WAFxC,uBAKXE,EAAW,CACf4V,QAASH,EACT3B,aAPe,SASM7N,IAAM4P,IAAN,uBAAkC7V,GATxC,gBASTrE,EATS,EASTA,KACRN,GFrCsBnB,EEsCR,CACV4Z,YACAgC,YAAana,EAAKA,KAAKqY,SFxCQ,CACvC7Z,KAAMkZ,GACNnZ,aE0CI4F,GAAM,OAAQnE,EAAKoa,QAAS,WAC5B5E,IAlBiB,kDAoBjBrR,GAAM,UAAD,sCAAY,KAAOsG,gBAAnB,iBAAY,EAAiBzK,YAA7B,aAAY,EAAuBoa,QAAS,WApBhC,kCF3BI,IAAC7b,IE2BL,qBAAH,qDAwBlB,OACE,eAAC,KAAD,CACE8b,sBAAoB,EACpBC,sBAAoB,EACpB9Y,KAAMA,EACND,QAASiU,EAJX,UAME,cAACO,GAAA,EAAD,yCACA,cAACwE,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAald,UAAWI,EAAQ+b,YAAhC,UACE,cAACgB,GAAA,EAAD,CAAYC,QAAQ,qBAApB,0BACA,eAACC,GAAA,EAAD,CACEC,QAAQ,2BACRtS,GAAG,qBACH1D,MAAOkV,EACP/T,SA3CW,SAACrB,GACpBqV,EAAiBrV,EAAMC,OAAOC,QAsCxB,UAME,cAACiW,GAAA,EAAD,CAAUjW,MAAM,GAAhB,SACE,wCAEDgV,EAAO7Y,KAAI,SAACvE,GAAD,OACV,cAACqe,GAAA,EAAD,CAAyBjW,MAAOpI,EAAK0L,IAArC,SACG1L,EAAKmE,MADOnE,EAAK0L,gBAO5B,eAAC4S,GAAA,EAAD,WACE,cAAC/c,EAAA,EAAD,CAAQD,QAAS0X,EAAaja,QAAQ,OAAOP,MAAM,UAAnD,oBAGA,cAAC+C,EAAA,EAAD,CACED,QAAS+G,EACTtJ,QAAQ,YACRC,KAAK,QACLR,MAAM,UAJR,sBChGR,IAAMrH,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CuM,UAAW,OACXtJ,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,QAoCf6d,GAhCS,WACtB,IAAMrd,EAAU/J,KACV+L,EAAWC,cAEXwa,EAAcpa,aAAY,SAAC1D,GAAD,OAAWA,EAAMgc,QAAQrY,QAczD,OAZAC,qBAAU,YACO,uCAAG,8BAAA3L,EAAA,+EAESgW,IAAMC,IAAI,YAFnB,gBAENvK,EAFM,EAENA,KACRN,GHzBmBnB,EGyBCyB,EAAKA,KAAK6X,SHzBE,CACtCrZ,KAAM4Y,GACN7Y,aGoBoB,gDAKd0G,QAAQC,IAAR,MALc,kCHtBI,IAAC3G,IGsBL,oBAAH,qDAQfmM,KACC,CAAChL,IAGF,eAAC,GAAD,CAAMpC,UAAWI,EAAQ/C,KAAMwC,MAAM,WAArC,UACE,eAACgJ,GAAA,EAAD,CAAWlL,UAAU,EAArB,UACE,cAAC,GAAD,CAAckC,MAAM,UAAUwM,eAAa,IAC3C,cAACvJ,EAAA,EAAD,CAAK0J,GAAI,EAAT,SACE,cAAC,GAAD,CAAS+N,SAAUsC,SAGvB,cAAC,GAAD,IACA,cAACT,GAAD,Q,UCnCA/lB,GAAYC,YAAY,CAC5B+G,KAAM,GACN6B,KAAM,CACJC,QAAS,OACT4D,cAAe,YAoHJ2a,GAhHO,SAAC,GAA4B,IAA1B1d,EAAyB,EAAzBA,UAAczB,EAAW,6BAC1C6B,EAAU/J,KAEhB,OACE,8CACE2J,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAC1BzB,GAFN,aAIE,eAAC2H,GAAA,EAAD,WACE,cAAC6B,GAAA,EAAD,CACEC,UAAU,2BACVnI,MAAM,kBAER,cAAC0D,EAAA,EAAD,IACA,cAAC4C,GAAA,EAAD,UACE,eAAC8B,GAAA,EAAD,CACEC,WAAS,EACTtI,QAAS,EACT+d,KAAK,OAHP,UAKE,eAAC1V,GAAA,EAAD,CACEjI,UAAWI,EAAQlB,KACnBA,MAAI,EACJiJ,GAAI,EACJiK,GAAI,EACJhK,GAAI,GALN,UAOE,cAAChF,EAAA,EAAD,CACE1F,MAAM,cACN0I,cAAY,EACZnI,QAAQ,KAHV,2BAOA,cAAC2f,GAAA,EAAD,CACEC,QACE,cAACvT,GAAA,EAAD,CAAUwT,gBAAc,IAE1BtV,MAAM,UAER,cAACoV,GAAA,EAAD,CACEC,QACE,cAACvT,GAAA,EAAD,CAAUwT,gBAAc,IAE1BtV,MAAM,uBAER,cAACoV,GAAA,EAAD,CACEC,QAAS,cAACvT,GAAA,EAAD,IACT9B,MAAM,kBAER,cAACoV,GAAA,EAAD,CACEC,QACE,cAACvT,GAAA,EAAD,CAAUwT,gBAAc,IAE1BtV,MAAM,mBAGV,eAACP,GAAA,EAAD,CACEjI,UAAWI,EAAQlB,KACnBA,MAAI,EACJiJ,GAAI,EACJiK,GAAI,EACJhK,GAAI,GALN,UAOE,cAAChF,EAAA,EAAD,CACE1F,MAAM,cACN0I,cAAY,EACZnI,QAAQ,KAHV,sBAOA,cAAC2f,GAAA,EAAD,CACEC,QACE,cAACvT,GAAA,EAAD,CAAUwT,gBAAc,IAE1BtV,MAAM,UAER,cAACoV,GAAA,EAAD,CACEC,QAAS,cAACvT,GAAA,EAAD,IACT9B,MAAM,uBAER,cAACoV,GAAA,EAAD,CACEC,QACE,cAACvT,GAAA,EAAD,CAAUwT,gBAAc,IAE1BtV,MAAM,wBAKd,cAACjF,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CACE3D,QAAQ,OACRK,eAAe,WACfyD,EAAG,EAHL,SAKE,cAACxC,EAAA,EAAD,CACE/C,MAAM,UACNO,QAAQ,YAFV,2BC3GJ5H,GAAYC,YAAY,CAC5B+G,KAAM,KAwEO0gB,GArEE,SAAC,GAA4B,IAA1B/d,EAAyB,EAAzBA,UAAczB,EAAW,6BACrC6B,EAAU/J,KAD2B,EAEfkP,mBAAS,CACnCkN,SAAU,GACVuL,QAAS,KAJgC,mBAEpCrK,EAFoC,KAE5BsK,EAF4B,KAOrC9W,EAAe,SAACC,GACpB6W,EAAU,2BACLtK,GADI,kBAENvM,EAAMC,OAAOhE,KAAO+D,EAAMC,OAAOC,UAItC,OACE,8CACEtH,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAC1BzB,GAFN,aAIE,eAAC2H,GAAA,EAAD,WACE,cAAC6B,GAAA,EAAD,CACEC,UAAU,kBACVnI,MAAM,aAER,cAAC0D,EAAA,EAAD,IACA,eAAC4C,GAAA,EAAD,WACE,cAACkC,GAAA,EAAD,CACEC,WAAS,EACTE,MAAM,WACN/R,OAAO,SACP4M,KAAK,WACLoF,SAAUtB,EACVjG,KAAK,WACLoG,MAAOqM,EAAOlB,SACdxU,QAAQ,aAEV,cAACoK,GAAA,EAAD,CACEC,WAAS,EACTE,MAAM,mBACN/R,OAAO,SACP4M,KAAK,UACLoF,SAAUtB,EACVjG,KAAK,WACLoG,MAAOqM,EAAOqK,QACd/f,QAAQ,gBAGZ,cAACsF,EAAA,EAAD,IACA,cAACT,EAAA,EAAD,CACE3D,QAAQ,OACRK,eAAe,WACfyD,EAAG,EAHL,SAKE,cAACxC,EAAA,EAAD,CACE/C,MAAM,UACNO,QAAQ,YAFV,6BCjEJ5H,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CuM,UAAW,OACXtJ,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,QAmBfse,GAfM,WACnB,IAAM9d,EAAU/J,KAEhB,OACE,cAAC,GAAD,CAAM2J,UAAWI,EAAQ/C,KAAMwC,MAAM,WAArC,SACE,eAACgJ,GAAA,EAAD,CAAWlL,SAAS,KAApB,UACE,cAAC,GAAD,IACA,cAACmF,EAAA,EAAD,CAAK0J,GAAI,EAAT,SACE,cAAC,GAAD,YCvBG2R,GAAa,aACbC,GAAgB,gBCgCvB/nB,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,GACNwE,OAAQ,CACNlC,YAAa3D,EAAM4D,QAAQ,QA2JhB6J,GAvJC,SAAC,GAAqC,IAAnCzJ,EAAkC,EAAlCA,UAAWqe,EAAuB,EAAvBA,QAAY9f,EAAW,uCAC7C6B,EAAU/J,KACV+L,EAAWC,cAFkC,EAIDkD,mBAAS,IAJR,mBAI5C+Y,EAJ4C,KAIzBC,EAJyB,OAKzBhZ,mBAAS,IALgB,mBAK5CsE,EAL4C,KAKrCC,EALqC,OAM3BvE,mBAAS,GANkB,mBAM5CwE,EAN4C,KAMtCC,EANsC,KA0EnD,OACE,eAAC9D,GAAA,EAAD,yBAAMlG,UAAWM,YAAKF,EAAQ/C,KAAM2C,IAAgBzB,GAApD,cACE,cAAC,KAAD,UACE,cAACuE,EAAA,EAAD,CAAKmH,SAAU,KAAf,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW3T,QAAQ,WAAnB,SACE,cAAC4T,GAAA,EAAD,CACEC,QAAS+T,EAAkB9T,SAAW6T,EAAQ7T,OAC9C9M,MAAM,UACN+M,cACE6T,EAAkB9T,OAAS,GAC3B8T,EAAkB9T,OAAS6T,EAAQ7T,OAErC/B,SAjFM,SAACrB,GACvB,IAAIoX,EAGFA,EADEpX,EAAMC,OAAOkD,QACQ8T,EAAQ5a,KAAI,SAACgb,GAAD,OAAYA,EAAO7T,OAE/B,GAGzB2T,EAAqBC,QA2ET,cAACnU,GAAA,EAAD,2BACA,cAACA,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,sBAEA,cAACA,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,0BAGJ,cAACQ,GAAA,EAAD,UACGwT,EAAQlV,MAAM,EAAGU,GAAOpG,KAAI,SAACgb,GAAD,OAC3B,eAACrU,GAAA,EAAD,CACEU,OAAK,EAELC,UAAqD,IAA3CuT,EAAkBvkB,QAAQ0kB,EAAO7T,KAH7C,UAKE,cAACP,GAAA,EAAD,CAAW3T,QAAQ,WAAnB,SACE,cAAC4T,GAAA,EAAD,CACEC,SAAoD,IAA3C+T,EAAkBvkB,QAAQ0kB,EAAO7T,KAC1CnC,SAAU,SAACrB,GAAD,OA1FN,SAACA,EAAO4D,GAC9B,IAAMC,EAAgBqT,EAAkBvkB,QAAQiR,GAC5CwT,EAAuB,IAEJ,IAAnBvT,EACFuT,EAAuBA,EAAqBtT,OAAOoT,EAAmBtT,GAC3C,IAAlBC,EACTuT,EAAuBA,EAAqBtT,OAC1CoT,EAAkBnV,MAAM,IAEjB8B,IAAkBqT,EAAkB9T,OAAS,EACtDgU,EAAuBA,EAAqBtT,OAC1CoT,EAAkBnV,MAAM,GAAI,IAErB8B,EAAgB,IACzBuT,EAAuBA,EAAqBtT,OAC1CoT,EAAkBnV,MAAM,EAAG8B,GAC3BqT,EAAkBnV,MAAM8B,EAAgB,KAI5CsT,EAAqBC,GAqEkBrT,CAAgB/D,EAAOqX,EAAO7T,MACnDtD,MAAM,WAIV,cAAC+C,GAAA,EAAD,UAAYtB,GAAY0V,EAAOC,eAC/B,cAACrU,GAAA,EAAD,UAAYtB,GAAY0V,EAAOrT,UAC/B,cAACf,GAAA,EAAD,oBAAeoU,EAAOE,QAAQC,YAA9B,aAA8CH,EAAOE,QAAQE,OAA7D,YAAuEJ,EAAOE,QAAQlT,QACtF,cAACpB,GAAA,EAAD,UAAYyK,GAAQ2J,EAAOlY,aAC3B,cAAC8D,GAAA,EAAD,UACE,cAAC,GAAD,CACExK,MAAM,SACNW,QAAS,kBAtEPwK,EAsE0ByT,EAAO7T,SArExCnE,GACX,gFAGCwM,KADH,uCACQ,WAAOoD,GAAP,SAAArf,EAAA,0DACAqf,EADA,0CAIuB5O,IAAM6O,OAAN,kBAAwBtL,IAJ/C,OAKoB,MALpB,OAIQtI,KACCkL,SACPxL,EChG4B,CACxClB,KAAMkd,GACNnd,QD8FkC+J,IACtBnE,GAAM,WAAY,2BAA4B,YAPhD,gDAUAc,QAAQC,IAAR,MAVA,yDADR,uDAeGwL,OAAM,SAACmD,GAAD,OAAS5O,QAAQC,IAAI2O,MAnBX,IAACvL,GAoEJ,SAIE,cAAC,KAAD,CAAYtN,MAAM,gBApBjB+gB,EAAO7T,iBA6BxB,cAACc,GAAA,EAAD,CACErN,UAAU,MACVsN,MAAO0S,EAAQ7T,OACfoB,aAxFmB,SAACxE,EAAOyE,GAC/B7B,EAAQ6B,IAwFJC,oBA7FoB,SAAC1E,GACzB0C,EAAS1C,EAAMC,OAAOC,QA6FlByC,KAAMA,EACNgC,YAAalC,EACbmC,mBAAoB,CAAC,EAAG,GAAI,WEvK9B3V,GAAYC,aAAW,SAAC0F,GAAD,MAAY,CACvCqB,KAAM,CACJtG,gBAAiBiF,EAAME,QAAQC,WAAWC,KAC1CuM,UAAW,OACXtJ,cAAerD,EAAM4D,QAAQ,GAC7BR,WAAYpD,EAAM4D,QAAQ,QAkCf6Z,GA9BQ,WACrB,IAAMrZ,EAAU/J,KACV+L,EAAWC,cAEXyc,EAAarc,aAAY,SAAC1D,GAAD,OAAWA,EAAM0f,OAAO/b,QAcvD,OAZAC,qBAAU,YACO,uCAAG,8BAAA3L,EAAA,+EAESgW,IAAMC,IAAI,WAFnB,gBAENvK,EAFM,EAENA,KACRN,GD9BkBnB,EC8BCyB,EAAKA,KAAK2b,QD9BE,CACrCnd,KAAMid,GACNld,aCyBoB,gDAKd0G,QAAQC,IAAR,MALc,kCD3BG,IAAC3G,IC2BJ,oBAAH,qDAQfmM,KACC,CAAChL,IAGF,cAAC,GAAD,CAAMpC,UAAWI,EAAQ/C,KAAMwC,MAAM,UAArC,SACE,eAACgJ,GAAA,EAAD,CAAWlL,UAAU,EAArB,UACE,cAAC,GAAD,CAAckC,MAAM,SAASwM,eAAa,IAC1C,cAACvJ,EAAA,EAAD,CAAK0J,GAAI,EAAT,SACE,cAAC,GAAD,CAAS6R,QAASS,YC8BbC,GAvDA,CACb,CACEC,KAAM,WACNxgB,QAAS,cAAC,GAAD,IACTuH,SAAU,CACR,CACEiZ,KAAM,UACNxgB,QAAS,cAAC,EAAD,CAAcwgB,KAAK,YAAY3gB,UAAW4gB,MAErD,CACED,KAAM,YACNxgB,QAAS,cAAC,EAAD,CAAcwgB,KAAK,YAAY3gB,UAAW0O,MAErD,CACEiS,KAAM,UACNxgB,QAAS,cAAC,EAAD,CAAcwgB,KAAK,YAAY3gB,UAAWob,MAErD,CACEuF,KAAM,oBACNxgB,QAAS,cAAC,EAAD,CAAcwgB,KAAK,YAAY3gB,UAAW6f,MAErD,CACEc,KAAM,YACNxgB,QAAS,cAAC,EAAD,CAAcwgB,KAAK,YAAY3gB,UAAW6gB,MAErD,CACEF,KAAM,WACNxgB,QAAS,cAAC,EAAD,CAAcwgB,KAAK,YAAY3gB,UAAW8gB,MAErD,CACEH,KAAM,WACNxgB,QAAS,cAAC,EAAD,CAAcwgB,KAAK,YAAY3gB,UAAWof,MAErD,CACEuB,KAAM,WACNxgB,QAAS,cAAC,EAAD,CAAcwgB,KAAK,YAAY3gB,UAAW6f,MAErD,CAAEc,KAAM,IAAKxgB,QAAS,cAAC,IAAD,CAAUC,GAAG,YAGvC,CACEugB,KAAM,IACNxgB,QAAS,cAAC,GAAD,IACTuH,SAAU,CACR,CACEiZ,KAAM,QACNxgB,QAAS,cAAC,EAAD,CAAWwgB,KAAK,SAAS3gB,UAAWiU,MAE/C,CAAE0M,KAAM,MAAOxgB,QAAS,cAAC,GAAD,KACxB,CAAEwgB,KAAM,IAAKxgB,QAAS,cAAC,IAAD,CAAUC,GAAG,yBACnC,CAAEugB,KAAM,IAAKxgB,QAAS,cAAC,IAAD,CAAUC,GAAG,aCtDzCuO,IAAMoS,SAASC,QAAUpK,GAEzB,IAkCeqK,GAlCH,WACV,IAAMnM,EAAQoM,aAAaC,QAAQ,SAC7Bpd,EAAWC,cACXod,EAAUC,YAAUX,IAEpBzgB,EAASmE,aAAY,SAAC1D,GAAD,OAAWA,EAAMC,MAAMV,UAqBlD,OAnBAqE,qBAAU,WACHwQ,GAGL/Q,EAASpB,GAAWmS,MACnB,CAACA,EAAO/Q,IAEXO,qBAAU,WASJrE,GARW,uCAAG,8BAAAtH,EAAA,+EAESyQ,IAAMwF,IAAI,UAFnB,gBAENvK,EAFM,EAENA,KACRN,EAASjB,GAAauB,EAAKA,KAAK1D,QAHlB,gDAKd2I,QAAQC,IAAR,MALc,yDAAH,oDAQHwF,KACX,CAAC9O,IAGF,eAACqhB,EAAA,EAAD,CAAe3jB,MAAOA,EAAtB,UACE,cAAC,EAAD,IACCyjB,M,4BC7CDG,GAAe,CACnBld,KAAM,IAaOmd,GAVK,WAA8C,IAA7C9gB,EAA4C,uDAApC6gB,GAAoC,yCAApB1e,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACjD,OAAQC,GACN,KAAK+K,GACH,OAAO,2BAAKlN,GAAZ,IAAmB2D,KAAMzB,IAE3B,QACE,OAAOlC,ICVP6gB,GAAe,CACnBld,KAAM,IAqBOod,GAlBO,WAA8C,IAA7C/gB,EAA4C,uDAApC6gB,GAAoC,yCAApB1e,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACnD,OAAQC,GACN,KAAKid,GACH,OAAO,2BAAKpf,GAAZ,IAAmB2D,KAAMzB,IAE3B,KAAKmd,GACH,OAAO,2BACFrf,GADL,IAEE2D,KAAM3D,EAAM2D,KAAKkX,QAAO,SAACmG,GACvB,OAAOA,EAASnV,MAAQ3J,OAI9B,QACE,OAAOlC,I,UCXP6gB,GAAe,CACnBld,KAAM,GACNmV,SAAU,KACVC,cAAc,GA4CDkI,GAzCQ,WAA8C,IAA7CjhB,EAA4C,uDAApC6gB,GAAoC,yCAApB1e,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACpD,OAAQC,GACN,KAAKkT,GACH,OAAO,2BAAKrV,GAAZ,IAAmB2D,KAAMzB,IAE3B,KAAKoT,GACH,OAAO,2BAAKtV,GAAZ,IAAmB8Y,SAAU5W,GAAW,KAAM6W,cAAc,IAE9D,KAAKxD,GACH,OAAO,2BAAKvV,GAAZ,IAAmB8Y,SAAU,KAAMC,cAAc,IAEnD,KAAKvD,GACH,IAAM7R,EAAI,aAAO3D,EAAM2D,MAEvB,OADAA,EAAKud,QAAQhf,GACN,2BACFlC,GADL,IAEE2D,SAGJ,KAAK8R,GACH,OAAO,2BACFzV,GADL,IAEE2D,KAAM3D,EAAM2D,KAAKe,KAAI,SAACyc,GACpB,OAAIA,EAAOtV,MAAQ3J,EAAQ+J,GAAW/J,EAAQyB,KAClCwd,OAIlB,KAAKzL,GACH,OAAO,2BACF1V,GADL,IAEE2D,KAAM3D,EAAM2D,KAAKkX,QAAO,SAACmG,GACvB,OAAOA,EAASnV,MAAQ3J,OAI9B,QACE,OAAOlC,IC1CP6gB,GAAe,CACnBld,KAAM,GACNmV,SAAU,KACVC,cAAc,EACd4E,mBAAmB,EACnB9B,UAAW,KACXC,UAAW,MAwDEsF,GArDQ,WAA8C,IAA7CphB,EAA4C,uDAApC6gB,GAAoC,yCAApB1e,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACpD,OAAQC,GACN,KAAK4Y,GACH,OAAO,2BAAK/a,GAAZ,IAAmB2D,KAAMzB,IAE3B,KAAK+Y,GACH,OAAO,2BAAKjb,GAAZ,IAAmB8Y,SAAU5W,EAAS6W,cAAc,IAEtD,KAAKmC,GACH,OAAO,2BAAKlb,GAAZ,IAAmB8Y,SAAU,KAAMC,cAAc,IAEnD,KAAKoC,GACH,OAAO,2BACFnb,GADL,IAEE6b,UAAW3Z,EAAQ2Z,UACnBC,UAAW5Z,EAAQ4Z,UACnB6B,mBAAmB,IAGvB,KAAKvC,GACH,OAAO,2BACFpb,GADL,IAEE6b,UAAW,KACXC,UAAW,KACX6B,mBAAmB,IAGvB,KAAKtC,GACH,OAAO,2BACFrb,GADL,IAEE2D,KAAM3D,EAAM2D,KAAKe,KAAI,SAACvE,GAAD,OACnBA,EAAK0L,MAAQ3J,EAAQ4Z,UAArB,2BAES3b,GAFT,IAGMoc,WAAYra,EAAQ4b,YAAYF,UAElCzd,OAIV,KAAK6a,GACH,OAAO,2BACFhb,GADL,IAEE2D,KAAM3D,EAAM2D,KAAKkX,QAAO,SAACmG,GACvB,OAAOA,EAASnV,MAAQ3J,OAI9B,QACE,OAAOlC,IClEE,SAASqhB,GAASjN,GAC/B,OAAIA,GACFoM,aAAac,QAAQ,QAASlN,GACtBnG,IAAMoS,SAASkB,QAAQ/jB,OAAvB,+BAA2D4W,KAEnEoM,aAAagB,WAAW,gBACVvT,IAAMoS,SAASkB,QAAQ/jB,OAAvB,e,WCJZqjB,GAAe,CACnBthB,QAAQ,EACRoE,KAAM,GACNxB,KAAM,MAuBOsf,GApBM,WAA8C,IAA7CzhB,EAA4C,uDAApC6gB,GAAoC,yCAApB1e,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAClD,OAAQC,GACN,KAAKL,GAIH,OADAuf,GAASnf,GACF,2BAAKlC,GAAZ,IAAmBT,QAAQ,IAE7B,KAAKyC,GACH,OAAO,2BAAKhC,GAAZ,IAAmB2D,KAAMzB,IAE3B,KAAKH,GAEH,OADAsf,KACO,2BAAKrhB,GAAZ,IAAmB2D,KAAM,GAAIpE,QAAQ,IAEvC,QACE,OAAOS,ICfP0hB,GAAa,CAACC,MAEdC,GAAWC,aAAgB,CAC/Bxf,KAAMye,GACNpB,OAAQqB,GACRhK,QAASkK,GACTjF,QAASoF,GACTnhB,MAAOwhB,KAQHK,IAJc,kBAAXC,QAAuBA,OAAOC,qCACjCD,OAAOC,qCAAqC,IAC5CC,MAE4BC,KAAe,WAAf,EAAmBR,KAItCS,GAFDC,aAAYR,GAnBL,GAmB6BE,IChBnCO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrO,MAAK,YAAkD,IAA/CsO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINxI,SAASC,eAAe,SAG1ByI,O","file":"static/js/main.00b7054b.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","const shadows = [\r\n  \"none\",\r\n  \"0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)\",\r\n];\r\n\r\nexport default shadows;\r\n","const typography = {\r\n  fontFamily: \"Quicksand\",\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","import { createMuiTheme, colors } from \"@material-ui/core\";\r\nimport shadows from \"./shadows\";\r\nimport typography from \"./typography\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: \"#F4F6F8\",\r\n      default: colors.common.white,\r\n      paper: colors.common.white,\r\n    },\r\n    primary: {\r\n      light: colors.green[300],\r\n      main: colors.green[500],\r\n      dark: colors.green[700],\r\n      contrastText: colors.common.white,\r\n    },\r\n    secondary: {\r\n      main: colors.lightGreen[500],\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600],\r\n    },\r\n  },\r\n  shadows,\r\n  typography,\r\n  overrides: {\r\n    MuiTableCell: {\r\n      root: {\r\n        padding: 2,\r\n      },\r\n      body: {\r\n        textAlign: \"center\",\r\n      },\r\n      head: {\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#f1f1f1\",\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.87)\",\r\n        color: \"#f5f5f9\",\r\n        maxWidth: 220,\r\n        border: \"1px solid #dadde9\",\r\n      },\r\n      arrow: {\r\n        color: \"rgba(0, 0, 0)\",\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    MuiIcon: {\r\n      fontSize: \"small\",\r\n    },\r\n    MuiTooltip: {\r\n      arrow: true,\r\n    },\r\n    MuiTextField: {\r\n      variant: \"outlined\",\r\n      size: \"small\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { Fragment } from \"react\";\r\nimport { Navigate, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, isAuth, ...rest }) => (\r\n  <Fragment>\r\n    {isAuth ? (\r\n      <Route element={<Component />} {...rest} />\r\n    ) : (\r\n      <Navigate to=\"/login\" />\r\n    )}\r\n  </Fragment>\r\n);\r\n\r\nPrivateRoute.prototype = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.admin.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment } from \"react\";\r\nimport { Navigate, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AuthRoute = ({ component: Component, isAuth, ...rest }) => (\r\n  <Fragment>\r\n    {isAuth ? (\r\n      <Navigate to=\"/partners/dashboard\" />\r\n    ) : (\r\n      <Route element={<Component />} {...rest} />\r\n    )}\r\n  </Fragment>\r\n);\r\n\r\nAuthRoute.prototype = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.admin.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React from \"react\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, ListItem, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: \"flex\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: \"flex-start\",\r\n    letterSpacing: 0,\r\n    padding: \"10px 8px\",\r\n    textTransform: \"none\",\r\n    width: \"100%\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    marginRight: \"auto\",\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    \"& $title\": {\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    \"& $icon\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  handleOnClick,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return handleOnClick ? (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n      onClick={handleOnClick}\r\n    >\r\n      <Button activeclassname={classes.active} className={classes.button}>\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  ) : (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default NavItem;\r\n","export const SET_ADMIN = \"SET_ADMIN\";\r\nexport const UNSET_ADMIN = \"UNSET_ADMIN\";\r\nexport const SET_ADMIN_DATA = \"SET_ADMIN_DATA\";\r\n","import { UNSET_ADMIN, SET_ADMIN, SET_ADMIN_DATA } from \"./type\";\r\n\r\nexport const loginAdmin = (payload) => ({\r\n  type: SET_ADMIN,\r\n  payload,\r\n});\r\n\r\nexport const setAdminData = (payload) => ({\r\n  type: SET_ADMIN_DATA,\r\n  payload,\r\n});\r\n\r\nexport const logoutAdmin = () => ({\r\n  type: UNSET_ADMIN,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation, useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  Users as UsersIcon,\r\n  LogOut as LogOutIcon,\r\n  Briefcase as BookingIcon,\r\n} from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\nimport { logoutAdmin } from \"../../../redux/admin/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst user = {\r\n  avatar: \"../../../images/icon.jpeg\",\r\n  jobTitle: \"Root Admin\",\r\n  name: \"Dummy User\",\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: \"/partners/dashboard\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n  },\r\n  {\r\n    href: \"/partners/customers\",\r\n    icon: UsersIcon,\r\n    title: \"Customers\",\r\n  },\r\n  {\r\n    href: \"/partners/vendors\",\r\n    icon: UsersIcon,\r\n    title: \"Vendors\",\r\n  },\r\n  {\r\n    href: \"/partners/services\",\r\n    icon: ShoppingBagIcon,\r\n    title: \"Services\",\r\n  },\r\n  {\r\n    href: \"/partners/bookings\",\r\n    icon: BookingIcon,\r\n    title: \"Bookings\",\r\n  },\r\n  {\r\n    href: \"/partners/account\",\r\n    icon: UserIcon,\r\n    title: \"Account\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigate();\r\n\r\n  const userData = useSelector((state) => state.admin.data);\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const handleLogOut = () => {\r\n    dispatch(logoutAdmin());\r\n    navigation(\"/login\", { replace: true });\r\n  };\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/partners/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {userData.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {userData.email}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n          <NavItem\r\n            icon={LogOutIcon}\r\n            title=\"Log out\"\r\n            handleOnClick={handleLogOut}\r\n          />\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/icon.cfbaf2af.jpeg\";","import React from \"react\";\r\nimport Icon from \"../images/icon.jpeg\";\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <img\r\n      alt=\"Logo\"\r\n      src={Icon}\r\n      {...props}\r\n      style={{\r\n        width: 40,\r\n        height: 40,\r\n        borderRadius: 999,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Logo from \"../../components/Logo\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        {/* <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden> */}\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppBar, Toolbar, makeStyles } from \"@material-ui/core\";\r\nimport Logo from \"../../components/Logo\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64,\r\n  },\r\n});\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst user = {\r\n  avatar: \"/static/images/avatars/avatar_6.png\",\r\n  city: \"Los Angeles\",\r\n  country: \"USA\",\r\n  jobTitle: \"Senior Developer\",\r\n  name: \"Katarina Smith\",\r\n  timezone: \"GTM-7\",\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100,\r\n  },\r\n}));\r\n\r\nconst Profile = ({ className, userData, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\">\r\n          <Avatar className={classes.avatar} src={user.avatar} />\r\n          <Typography color=\"textPrimary\" gutterBottom variant=\"h3\">\r\n            {userData.name}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"body1\">\r\n            {userData.email}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`Joined ${moment(userData.createdAt).format(\r\n              \"DD-MMM-YYYY  hh:mm A\"\r\n            )}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Profile;\r\n","import swal from \"sweetalert\";\r\n\r\nexport const warning = (text) => {\r\n  return swal({\r\n    title: \"I hope sure what you are doing!\",\r\n    icon: \"warning\",\r\n    dangerMode: true,\r\n    buttons: true,\r\n    text,\r\n  });\r\n};\r\n\r\nexport const networkError = () => {\r\n  return swal({\r\n    title: \"Opps! Connection lost.\",\r\n    icon: \"warning\",\r\n  });\r\n};\r\n\r\nexport const permissionError = () => {\r\n  return swal({\r\n    title: \"Opps! You don't have Permission.\",\r\n    icon: \"error\",\r\n  });\r\n};\r\n\r\nexport const alert = (title, data, type) => {\r\n  return swal(title, data, type);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport { setAdminData } from \"../../../redux/admin/actions\";\r\nimport { alert } from \"../../../utils/alert\";\r\n\r\nconst ProfileDetails = ({ className, userData, ...rest }) => {\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState({ name: \"\", email: \"\" });\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      name: userData.name,\r\n      email: userData.email,\r\n    });\r\n    return () => {\r\n      setError({ name: \"\", email: \"\" });\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (formData.name === \"\") {\r\n      return setError({ ...error, name: \"Name is required!\" });\r\n    } else if (formData.email === \"\") {\r\n      return setError({ ...error, email: \"Email is required!\" });\r\n    }\r\n\r\n    try {\r\n      const { data } = await Axios.patch(\"/admin\", formData);\r\n      dispatch(setAdminData(data.data.admin));\r\n      alert(\"Done\", \"Profile updated successfully!\", \"success\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" noValidate className={className} {...rest}>\r\n      <Card>\r\n        <CardHeader subheader=\"The information can be edited\" title=\"Profile\" />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify your name\"\r\n                error={error.name ? true : false}\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={formData.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item md={6} xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify your email\"\r\n                error={error.email ? true : false}\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={formData.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n          <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Page from \"../../../components/Page\";\r\nimport Profile from \"./Profile\";\r\nimport ProfileDetails from \"./ProfileDetails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  const userData = useSelector((state) => state.admin.data);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Account\">\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} md={6} xs={12}>\r\n            <Profile userData={userData} />\r\n          </Grid>\r\n          <Grid item lg={8} md={6} xs={12}>\r\n            <ProfileDetails userData={userData} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","const setEmptyStr = (str) => (str ? str : \"-\");\r\nexport default setEmptyStr;\r\n","const getInitials = (name = \"\") =>\r\n  name\r\n    .replace(/\\s+/, \" \")\r\n    .split(\" \")\r\n    .slice(0, 2)\r\n    .map((v) => v && v[0].toUpperCase())\r\n    .join(\"\");\r\n\r\nexport default getInitials;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Avatar, Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport getInitials from \"../utils/getInitials\";\r\nimport setEmptyStr from \"../utils/setEmptyStr\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction ProfileName({ image, name }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box alignItems=\"center\" display=\"flex\">\r\n      <Avatar className={classes.avatar} src={image}>\r\n        {getInitials(name)}\r\n      </Avatar>\r\n      <Typography color=\"textPrimary\" variant=\"body1\">\r\n        {setEmptyStr(name)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nProfileName.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default ProfileName;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport setEmptyStr from \"../../../utils/setEmptyStr\";\r\nimport ProfileName from \"../../../components/ProfileName\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer._id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0 &&\r\n                      selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>Location</TableCell>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>Gender</TableCell>\r\n                <TableCell>DOB</TableCell>\r\n                <TableCell>Lon-Lat</TableCell>\r\n                <TableCell>City</TableCell>\r\n                <TableCell>Registration date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer._id}\r\n                  selected={selectedCustomerIds.indexOf(customer._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={customer.name} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(customer.email)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.location)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.mobile)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.gender)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.dob)}</TableCell>\r\n                  <TableCell>\r\n                    {customer.lon}-{customer.lat}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(customer.city)}</TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","export const GET_USERS = \"GET_USERS\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction TableToolbar({\r\n  className,\r\n  title,\r\n  hideAddButton,\r\n  onSearch,\r\n  onAddButtonClick,\r\n  ...rest\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Box minWidth={400}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder={`Search ${title}`}\r\n                variant=\"outlined\"\r\n                onChange={onSearch}\r\n              />\r\n            </Box>\r\n            {!hideAddButton && (\r\n              <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={onAddButtonClick}\r\n                >\r\n                  Add {title}\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nTableToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  hideAddButton: PropTypes.bool,\r\n};\r\n\r\nexport default TableToolbar;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../../components/Page\";\r\nimport Results from \"./Results\";\r\nimport { getUsers } from \"../../../redux/user/actions\";\r\nimport TableToolbar from \"../../../components/TableToolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst CustomerListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const userData = useSelector((state) => state.user.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/user\");\r\n        dispatch(getUsers(data.data.users));\r\n      } catch (error) {\r\n        console.log(error);\r\n        console.log(error.response?.data);\r\n        console.log(error.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Customers\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Customer\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results customers={userData} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerListView;\r\n","import { GET_USERS } from \"./type\";\r\n\r\nexport const getUsers = (payload) => ({\r\n  type: GET_USERS,\r\n  payload,\r\n});\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              BUDGET\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $24,000\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1049\",\r\n    amount: 30.5,\r\n    customer: {\r\n      name: \"Ekaterina Tankova\",\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: \"pending\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1048\",\r\n    amount: 25.1,\r\n    customer: {\r\n      name: \"Cao Yu\",\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: \"delivered\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1047\",\r\n    amount: 10.99,\r\n    customer: {\r\n      name: \"Alexa Richardson\",\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: \"refunded\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1046\",\r\n    amount: 96.43,\r\n    customer: {\r\n      name: \"Anje Keizer\",\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: \"pending\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1045\",\r\n    amount: 32.54,\r\n    customer: {\r\n      name: \"Clarke Gillebert\",\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: \"delivered\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1044\",\r\n    amount: 16.76,\r\n    customer: {\r\n      name: \"Adam Denisov\",\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: \"delivered\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst LatestOrders = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [orders] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Order Ref</TableCell>\r\n                <TableCell>Customer</TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip enterDelay={300} title=\"Sort\">\r\n                    <TableSortLabel active direction=\"desc\">\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow hover key={order._id}>\r\n                  <TableCell>{order.ref}</TableCell>\r\n                  <TableCell>{order.customer.name}</TableCell>\r\n                  <TableCell>\r\n                    {moment(order.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip color=\"primary\" label={order.status} size=\"small\" />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: \"Dropbox\",\r\n    imageUrl: \"/static/images/products/product_1.png\",\r\n    updatedAt: moment().subtract(2, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Medium Corporation\",\r\n    imageUrl: \"/static/images/products/product_2.png\",\r\n    updatedAt: moment().subtract(2, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Slack\",\r\n    imageUrl: \"/static/images/products/product_3.png\",\r\n    updatedAt: moment().subtract(3, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Lyft\",\r\n    imageUrl: \"/static/images/products/product_4.png\",\r\n    updatedAt: moment().subtract(5, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"GitHub\",\r\n    imageUrl: \"/static/images/products/product_5.png\",\r\n    updatedAt: moment().subtract(9, \"hours\"),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n});\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem divider={i < products.length - 1} key={product._id}>\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton edge=\"end\" size=\"small\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LatestProducts;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL CUSTOMERS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            16%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mt={2}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              p={1}\r\n              textAlign=\"center\"\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Budget from \"./Budget\";\r\nimport LatestOrders from \"./LatestOrders\";\r\nimport LatestProducts from \"./LatestProducts\";\r\nimport Sales from \"./Sales\";\r\nimport TasksProgress from \"./TasksProgress\";\r\nimport TotalCustomers from \"./TotalCustomers\";\r\nimport TotalProfit from \"./TotalProfit\";\r\nimport TrafficByDevice from \"./TrafficByDevice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <Budget />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <Sales />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// Icon\r\nimport FacebookIcon from \"../../icons/Facebook\";\r\nimport GoogleIcon from \"../../icons/Google\";\r\nimport Page from \"../../components/Page\";\r\nimport Axios from \"axios\";\r\nimport { loginAdmin } from \"../../redux/admin/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    navigate(\"/login\", { replace: true });\r\n  }, []);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Login\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              password: Yup.string().max(255).required(\"Password is required\"),\r\n            })}\r\n            onSubmit={(formData, methods) => {\r\n              Axios.post(\"/admin/login\", formData)\r\n                .then((res) => {\r\n                  console.log(res.data);\r\n\r\n                  dispatch(loginAdmin(res.data.data.token));\r\n                })\r\n                .catch(({ response }) => {\r\n                  if (response?.data.error) {\r\n                    methods.setErrors(response?.data.error);\r\n                    methods.setSubmitting(false);\r\n                  }\r\n                });\r\n              // navigate(\"/app/dashboard\", { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Sign in\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Sign in on the internal platform\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React from \"react\";\r\nimport { Box, Container, Typography, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: \"inline-block\",\r\n    maxWidth: \"100%\",\r\n    width: 560,\r\n  },\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"404\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","export const GET_SERVICE = \"GET_SERVICE\";\r\nexport const OPEN_SERVICE_DIALOG = \"OPEN_SERVICE_DIALOG\";\r\nexport const CLOSE_SERVICE_DIALOG = \"CLOSE_SERVICE_DIALOG\";\r\nexport const ADD_NEW_SERVICE = \"ADD_NEW_SERVICE\";\r\nexport const UPDATE_SERVICE = \"UPDATE_SERVICE\";\r\nexport const DELETE_SERVICE = \"DELETE_SERVICE\";\r\n","import {\r\n  GET_SERVICE,\r\n  OPEN_SERVICE_DIALOG,\r\n  CLOSE_SERVICE_DIALOG,\r\n  ADD_NEW_SERVICE,\r\n  UPDATE_SERVICE,\r\n  DELETE_SERVICE,\r\n} from \"./type\";\r\n\r\nexport const getService = (payload) => ({\r\n  type: GET_SERVICE,\r\n  payload,\r\n});\r\n\r\nexport const openServiceDialog = (payload) => ({\r\n  type: OPEN_SERVICE_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const closeServiceDialog = () => ({\r\n  type: CLOSE_SERVICE_DIALOG,\r\n});\r\n\r\nexport const addNewService = (payload) => ({\r\n  type: ADD_NEW_SERVICE,\r\n  payload,\r\n});\r\n\r\nexport const updateService = (payload) => ({\r\n  type: UPDATE_SERVICE,\r\n  payload,\r\n});\r\n\r\nexport const deleteService = (payload) => ({\r\n  type: DELETE_SERVICE,\r\n  payload,\r\n});\r\n","const trimStr = (str) => (str.length >= 10 ? str.substr(0, 7) + \"...\" : str);\r\n\r\nexport default trimStr;\r\n","import dayjs from \"dayjs\";\r\nconst setDate = (date) => dayjs(date).format(\"DD/MM/YYYY\");\r\n\r\nexport default setDate;\r\n","export const BASE_URL = \"http://bellpepperhomes.com:5000/\";\r\nexport const API_BASE_URL = `${BASE_URL}api`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport { BASE_URL } from \"../constrants\";\r\n\r\nconst Image = ({ image, extraLarge, ...props }) => {\r\n  // const imageURL =\r\n  //   image.search(\"storage\") !== -1 ? `${BASE_URL}${image}` : image;\r\n\r\n  return (\r\n    <Avatar\r\n      src={image || \"https://via.placeholder.com/200\"}\r\n      alt={image}\r\n      style={{\r\n        width: extraLarge ? 200 : 80,\r\n        height: extraLarge ? 200 : 80,\r\n        objectFit: \"cover\",\r\n        borderRadius: 5,\r\n        margin: \"auto\",\r\n        boxShadow: \"rgba(0, 0, 0, 0.3) 2px 3px 5px 1px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nImage.propTypes = {\r\n  image: PropTypes.string,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ToolTip from \"@material-ui/core/Tooltip\";\r\n\r\nconst ToolTipButton = ({\r\n  onClick,\r\n  tipClass,\r\n  btnClass,\r\n  title,\r\n  children,\r\n  placement,\r\n}) => {\r\n  return (\r\n    <ToolTip title={title} placement={placement} className={tipClass}>\r\n      <IconButton onClick={onClick} className={btnClass}>\r\n        {children}\r\n      </IconButton>\r\n    </ToolTip>\r\n  );\r\n};\r\n\r\nexport default ToolTipButton;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Axios from \"axios\";\r\n\r\n// redux\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteService, openServiceDialog } from \"../../redux/service/actions\";\r\n\r\n// Mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n  Tooltip,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\n// icons\r\nimport EditIcon from \"@material-ui/icons/EditRounded\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteRounded\";\r\n\r\n// util\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport trimStr from \"../../utils/trimStr\";\r\nimport setDate from \"../../utils/setDate\";\r\nimport { warning, alert } from \"../../utils/alert\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, services, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedServiceIds, setSelectedServiceIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedServiceIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedServiceIds = services.map((service) => service._id);\r\n    } else {\r\n      newSelectedServiceIds = [];\r\n    }\r\n\r\n    setSelectedServiceIds(newSelectedServiceIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedServiceIds.indexOf(id);\r\n    let newSelectedServiceIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedServiceIds.length - 1) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(0, selectedIndex),\r\n        selectedServiceIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedServiceIds(newSelectedServiceIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleOpenServiceDialog = (id) => {\r\n    dispatch(openServiceDialog(id));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const data = warning();\r\n    data\r\n      .then(async (isDeleted) => {\r\n        if (isDeleted) {\r\n          // delete here\r\n          try {\r\n            const { data } = await Axios.delete(`/service/${id}`);\r\n            if (data.status === 200) {\r\n              dispatch(deleteService(id));\r\n              alert(\"Deleted!\", \"Service has been deleted!\", \"success\");\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedServiceIds.length === services.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedServiceIds.length > 0 &&\r\n                      selectedServiceIds.length < services.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Title</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Price</TableCell>\r\n                <TableCell>Created At</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(limit > 0\r\n                ? services.slice(page * limit, page * limit + limit)\r\n                : services\r\n              ).map((service) => (\r\n                <TableRow\r\n                  hover\r\n                  key={service._id}\r\n                  selected={selectedServiceIds.indexOf(service._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedServiceIds.indexOf(service._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, service._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Image image={service.image} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(service.title)}</TableCell>\r\n                  <TableCell>\r\n                    <Tooltip title={setEmptyStr(service.description)}>\r\n                      <Button\r\n                        className={classes.description}\r\n                        disableElevation\r\n                        disableFocusRipple\r\n                        disableRipple\r\n                        disableTouchRipple\r\n                        variant=\"text\"\r\n                      >\r\n                        {trimStr(setEmptyStr(service.description))}\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(service.price)}</TableCell>\r\n                  <TableCell>{setDate(service.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    <ToolTipButton\r\n                      onClick={() => handleOpenServiceDialog(service._id)}\r\n                      title=\"Edit\"\r\n                    >\r\n                      <EditIcon color=\"primary\" />\r\n                    </ToolTipButton>\r\n                    <ToolTipButton\r\n                      title=\"Delete\"\r\n                      onClick={() => handleDelete(service._id)}\r\n                    >\r\n                      <DeleteIcon color=\"error\" />\r\n                    </ToolTipButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={services.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  services: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  addNewService,\r\n  closeServiceDialog,\r\n  updateService,\r\n} from \"../../redux/service/actions\";\r\n\r\n// Mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialog from \"@material-ui/core/Dialog\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  imageContainer: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"5px\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n  },\r\n  dataLine: {\r\n    margin: \"5px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  textField: {\r\n    margin: \"10px 0\",\r\n  },\r\n  submitButton: {\r\n    textAlign: \"right\",\r\n    marginTop: 20,\r\n  },\r\n}));\r\n\r\nconst Dialog = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [mongoID, setMongoID] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [imageData, setImageData] = useState(null);\r\n  const [imagePath, setImagePath] = useState(null);\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n  });\r\n\r\n  const { dialogId, isDialogOpen: open, data: _data } = useSelector(\r\n    (state) => state.service\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      const index = _data.findIndex((item) => item._id === dialogId);\r\n      if (index !== -1) {\r\n        const _service = _data[index];\r\n\r\n        setMongoID(_service._id);\r\n        setTitle(_service.title);\r\n        setDescription(_service.description);\r\n        setPrice(_service.price);\r\n        setImagePath(_service.image);\r\n\r\n        // setService(_data[index]);\r\n      }\r\n    }\r\n  }, [dialogId, _data]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeServiceDialog());\r\n  };\r\n\r\n  const handleInputFileChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImageData(e.target.files[0]);\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        setImagePath(reader.result);\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleEditImage = () => {\r\n    document.getElementById(\"serviceImage\").click();\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (mongoID) {\r\n      if (!imageData && !imagePath)\r\n        return setErrors({ ...errors, image: \"Please select an image.\" });\r\n    } else if (!mongoID) {\r\n      if (!imageData || !imagePath)\r\n        return setErrors({ ...errors, image: \"Please select an image.\" });\r\n    }\r\n\r\n    if (!title) return setErrors({ ...errors, title: \"Invalid title\" });\r\n    if (!description)\r\n      return setErrors({ ...errors, description: \"Invalid description\" });\r\n    if (!price) return setErrors({ ...errors, price: \"Invalid price\" });\r\n\r\n    const formData = new FormData();\r\n    if (imageData) formData.append(\"image\", imageData);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"price\", price);\r\n\r\n    if (dialogId && mongoID) {\r\n      // Update\r\n      const data = await networkRequest(\r\n        `/service/${mongoID}`,\r\n        \"patch\",\r\n        formData\r\n      );\r\n      dispatch(updateService({ data: data.data.service, id: mongoID }));\r\n      handleClose();\r\n    } else {\r\n      // Create\r\n      const data = await networkRequest(\"/service\", \"post\", formData);\r\n      dispatch(addNewService(data.data.service));\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const networkRequest = async (url, method, _data) => {\r\n    try {\r\n      const { data } = await Axios[method](url, _data);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <ToolTipButton\r\n          title=\"Close\"\r\n          onClick={handleClose}\r\n          btnClass={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </ToolTipButton>\r\n        <Typography variant=\"h3\">Service Details</Typography>\r\n      </DialogTitle>\r\n      <MuiDialogContent>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container>\r\n            <Grid item sm={12}>\r\n              <div onClick={handleEditImage}>\r\n                <input\r\n                  name=\"serviceImage\"\r\n                  id=\"serviceImage\"\r\n                  type=\"file\"\r\n                  hidden\r\n                  accept=\"image/*\"\r\n                  onChange={handleInputFileChange}\r\n                />\r\n                <Image extraLarge image={imagePath} />\r\n                {errors.image && (\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"caption\" color=\"error\">\r\n                      {errors.image}\r\n                    </Typography>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Grid>\r\n            <Grid item sm={12} className={classes.textField}>\r\n              <TextField\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                error={errors.title ? true : false}\r\n                helperText={errors.title}\r\n                label=\"Title\"\r\n                pattern=\"^\\w+(\\s+\\w+)*$\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item sm={12} className={classes.textField}>\r\n              <TextField\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                error={errors.price ? true : false}\r\n                helperText={errors.price}\r\n                label=\"Price\"\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item sm={12} className={classes.textField}>\r\n              <TextField\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                error={errors.description ? true : false}\r\n                helperText={errors.description}\r\n                label=\"Description\"\r\n                pattern=\"^\\w+(\\s+\\w+)*$\"\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={12} className={classes.submitButton}>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                {!mongoID ? \"Submit\" : \"Update\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </MuiDialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openServiceDialog } from \"../../redux/service/actions\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\n\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\nimport { getService } from \"../../redux/service/actions\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst VendorListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const serviceData = useSelector((state) => state.service.data);\r\n\r\n  const [services, setServices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/service\");\r\n        dispatch(getService(data.data.services));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setServices(serviceData);\r\n  }, [serviceData]);\r\n\r\n  const handleSearch = (e) => {\r\n    const value = e.target.value.toUpperCase();\r\n    if (value) {\r\n      const data = serviceData.filter((row) => {\r\n        return (\r\n          row?.title?.toUpperCase()?.indexOf(value) > -1 ||\r\n          row?.description?.toUpperCase()?.indexOf(value) > -1\r\n        );\r\n      });\r\n      setServices(data);\r\n    } else {\r\n      setServices(serviceData);\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    dispatch(openServiceDialog());\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Services\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar\r\n          title=\"Service\"\r\n          onSearch={handleSearch}\r\n          onAddButtonClick={handleOpenDialog}\r\n        />\r\n        <Box mt={3}>\r\n          <Results services={services} />\r\n        </Box>\r\n      </Container>\r\n      <Dialog />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VendorListView;\r\n","export const GET_BOOKING = \"GET_BOOKING\";\r\nexport const DELETE_BOOKING = \"DELETE_BOOKING\";\r\nexport const OPEN_BOOKING_DIALOG = \"OPEN_BOOKING_DIALOG\";\r\nexport const CLOSE_BOOKING_DIALOG = \"CLOSE_BOOKING_DIALOG\";\r\n\r\nexport const OPEN_STAFF_ASSIGN_DIALOG = \"OPEN_STAFF_ASSIGN_DIALOG\";\r\nexport const CLOSE_STAFF_ASSIGN_DIALOG = \"CLOSE_STAFF_ASSIGN_DIALOG\";\r\nexport const ASSIGN_STAFF = \"ASSIGN_STAFF\";\r\n","import React from \"react\";\r\nimport MuiChip from \"@material-ui/core/Chip\";\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nimport DoneIcon from \"@material-ui/icons/DoneRounded\";\r\nimport CancelIcon from \"@material-ui/icons/CancelRounded\";\r\n\r\nconst Chip = ({ type = \"success\", label = \"\" }) => {\r\n  const isSuccess = type === \"success\" ? true : false;\r\n  return (\r\n    <MuiChip\r\n      size=\"small\"\r\n      label={label}\r\n      style={{\r\n        backgroundColor: isSuccess ? colors.indigo[500] : colors.red[500],\r\n        color: colors.common.white,\r\n        margin: 2,\r\n      }}\r\n      icon={\r\n        isSuccess ? (\r\n          <DoneIcon fontSize=\"small\" style={{ color: colors.common.white }} />\r\n        ) : (\r\n          <CancelIcon fontSize=\"small\" style={{ color: colors.common.white }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default Chip;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Axios from \"axios\";\r\n// redux\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteBooking,\r\n  openBookingDialog,\r\n  openStaffDialog,\r\n} from \"../../redux/booking/actions\";\r\n\r\n// MUI\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  makeStyles,\r\n  Button,\r\n  Chip as MuiChip,\r\n  Avatar,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\n// icons\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport trimStr from \"../../utils/trimStr\";\r\nimport { warning, alert } from \"../../utils/alert\";\r\n\r\n// components\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport Chip from \"../../components/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  description: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, bookings, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedBookingIds, setSelectedBookingIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedBookingIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedBookingIds = bookings.map((booking) => booking._id);\r\n    } else {\r\n      newSelectedBookingIds = [];\r\n    }\r\n\r\n    setSelectedBookingIds(newSelectedBookingIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedBookingIds.indexOf(id);\r\n    let newSelectedBookingIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedBookingIds.length - 1) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(0, selectedIndex),\r\n        selectedBookingIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedBookingIds(newSelectedBookingIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleOpenBookingDialog = (id) => {\r\n    dispatch(openBookingDialog(id));\r\n  };\r\n\r\n  const handleOpenStaffAssignDialog = (serviceId, bookingId) => {\r\n    dispatch(openStaffDialog({ serviceId, bookingId }));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const data = warning();\r\n    data\r\n      .then(async (isDeleted) => {\r\n        if (isDeleted) {\r\n          // delete here\r\n          try {\r\n            const { data } = await Axios.delete(`/booking/${id}`);\r\n            console.log(data);\r\n            if (data.status === 200) {\r\n              dispatch(deleteBooking(id));\r\n              alert(\"Deleted!\", \"Booking has been deleted!\", \"success\");\r\n            }\r\n          } catch (error) {\r\n            console.log(error.response);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedBookingIds.length === bookings.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedBookingIds.length > 0 &&\r\n                      selectedBookingIds.length < bookings.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Service Title</TableCell>\r\n                <TableCell>User Name</TableCell>\r\n                <TableCell>Instructions</TableCell>\r\n                <TableCell>Material</TableCell>\r\n                <TableCell>Frequency</TableCell>\r\n                <TableCell>Hours</TableCell>\r\n                <TableCell>Professions</TableCell>\r\n                <TableCell>Days</TableCell>\r\n                <TableCell>Time</TableCell>\r\n                <TableCell>Profession</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(limit > 0\r\n                ? bookings.slice(page * limit, page * limit + limit)\r\n                : bookings\r\n              ).map((booking) => (\r\n                <TableRow\r\n                  hover\r\n                  key={booking._id}\r\n                  selected={selectedBookingIds.indexOf(booking._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedBookingIds.indexOf(booking._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, booking._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{booking.serviceId.title}</TableCell>\r\n                  <TableCell>{setEmptyStr(booking?.userId?.name)}</TableCell>\r\n                  <TableCell>\r\n                    <Tooltip title={setEmptyStr(booking.description)}>\r\n                      <Button\r\n                        className={classes.description}\r\n                        disableElevation\r\n                        disableFocusRipple\r\n                        disableRipple\r\n                        disableTouchRipple\r\n                        variant=\"text\"\r\n                      >\r\n                        {trimStr(setEmptyStr(booking.description))}\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {booking.isMaterialRequired ? \"on\" : \"off\"}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(booking.frequency)}</TableCell>\r\n                  <TableCell>{setEmptyStr(booking.howManyHours)}</TableCell>\r\n                  <TableCell>\r\n                    {setEmptyStr(booking.howManyProfessions)}\r\n                  </TableCell>\r\n                  <TableCell>{trimStr(booking.date)}</TableCell>\r\n                  <TableCell>{trimStr(booking.time)}</TableCell>\r\n                  <TableCell>\r\n                    {!booking.profession && !booking.isCancelled && (\r\n                      <ToolTipButton\r\n                        onClick={() =>\r\n                          handleOpenStaffAssignDialog(\r\n                            booking.serviceId._id,\r\n                            booking._id\r\n                          )\r\n                        }\r\n                        title=\"Assign Employee\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <AssignmentIcon color=\"action\" fontSize=\"small\" />\r\n                      </ToolTipButton>\r\n                    )}\r\n                    {booking.profession && !booking.isCancelled && (\r\n                      <MuiChip\r\n                        label={booking.profession.name}\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor:\r\n                            booking.profession &&\r\n                            booking.isDone &&\r\n                            colors.green[500],\r\n                          color:\r\n                            booking.profession &&\r\n                            booking.isDone &&\r\n                            colors.common.white,\r\n                        }}\r\n                        icon={<Avatar />}\r\n                      />\r\n                    )}\r\n                    {booking.isCancelled && booking.cancelledByWhom && (\r\n                      <Chip type=\"cancel\" label={booking.cancelledByWhom} />\r\n                    )}\r\n                    {booking.profession && booking.isDone && (\r\n                      <Chip type=\"success\" label=\"Completed\" />\r\n                    )}\r\n                    {booking.profession && !booking.isDone && (\r\n                      <Chip type=\"success\" label=\"Assigned\" />\r\n                    )}\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <ToolTipButton\r\n                      onClick={() => handleOpenBookingDialog(booking._id)}\r\n                      title=\"View\"\r\n                      placement=\"top\"\r\n                    >\r\n                      <VisibilityIcon color=\"primary\" fontSize=\"small\" />\r\n                    </ToolTipButton>\r\n                    <ToolTipButton\r\n                      onClick={() => handleDelete(booking._id)}\r\n                      title=\"Delete\"\r\n                      placement=\"top\"\r\n                    >\r\n                      <DeleteIcon color=\"error\" fontSize=\"small\" />\r\n                    </ToolTipButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={bookings.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  bookings: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import {\r\n  GET_BOOKING,\r\n  OPEN_BOOKING_DIALOG,\r\n  CLOSE_BOOKING_DIALOG,\r\n  OPEN_STAFF_ASSIGN_DIALOG,\r\n  CLOSE_STAFF_ASSIGN_DIALOG,\r\n  ASSIGN_STAFF,\r\n  DELETE_BOOKING,\r\n} from \"./type\";\r\n\r\nexport const getBooking = (payload) => ({\r\n  type: GET_BOOKING,\r\n  payload,\r\n});\r\n\r\nexport const openBookingDialog = (payload) => ({\r\n  type: OPEN_BOOKING_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const closeBookingDialog = () => ({\r\n  type: CLOSE_BOOKING_DIALOG,\r\n});\r\n\r\nexport const openStaffDialog = (payload) => ({\r\n  type: OPEN_STAFF_ASSIGN_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const assignStaff = (payload) => ({\r\n  type: ASSIGN_STAFF,\r\n  payload,\r\n});\r\n\r\nexport const closeStaffDialog = () => ({\r\n  type: CLOSE_STAFF_ASSIGN_DIALOG,\r\n});\r\n\r\nexport const deleteBooking = (payload) => ({\r\n  type: DELETE_BOOKING,\r\n  payload,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\n\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport setDate from \"../../utils/setDate\";\r\nimport { closeBookingDialog } from \"../../redux/booking/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  imageContainer: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"5px\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n  },\r\n  dataLine: {\r\n    margin: \"5px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  accordionDetails: {},\r\n}));\r\n\r\nconst Dialog = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [booking, setBooking] = useState({});\r\n  const [show, setShow] = useState(false);\r\n\r\n  const { dialogId, isDialogOpen: open, data: _data } = useSelector(\r\n    (state) => state.booking\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      const index = _data.findIndex((item) => item._id === dialogId);\r\n      if (index !== -1) {\r\n        setShow(true);\r\n        setBooking(_data[index]);\r\n      }\r\n    }\r\n    return () => setShow(false);\r\n  }, [dialogId, _data]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeBookingDialog());\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <ToolTipButton\r\n          title=\"Close\"\r\n          onClick={handleClose}\r\n          btnClass={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </ToolTipButton>\r\n        <Typography variant=\"h3\">Booking Details</Typography>\r\n      </DialogTitle>\r\n      <MuiDialogContent>\r\n        {show && (\r\n          <Grid container spacing={1}>\r\n            <Grid item md={12}>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Instruction:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.description}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Frequency:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.frequency}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Hours:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.howManyHours}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Professions:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.howManyProfessions}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Date & Time:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.date} &nbsp;{booking.time}\r\n                </Typography>\r\n              </div>\r\n\r\n              <Typography\r\n                className={[classes.dataLine, { marginLeft: \"auto\" }].join(\" \")}\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n              >\r\n                Registration Date: {setDate(booking.createdAt)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Accordion disabled={booking?.userId ? false : true}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                  <Typography className={classes.heading}>\r\n                    User Details\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <div>\r\n                    <div className={classes.dataLine}>\r\n                      <Typography variant=\"h5\">Name:&nbsp;</Typography>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {booking.userId.name}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <div className={classes.dataLine}>\r\n                      <Typography variant=\"h5\">Email:&nbsp;</Typography>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {booking.userId.email}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <div className={classes.dataLine}>\r\n                      <Typography variant=\"h5\">Location:&nbsp;</Typography>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {setEmptyStr(booking.userId.location)}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <div className={classes.dataLine}>\r\n                      <Typography variant=\"h5\">Gender:&nbsp;</Typography>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {setEmptyStr(booking.userId.gender)}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <Typography\r\n                      className={classes.dataLine}\r\n                      variant=\"caption\"\r\n                      color=\"textSecondary\"\r\n                    >\r\n                      Joined Date:&nbsp;\r\n                      {setDate(booking.serviceId.createdAt)}\r\n                    </Typography>\r\n                  </div>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Grid>\r\n            <Grid item md={6}>\r\n              <Accordion disabled={booking?.serviceId ? false : true}>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                  <Typography className={classes.heading}>\r\n                    Service Details\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <div style={{ margin: \"auto\" }}>\r\n                    <div className={classes.imageContainer}>\r\n                      <Image image={booking.serviceId.image} extraLarge />\r\n                    </div>\r\n                    <div className={classes.dataLine}>\r\n                      <Typography variant=\"h5\">Title:&nbsp;</Typography>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {booking.serviceId.title}\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.dataLine}>\r\n                      <Typography variant=\"h5\">Description:&nbsp;</Typography>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {booking.serviceId.description}\r\n                      </Typography>\r\n                    </div>\r\n                    <div className={classes.dataLine}>\r\n                      <Typography variant=\"h5\">Price:&nbsp;</Typography>\r\n                      <Typography variant=\"h6\" color=\"textSecondary\">\r\n                        {booking.serviceId.price}\r\n                      </Typography>\r\n                    </div>\r\n\r\n                    <Typography\r\n                      className={classes.dataLine}\r\n                      variant=\"caption\"\r\n                      color=\"textSecondary\"\r\n                    >\r\n                      Created At:&nbsp;\r\n                      {setDate(booking.serviceId.createdAt)}\r\n                    </Typography>\r\n                  </div>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </MuiDialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { assignStaff, closeStaffDialog } from \"../../redux/booking/actions\";\r\nimport axios from \"axios\";\r\n\r\nimport { alert } from \"../../utils/alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function StaffDialog({ onChange }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [staffs, setStaffs] = React.useState([]);\r\n  const [selectedStaff, setSelectedStaff] = React.useState(\"\");\r\n\r\n  const { serviceId, bookingId, isStaffDialogOpen: open } = useSelector(\r\n    (state) => state.booking\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(`/staff/service/${serviceId}`);\r\n        setStaffs(data.data.staffs);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (serviceId) fetchData();\r\n  }, [serviceId]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeStaffDialog());\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedStaff(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!serviceId || !bookingId) {\r\n      return alert(\"An error\", \"Contact with your developer!\", \"danger\");\r\n    }\r\n    try {\r\n      const formData = {\r\n        staffId: selectedStaff,\r\n        bookingId,\r\n      };\r\n      const { data } = await axios.put(`/booking/assignStaff`, formData);\r\n      dispatch(\r\n        assignStaff({\r\n          bookingId,\r\n          bookingData: data.data.booking,\r\n        })\r\n      );\r\n\r\n      alert(\"Done\", data.message, \"success\");\r\n      handleClose();\r\n    } catch (error) {\r\n      alert(\"Warning\", error?.response?.data?.message, \"warning\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <DialogTitle>Choose Staff for this job!</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"demo-dialog-native\">Choose Staff</InputLabel>\r\n          <Select\r\n            labelId=\"demo-dialog-select-label\"\r\n            id=\"demo-dialog-select\"\r\n            value={selectedStaff}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            {staffs.map((item) => (\r\n              <MenuItem key={item._id} value={item._id}>\r\n                {item.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} variant=\"text\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n        >\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\n\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\nimport { getBooking } from \"../../redux/booking/actions\";\r\nimport Dialog from \"./Dialog\";\r\nimport StaffDialog from \"./StaffDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst BookingListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const bookingData = useSelector((state) => state.booking.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/booking\");\r\n        dispatch(getBooking(data.data.bookings));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Bookings\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Booking\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results bookings={bookingData} />\r\n        </Box>\r\n      </Container>\r\n      <Dialog />\r\n      <StaffDialog />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default BookingListView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Text Messages\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Messages\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Notifications from \"./Notifications\";\r\nimport Password from \"./Password\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Settings\">\r\n      <Container maxWidth=\"lg\">\r\n        <Notifications />\r\n        <Box mt={3}>\r\n          <Password />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","export const GET_VENDOR = \"GET_VENDOR\";\r\nexport const DELETE_VENDOR = \"DELETE_VENDOR\";\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Axios from \"axios\";\r\n\r\n// redux\r\nimport { useDispatch } from \"react-redux\";\r\n// Mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\n// icons\r\nimport DeleteIcon from \"@material-ui/icons/DeleteRounded\";\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport setDate from \"../../utils/setDate\";\r\nimport { warning, alert } from \"../../utils/alert\";\r\n// components\r\n\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport { deleteVendor } from \"../../redux/vendor/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, vendors, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedVendorIds, setSelectedVendorIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedVendorIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedVendorIds = vendors.map((vendor) => vendor._id);\r\n    } else {\r\n      newSelectedVendorIds = [];\r\n    }\r\n\r\n    setSelectedVendorIds(newSelectedVendorIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedVendorIds.indexOf(id);\r\n    let newSelectedVendorIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(selectedVendorIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedVendorIds.length - 1) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(0, selectedIndex),\r\n        selectedVendorIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedVendorIds(newSelectedVendorIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const data = warning(\r\n      \"Make sure all the related booking and staff will be\\n deleted automatically!\"\r\n    );\r\n    data\r\n      .then(async (isDeleted) => {\r\n        if (isDeleted) {\r\n          // delete here\r\n          try {\r\n            const { data } = await Axios.delete(`/vendor/${id}`);\r\n            if (data.status === 200) {\r\n              dispatch(deleteVendor(id));\r\n              alert(\"Deleted!\", \"Vendor has been deleted!\", \"success\");\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedVendorIds.length === vendors.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedVendorIds.length > 0 &&\r\n                      selectedVendorIds.length < vendors.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Company Name</TableCell>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>Address</TableCell>\r\n                {/* <TableCell>Staff</TableCell> */}\r\n                <TableCell>Joined On</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {vendors.slice(0, limit).map((vendor) => (\r\n                <TableRow\r\n                  hover\r\n                  key={vendor._id}\r\n                  selected={selectedVendorIds.indexOf(vendor._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedVendorIds.indexOf(vendor._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, vendor._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell>{setEmptyStr(vendor.companyName)}</TableCell>\r\n                  <TableCell>{setEmptyStr(vendor.mobile)}</TableCell>\r\n                  <TableCell>{`${vendor.address.houseNumber}, ${vendor.address.street} ${vendor.address.city}`}</TableCell>\r\n                  <TableCell>{setDate(vendor.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    <ToolTipButton\r\n                      title=\"Delete\"\r\n                      onClick={() => handleDelete(vendor._id)}\r\n                    >\r\n                      <DeleteIcon color=\"error\" />\r\n                    </ToolTipButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={vendors.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  vendors: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import { DELETE_VENDOR, GET_VENDOR } from \"./type\";\r\n\r\nexport const getVendor = (payload) => ({\r\n  type: GET_VENDOR,\r\n  payload,\r\n});\r\n\r\nexport const deleteVendor = (payload) => ({\r\n  type: DELETE_VENDOR,\r\n  payload,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\nimport { getVendor } from \"../../redux/vendor/actions\";\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst VendorListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const vendorData = useSelector((state) => state.vendor.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/vendor\");\r\n        dispatch(getVendor(data.data.vendors));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Vendors\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Vendor\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results vendors={vendorData} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VendorListView;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n// Private & Auth Routes\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport AuthRoute from \"./utils/AuthRoute\";\r\n\r\n// Views\r\nimport DashboardLayout from \"./layouts/DashboardLayout\";\r\nimport MainLayout from \"./layouts/MainLayout\";\r\nimport AccountView from \"./views/account/AccountView\";\r\nimport CustomerListView from \"./views/customer/CustomerListView\";\r\nimport DashboardView from \"./views/reports/DashboardView\";\r\nimport LoginView from \"./views/auth/LoginView\";\r\nimport NotFoundView from \"./views/errors/NotFoundView\";\r\nimport ServiceListView from \"./views/service\";\r\nimport BookingListView from \"./views/Booking\";\r\nimport SettingsView from \"./views/settings/SettingsView\";\r\nimport VendorListView from \"./views/vendor\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"partners\",\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      {\r\n        path: \"account\",\r\n        element: <PrivateRoute path=\"/partners\" component={AccountView} />,\r\n      },\r\n      {\r\n        path: \"customers\",\r\n        element: <PrivateRoute path=\"/partners\" component={CustomerListView} />,\r\n      },\r\n      {\r\n        path: \"vendors\",\r\n        element: <PrivateRoute path=\"/partners\" component={VendorListView} />,\r\n      },\r\n      {\r\n        path: \"vendors/:vendorId\",\r\n        element: <PrivateRoute path=\"/partners\" component={SettingsView} />,\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        element: <PrivateRoute path=\"/partners\" component={DashboardView} />,\r\n      },\r\n      {\r\n        path: \"services\",\r\n        element: <PrivateRoute path=\"/partners\" component={ServiceListView} />,\r\n      },\r\n      {\r\n        path: \"bookings\",\r\n        element: <PrivateRoute path=\"/partners\" component={BookingListView} />,\r\n      },\r\n      {\r\n        path: \"settings\",\r\n        element: <PrivateRoute path=\"/partners\" component={SettingsView} />,\r\n      },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/\",\r\n    element: <MainLayout />,\r\n    children: [\r\n      {\r\n        path: \"login\",\r\n        element: <AuthRoute path=\"/login\" component={LoginView} />,\r\n      },\r\n      { path: \"404\", element: <NotFoundView /> },\r\n      { path: \"/\", element: <Navigate to=\"/partners/dashboard\" /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import \"react-perfect-scrollbar/dist/css/styles.css\";\nimport React, { useEffect } from \"react\";\nimport { useRoutes } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport axios from \"axios\";\n// redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport \"./mixins/chartjs\";\nimport theme from \"./theme\";\nimport routes from \"./routes\";\nimport { API_BASE_URL } from \"./constrants\";\nimport { loginAdmin, setAdminData } from \"./redux/admin/actions\";\nimport Axios from \"axios\";\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst App = () => {\n  const token = localStorage.getItem(\"token\");\n  const dispatch = useDispatch();\n  const routing = useRoutes(routes);\n\n  const isAuth = useSelector((state) => state.admin.isAuth);\n\n  useEffect(() => {\n    if (!token) {\n      return;\n    }\n    dispatch(loginAdmin(token));\n  }, [token, dispatch]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await Axios.get(\"/admin\");\n        dispatch(setAdminData(data.data.admin));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (isAuth) fetchData();\n  }, [isAuth]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { GET_USERS } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return { ...state, data: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { DELETE_VENDOR, GET_VENDOR } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nconst vendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_VENDOR:\r\n      return { ...state, data: payload };\r\n\r\n    case DELETE_VENDOR:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter((category) => {\r\n          return category._id !== payload;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default vendorReducer;\r\n","import {\r\n  ADD_NEW_SERVICE,\r\n  CLOSE_SERVICE_DIALOG,\r\n  DELETE_SERVICE,\r\n  GET_SERVICE,\r\n  OPEN_SERVICE_DIALOG,\r\n  UPDATE_SERVICE,\r\n} from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  dialogId: null,\r\n  isDialogOpen: false,\r\n};\r\n\r\nconst serviceReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_SERVICE:\r\n      return { ...state, data: payload };\r\n\r\n    case OPEN_SERVICE_DIALOG:\r\n      return { ...state, dialogId: payload || null, isDialogOpen: true };\r\n\r\n    case CLOSE_SERVICE_DIALOG:\r\n      return { ...state, dialogId: null, isDialogOpen: false };\r\n\r\n    case ADD_NEW_SERVICE:\r\n      const data = [...state.data];\r\n      data.unshift(payload);\r\n      return {\r\n        ...state,\r\n        data,\r\n      };\r\n\r\n    case UPDATE_SERVICE:\r\n      return {\r\n        ...state,\r\n        data: state.data.map((poster) => {\r\n          if (poster._id === payload.id) return payload.data;\r\n          else return poster;\r\n        }),\r\n      };\r\n\r\n    case DELETE_SERVICE:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter((category) => {\r\n          return category._id !== payload;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default serviceReducer;\r\n","import {\r\n  CLOSE_BOOKING_DIALOG,\r\n  GET_BOOKING,\r\n  OPEN_BOOKING_DIALOG,\r\n  CLOSE_STAFF_ASSIGN_DIALOG,\r\n  OPEN_STAFF_ASSIGN_DIALOG,\r\n  ASSIGN_STAFF,\r\n  DELETE_BOOKING,\r\n} from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  dialogId: null,\r\n  isDialogOpen: false,\r\n  isStaffDialogOpen: false,\r\n  serviceId: null,\r\n  bookingId: null,\r\n};\r\n\r\nconst bookingReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_BOOKING:\r\n      return { ...state, data: payload };\r\n\r\n    case OPEN_BOOKING_DIALOG:\r\n      return { ...state, dialogId: payload, isDialogOpen: true };\r\n\r\n    case CLOSE_BOOKING_DIALOG:\r\n      return { ...state, dialogId: null, isDialogOpen: false };\r\n\r\n    case OPEN_STAFF_ASSIGN_DIALOG:\r\n      return {\r\n        ...state,\r\n        serviceId: payload.serviceId,\r\n        bookingId: payload.bookingId,\r\n        isStaffDialogOpen: true,\r\n      };\r\n\r\n    case CLOSE_STAFF_ASSIGN_DIALOG:\r\n      return {\r\n        ...state,\r\n        serviceId: null,\r\n        bookingId: null,\r\n        isStaffDialogOpen: false,\r\n      };\r\n\r\n    case ASSIGN_STAFF:\r\n      return {\r\n        ...state,\r\n        data: state.data.map((item) =>\r\n          item._id === payload.bookingId\r\n            ? {\r\n                ...item,\r\n                profession: payload.bookingData.staffId,\r\n              }\r\n            : item\r\n        ),\r\n      };\r\n\r\n    case DELETE_BOOKING:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter((category) => {\r\n          return category._id !== payload;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookingReducer;\r\n","import axios from \"axios\";\r\n\r\nexport default function setToken(token) {\r\n  if (token) {\r\n    localStorage.setItem(\"token\", token);\r\n    return (axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`);\r\n  } else {\r\n    localStorage.removeItem(\"token\");\r\n    return delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}\r\n","import { SET_ADMIN, SET_ADMIN_DATA, UNSET_ADMIN } from \"./type\";\r\nimport setToken from \"../../utils/setToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  data: {},\r\n  type: null,\r\n};\r\n\r\nconst adminReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ADMIN:\r\n      // TODO: check later\r\n      // jwt_decode(payload.token);\r\n      setToken(payload);\r\n      return { ...state, isAuth: true };\r\n\r\n    case SET_ADMIN_DATA:\r\n      return { ...state, data: payload };\r\n\r\n    case UNSET_ADMIN:\r\n      setToken();\r\n      return { ...state, data: {}, isAuth: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport userReducer from \"./user/reducer\";\r\nimport vendorReducer from \"./vendor/reducer\";\r\nimport serviceReducer from \"./service/reducer\";\r\nimport bookingReducer from \"./booking/reducer\";\r\nimport adminReducer from \"./admin/reducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  vendor: vendorReducer,\r\n  service: serviceReducer,\r\n  booking: bookingReducer,\r\n  admin: adminReducer,\r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}