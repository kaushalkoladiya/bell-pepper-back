{"version":3,"sources":["components/GlobalStyles.js","mixins/chartjs.js","theme/shadows.js","theme/typography.js","theme/index.js","utils/PrivateRoute.js","utils/AuthRoute.js","layouts/DashboardLayout/NavBar/NavItem.js","redux/admin/type.js","redux/admin/actions.js","layouts/DashboardLayout/NavBar/index.js","images/icon.jpeg","components/Logo.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/index.js","utils/setEmptyStr.js","utils/getInitials.js","components/ProfileName.js","views/customer/CustomerListView/Results.js","redux/user/type.js","components/TableToolbar.js","views/customer/CustomerListView/index.js","redux/user/actions.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/index.js","views/auth/LoginView.js","views/errors/NotFoundView.js","utils/trimStr.js","constrants.js","components/Image.js","redux/service/type.js","utils/setDate.js","views/service/Results.js","redux/service/actions.js","components/ToolTipButton.js","views/service/Dialog.js","views/service/index.js","redux/booking/type.js","utils/alert.js","components/Chip.js","views/Booking/Results.js","redux/booking/actions.js","views/Booking/Dialog.js","views/Booking/StaffDialog.js","views/Booking/index.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","views/vendor/Results.js","redux/vendor/type.js","views/vendor/index.js","redux/vendor/actions.js","routes.js","App.js","redux/user/reducer.js","redux/vendor/reducer.js","redux/service/reducer.js","redux/booking/reducer.js","utils/setToken.js","redux/admin/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","shadows","typography","fontFamily","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","overrides","MuiTableCell","root","textAlign","head","MuiTooltip","tooltip","color","maxWidth","border","arrow","props","MuiIcon","MuiButton","PrivateRoute","Component","component","isAuth","rest","element","to","PropTypes","bool","isRequired","object","connect","state","admin","AuthRoute","item","display","paddingTop","paddingBottom","button","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","handleOnClick","classes","ListItem","clsx","disableGutters","onClick","Button","activeclassname","size","activeClassName","RouterLink","SET_ADMIN","UNSET_ADMIN","loginAdmin","payload","type","user","items","BarChartIcon","UsersIcon","ShoppingBagIcon","BookingIcon","UserIcon","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","location","useLocation","dispatch","useDispatch","navigation","useNavigate","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","variant","Divider","List","map","LogOutIcon","replace","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","alt","style","borderRadius","TopBar","onMobileNavOpen","useState","notifications","AppBar","elevation","Toolbar","IconButton","Badge","badgeContent","length","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","Profile","Card","CardContent","gutterBottom","dateText","moment","format","CardActions","fullWidth","states","value","label","ProfileDetails","firstName","lastName","email","phone","country","values","setValues","handleChange","event","target","autoComplete","noValidate","CardHeader","subheader","Grid","container","md","xs","TextField","helperText","onChange","required","select","SelectProps","native","option","minHeight","Account","Container","lg","setEmptyStr","str","getInitials","split","slice","v","toUpperCase","join","ProfileName","image","Results","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","_id","TableBody","hover","selected","id","selectedIndex","concat","handleSelectOne","mobile","gender","dob","lon","lat","city","createdAt","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","GET_USERS","importButton","exportButton","TableToolbar","hideAddButton","mt","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","CustomerListView","userData","useSelector","data","axios","get","users","console","log","response","fetchData","red","differenceIcon","differenceValue","Budget","justify","uuid","amount","status","actions","LatestOrders","orders","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","order","endIcon","imageUrl","updatedAt","subtract","LatestProducts","products","subtitle","product","divider","ListItemAvatar","ListItemText","fromNow","edge","Sales","useTheme","datasets","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","orange","TasksProgress","LinearProgress","green","TotalCustomers","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","Dashboard","sm","xl","LoginView","navigate","initialValues","password","validationSchema","Yup","shape","max","onSubmit","formData","methods","Axios","post","then","res","token","catch","error","setErrors","setSubmitting","errors","handleBlur","handleSubmit","isSubmitting","touched","mb","Boolean","onBlur","my","disabled","marginTop","NotFoundView","align","trimStr","substr","BASE_URL","API_BASE_URL","Image","extraLarge","imageURL","search","objectFit","boxShadow","GET_SERVICE","OPEN_SERVICE_DIALOG","CLOSE_SERVICE_DIALOG","setDate","date","dayjs","services","selectedServiceIds","setSelectedServiceIds","handleOpenServiceDialog","newSelectedServiceIds","service","vendorId","companyName","description","price","ToolTipButton","tipClass","btnClass","placement","accordion","heading","pxToRem","fontWeightRegular","blue","imageContainer","closeButton","textCenter","dataLine","accordionDetails","Dialog","setService","dialogId","isDialogOpen","_data","findIndex","handleClose","aria-labelledby","DialogTitle","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","address","houseNumber","street","VendorListView","serviceData","GET_BOOKING","OPEN_BOOKING_DIALOG","CLOSE_BOOKING_DIALOG","OPEN_STAFF_ASSIGN_DIALOG","CLOSE_STAFF_ASSIGN_DIALOG","ASSIGN_STAFF","alert","swal","Chip","isSuccess","bookings","selectedBookingIds","setSelectedBookingIds","handleOpenBookingDialog","handleOpenStaffAssignDialog","bookingId","handleDelete","dangerMode","buttons","isDeleted","err","newSelectedBookingIds","booking","serviceId","userId","disableElevation","disableFocusRipple","disableRipple","disableTouchRipple","isMaterialRequired","frequency","howManyHours","howManyProfessions","time","profession","isCancelled","isDone","cancelledByWhom","setBooking","marginLeft","formControl","StaffDialog","React","staffs","setStaffs","selectedStaff","setSelectedStaff","isBookingDialogOpen","staffId","put","bookingData","message","disableBackdropClick","disableEscapeKeyDown","DialogContent","FormControl","InputLabel","htmlFor","Select","labelId","MenuItem","DialogActions","BookingListView","Notifications","wrap","FormControlLabel","control","defaultChecked","Password","confirm","SettingsView","vendors","selectedVendorIds","setSelectedVendorIds","newSelectedVendorIds","vendor","GET_VENDOR","vendorData","routes","path","AccountView","DashboardView","ServiceListView","defaults","baseURL","App","localStorage","getItem","routing","useRoutes","ThemeProvider","initialState","userReducer","vendorReducer","serviceReducer","bookingReducer","setToken","setItem","headers","removeItem","adminReducer","middleware","thunk","reducers","combineReducers","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff5e551e.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","const shadows = [\r\n  \"none\",\r\n  \"0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)\",\r\n  \"0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)\",\r\n];\r\n\r\nexport default shadows;\r\n","const typography = {\r\n  fontFamily: \"Quicksand\",\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","import { createMuiTheme, colors } from \"@material-ui/core\";\r\nimport shadows from \"./shadows\";\r\nimport typography from \"./typography\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: \"#F4F6F8\",\r\n      default: colors.common.white,\r\n      paper: colors.common.white,\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500],\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500],\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600],\r\n    },\r\n  },\r\n  shadows,\r\n  typography,\r\n  overrides: {\r\n    MuiTableCell: {\r\n      root: {\r\n        padding: 2,\r\n      },\r\n      body: {\r\n        textAlign: \"center\",\r\n      },\r\n      head: {\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#f1f1f1\",\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.87)\",\r\n        color: \"#f5f5f9\",\r\n        maxWidth: 220,\r\n        border: \"1px solid #dadde9\",\r\n      },\r\n      arrow: {\r\n        color: \"rgba(0, 0, 0)\",\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    MuiIcon: {\r\n      fontSize: \"small\",\r\n    },\r\n    MuiTooltip: {\r\n      arrow: true,\r\n    },\r\n    MuiButton: {},\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { Fragment } from \"react\";\r\nimport { Navigate, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, isAuth, ...rest }) => (\r\n  <Fragment>\r\n    {isAuth ? (\r\n      <Route element={<Component />} {...rest} />\r\n    ) : (\r\n      <Navigate to=\"/login\" />\r\n    )}\r\n  </Fragment>\r\n);\r\n\r\nPrivateRoute.prototype = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.admin.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment } from \"react\";\r\nimport { Navigate, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AuthRoute = ({ component: Component, isAuth, ...rest }) => (\r\n  <Fragment>\r\n    {isAuth ? (\r\n      <Navigate to=\"/partners/dashboard\" />\r\n    ) : (\r\n      <Route element={<Component />} {...rest} />\r\n    )}\r\n  </Fragment>\r\n);\r\n\r\nAuthRoute.prototype = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.admin.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React from \"react\";\r\nimport { NavLink as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, ListItem, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: \"flex\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: \"flex-start\",\r\n    letterSpacing: 0,\r\n    padding: \"10px 8px\",\r\n    textTransform: \"none\",\r\n    width: \"100%\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    marginRight: \"auto\",\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    \"& $title\": {\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    \"& $icon\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  handleOnClick,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return handleOnClick ? (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n      onClick={handleOnClick}\r\n    >\r\n      <Button activeclassname={classes.active} className={classes.button}>\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  ) : (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && <Icon className={classes.icon} size=\"20\" />}\r\n        <span className={classes.title}>{title}</span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default NavItem;\r\n","export const SET_ADMIN = \"SET_ADMIN\";\r\nexport const UNSET_ADMIN = \"UNSET_ADMIN\";\r\n","import { UNSET_ADMIN, SET_ADMIN } from \"./type\";\r\n\r\nexport const loginAdmin = (payload) => ({\r\n  type: SET_ADMIN,\r\n  payload,\r\n});\r\n\r\nexport const logoutAdmin = () => ({\r\n  type: UNSET_ADMIN,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useLocation, useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon,\r\n  LogOut as LogOutIcon,\r\n  Briefcase as BookingIcon,\r\n} from \"react-feather\";\r\nimport NavItem from \"./NavItem\";\r\nimport { logoutAdmin } from \"../../../redux/admin/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst user = {\r\n  avatar: \"../../../images/icon.jpeg\",\r\n  jobTitle: \"Root Admin\",\r\n  name: \"Dummy User\",\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: \"/partners/dashboard\",\r\n    icon: BarChartIcon,\r\n    title: \"Dashboard\",\r\n  },\r\n  {\r\n    href: \"/partners/customers\",\r\n    icon: UsersIcon,\r\n    title: \"Customers\",\r\n  },\r\n  {\r\n    href: \"/partners/vendors\",\r\n    icon: UsersIcon,\r\n    title: \"Vendors\",\r\n  },\r\n  {\r\n    href: \"/partners/services\",\r\n    icon: ShoppingBagIcon,\r\n    title: \"Services\",\r\n  },\r\n  {\r\n    href: \"/partners/bookings\",\r\n    icon: BookingIcon,\r\n    title: \"Bookings\",\r\n  },\r\n  {\r\n    href: \"/partners/account\",\r\n    icon: UserIcon,\r\n    title: \"Account\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256,\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: \"calc(100% - 64px)\",\r\n  },\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n    width: 64,\r\n    height: 64,\r\n  },\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const handleLogOut = () => {\r\n    dispatch(logoutAdmin());\r\n    navigation(\"/login\", { replace: true });\r\n  };\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/partners/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n          <NavItem\r\n            icon={LogOutIcon}\r\n            title=\"Log out\"\r\n            handleOnClick={handleLogOut}\r\n          />\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false,\r\n};\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/icon.cfbaf2af.jpeg\";","import React from \"react\";\r\nimport Icon from \"../images/icon.jpeg\";\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <img\r\n      alt=\"Logo\"\r\n      src={Icon}\r\n      {...props}\r\n      style={{\r\n        width: 40,\r\n        height: 40,\r\n        borderRadius: 999,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/NotificationsOutlined\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport Logo from \"../../components/Logo\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func,\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppBar, Toolbar, makeStyles } from \"@material-ui/core\";\r\nimport Logo from \"../../components/Logo\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64,\r\n  },\r\n});\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Profile from \"./Profile\";\r\nimport ProfileDetails from \"./ProfileDetails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Account\">\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} md={6} xs={12}>\r\n            <Profile />\r\n          </Grid>\r\n          <Grid item lg={8} md={6} xs={12}>\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","const setEmptyStr = (str) => (str ? str : \"-\");\r\nexport default setEmptyStr;\r\n","const getInitials = (name = \"\") =>\r\n  name\r\n    .replace(/\\s+/, \" \")\r\n    .split(\" \")\r\n    .slice(0, 2)\r\n    .map((v) => v && v[0].toUpperCase())\r\n    .join(\"\");\r\n\r\nexport default getInitials;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Avatar, Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport getInitials from \"../utils/getInitials\";\r\nimport setEmptyStr from \"../utils/setEmptyStr\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction ProfileName({ image, name }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box alignItems=\"center\" display=\"flex\">\r\n      <Avatar className={classes.avatar} src={image}>\r\n        {getInitials(name)}\r\n      </Avatar>\r\n      <Typography color=\"textPrimary\" variant=\"body1\">\r\n        {setEmptyStr(name)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nProfileName.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default ProfileName;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport setEmptyStr from \"../../../utils/setEmptyStr\";\r\nimport ProfileName from \"../../../components/ProfileName\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer._id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0 &&\r\n                      selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>Location</TableCell>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>Gender</TableCell>\r\n                <TableCell>DOB</TableCell>\r\n                <TableCell>Lon-Lat</TableCell>\r\n                <TableCell>City</TableCell>\r\n                <TableCell>Registration date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer._id}\r\n                  selected={selectedCustomerIds.indexOf(customer._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={customer.name} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(customer.email)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.location)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.mobile)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.gender)}</TableCell>\r\n                  <TableCell>{setEmptyStr(customer.dob)}</TableCell>\r\n                  <TableCell>\r\n                    {customer.lon}-{customer.lat}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(customer.city)}</TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","export const GET_USERS = \"GET_USERS\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction TableToolbar({ className, title, hideAddButton, ...rest }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      {!hideAddButton && (\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button color=\"primary\" variant=\"contained\">\r\n            Add {title}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon fontSize=\"small\" color=\"action\">\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                placeholder={`Search ${title}`}\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nTableToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  hideAddButton: PropTypes.bool,\r\n};\r\n\r\nexport default TableToolbar;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../../components/Page\";\r\nimport Results from \"./Results\";\r\nimport { getUsers } from \"../../../redux/user/actions\";\r\nimport TableToolbar from \"../../../components/TableToolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst CustomerListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const userData = useSelector((state) => state.user.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/user\");\r\n        dispatch(getUsers(data.data.users));\r\n      } catch (error) {\r\n        console.log(error);\r\n        console.log(error.response?.data);\r\n        console.log(error.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Customers\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Customer\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results customers={userData} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerListView;\r\n","import { GET_USERS } from \"./type\";\r\n\r\nexport const getUsers = (payload) => ({\r\n  type: GET_USERS,\r\n  payload,\r\n});\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              BUDGET\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $24,000\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1049\",\r\n    amount: 30.5,\r\n    customer: {\r\n      name: \"Ekaterina Tankova\",\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: \"pending\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1048\",\r\n    amount: 25.1,\r\n    customer: {\r\n      name: \"Cao Yu\",\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: \"delivered\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1047\",\r\n    amount: 10.99,\r\n    customer: {\r\n      name: \"Alexa Richardson\",\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: \"refunded\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1046\",\r\n    amount: 96.43,\r\n    customer: {\r\n      name: \"Anje Keizer\",\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: \"pending\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1045\",\r\n    amount: 32.54,\r\n    customer: {\r\n      name: \"Clarke Gillebert\",\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: \"delivered\",\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: \"CDD1044\",\r\n    amount: 16.76,\r\n    customer: {\r\n      name: \"Adam Denisov\",\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: \"delivered\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst LatestOrders = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [orders] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Order Ref</TableCell>\r\n                <TableCell>Customer</TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip enterDelay={300} title=\"Sort\">\r\n                    <TableSortLabel active direction=\"desc\">\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow hover key={order._id}>\r\n                  <TableCell>{order.ref}</TableCell>\r\n                  <TableCell>{order.customer.name}</TableCell>\r\n                  <TableCell>\r\n                    {moment(order.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip color=\"primary\" label={order.status} size=\"small\" />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: \"Dropbox\",\r\n    imageUrl: \"/static/images/products/product_1.png\",\r\n    updatedAt: moment().subtract(2, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Medium Corporation\",\r\n    imageUrl: \"/static/images/products/product_2.png\",\r\n    updatedAt: moment().subtract(2, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Slack\",\r\n    imageUrl: \"/static/images/products/product_3.png\",\r\n    updatedAt: moment().subtract(3, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Lyft\",\r\n    imageUrl: \"/static/images/products/product_4.png\",\r\n    updatedAt: moment().subtract(5, \"hours\"),\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"GitHub\",\r\n    imageUrl: \"/static/images/products/product_5.png\",\r\n    updatedAt: moment().subtract(9, \"hours\"),\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48,\r\n  },\r\n});\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem divider={i < products.length - 1} key={product._id}>\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton edge=\"end\" size=\"small\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LatestProducts;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL CUSTOMERS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              1,600\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            16%\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mt={2}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              p={1}\r\n              textAlign=\"center\"\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import React from \"react\";\r\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Budget from \"./Budget\";\r\nimport LatestOrders from \"./LatestOrders\";\r\nimport LatestProducts from \"./LatestProducts\";\r\nimport Sales from \"./Sales\";\r\nimport TasksProgress from \"./TasksProgress\";\r\nimport TotalCustomers from \"./TotalCustomers\";\r\nimport TotalProfit from \"./TotalProfit\";\r\nimport TrafficByDevice from \"./TrafficByDevice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <Budget />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <Sales />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// Icon\r\nimport FacebookIcon from \"../../icons/Facebook\";\r\nimport GoogleIcon from \"../../icons/Google\";\r\nimport Page from \"../../components/Page\";\r\nimport Axios from \"axios\";\r\nimport { loginAdmin } from \"../../redux/admin/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    navigate(\"/login\", { replace: true });\r\n  }, []);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Login\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              password: Yup.string().max(255).required(\"Password is required\"),\r\n            })}\r\n            onSubmit={(formData, methods) => {\r\n              Axios.post(\"/admin/login\", formData)\r\n                .then((res) => {\r\n                  console.log(res.data);\r\n\r\n                  dispatch(loginAdmin(res.data.data.token));\r\n                })\r\n                .catch(({ response }) => {\r\n                  if (response?.data.error) {\r\n                    methods.setErrors(response?.data.error);\r\n                    methods.setSubmitting(false);\r\n                  }\r\n                });\r\n              // navigate(\"/app/dashboard\", { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    Sign in\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Sign in on the internal platform\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React from \"react\";\r\nimport { Box, Container, Typography, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: \"inline-block\",\r\n    maxWidth: \"100%\",\r\n    width: 560,\r\n  },\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"404\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","const trimStr = (str) => (str.length >= 10 ? str.substr(0, 7) + \"...\" : str);\r\n\r\nexport default trimStr;\r\n","export const BASE_URL = \"http://bellpepperhomes.com:5000/\";\r\nexport const API_BASE_URL = `${BASE_URL}api`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { BASE_URL } from \"../constrants\";\r\n\r\nconst Image = ({ image, extraLarge, ...props }) => {\r\n  const imageURL =\r\n    image.search(\"storage\") !== -1 ? `${BASE_URL}${image}` : image;\r\n\r\n  return (\r\n    <img\r\n      src={imageURL}\r\n      alt={image}\r\n      style={{\r\n        width: extraLarge ? 200 : 80,\r\n        height: extraLarge ? 200 : 80,\r\n        objectFit: \"cover\",\r\n        borderRadius: 5,\r\n        margin: 2,\r\n        boxShadow: \"rgba(0, 0, 0, 0.3) 2px 3px 5px 1px\",\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nImage.propTypes = {\r\n  image: PropTypes.string,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","export const GET_SERVICE = \"GET_SERVICE\";\r\nexport const OPEN_SERVICE_DIALOG = \"OPEN_SERVICE_DIALOG\";\r\nexport const CLOSE_SERVICE_DIALOG = \"CLOSE_SERVICE_DIALOG\";\r\n","import dayjs from \"dayjs\";\r\nconst setDate = (date) => dayjs(date).format(\"DD/MM/YYYY\");\r\n\r\nexport default setDate;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\nimport trimStr from \"../../utils/trimStr\";\r\nimport Image from \"../../components/Image\";\r\nimport { openServiceDialog } from \"../../redux/service/actions\";\r\nimport setDate from \"../../utils/setDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, services, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedServiceIds, setSelectedServiceIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedServiceIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedServiceIds = services.map((service) => service._id);\r\n    } else {\r\n      newSelectedServiceIds = [];\r\n    }\r\n\r\n    setSelectedServiceIds(newSelectedServiceIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedServiceIds.indexOf(id);\r\n    let newSelectedServiceIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedServiceIds.length - 1) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedServiceIds = newSelectedServiceIds.concat(\r\n        selectedServiceIds.slice(0, selectedIndex),\r\n        selectedServiceIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedServiceIds(newSelectedServiceIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleOpenServiceDialog = (id) => {\r\n    dispatch(openServiceDialog(id));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedServiceIds.length === services.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedServiceIds.length > 0 &&\r\n                      selectedServiceIds.length < services.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Vendor's Company Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Title</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Price</TableCell>\r\n                <TableCell>Registration date</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {services.slice(0, limit).map((service) => (\r\n                <TableRow\r\n                  hover\r\n                  key={service._id}\r\n                  selected={selectedServiceIds.indexOf(service._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedServiceIds.indexOf(service._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, service._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={service.vendorId.companyName} />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Image image={service.image} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(service.title)}</TableCell>\r\n                  <TableCell>\r\n                    {trimStr(setEmptyStr(service.description))}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(service.price)}</TableCell>\r\n                  <TableCell>{setDate(service.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      onClick={() => handleOpenServiceDialog(service._id)}\r\n                    >\r\n                      <VisibilityIcon color=\"primary\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={services.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  services: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import { GET_SERVICE, OPEN_SERVICE_DIALOG, CLOSE_SERVICE_DIALOG } from \"./type\";\r\n\r\nexport const getService = (payload) => ({\r\n  type: GET_SERVICE,\r\n  payload,\r\n});\r\n\r\nexport const openServiceDialog = (payload) => ({\r\n  type: OPEN_SERVICE_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const closeServiceDialog = () => ({\r\n  type: CLOSE_SERVICE_DIALOG,\r\n});\r\n","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ToolTip from \"@material-ui/core/Tooltip\";\r\n\r\nconst ToolTipButton = ({\r\n  onClick,\r\n  tipClass,\r\n  btnClass,\r\n  title,\r\n  children,\r\n  placement,\r\n}) => {\r\n  return (\r\n    <ToolTip title={title} placement={placement} className={tipClass}>\r\n      <IconButton onClick={onClick} className={btnClass}>\r\n        {children}\r\n      </IconButton>\r\n    </ToolTip>\r\n  );\r\n};\r\n\r\nexport default ToolTipButton;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { closeServiceDialog } from \"../../redux/service/actions\";\r\n\r\n// Mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\n\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport setDate from \"../../utils/setDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  imageContainer: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"5px\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n  },\r\n  dataLine: {\r\n    margin: \"5px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  accordionDetails: {},\r\n}));\r\n\r\nconst Dialog = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [service, setService] = useState({});\r\n\r\n  const { dialogId, isDialogOpen: open, data: _data } = useSelector(\r\n    (state) => state.service\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      const index = _data.findIndex((item) => item._id === dialogId);\r\n      if (index !== -1) {\r\n        setService(_data[index]);\r\n      }\r\n    }\r\n  }, [dialogId, _data]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeServiceDialog());\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <ToolTipButton\r\n          title=\"Close\"\r\n          onClick={handleClose}\r\n          btnClass={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </ToolTipButton>\r\n        <Typography variant=\"h3\">Service Details</Typography>\r\n      </DialogTitle>\r\n      <MuiDialogContent>\r\n        {service.title && (\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              <div className={classes.imageContainer}>\r\n                <Image image={service.image} extraLarge />\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Title:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.title}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Description:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.description}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Price:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {service.price}\r\n                </Typography>\r\n              </div>\r\n\r\n              <Typography\r\n                className={classes.dataLine}\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n              >\r\n                Registration Date: {setDate(service.createdAt)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <div className={classes.accordion}>\r\n                <Accordion disabled={service?.vendorId ? false : true}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      Vendor Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordionDetails}>\r\n                    <div>\r\n                      <ProfileName name={service.vendorId.companyName} />\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Mobile:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(service.vendorId.mobile)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Address:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {`${service.vendorId.address.houseNumber}, ${service.vendorId.address.street} ${service.vendorId.address.city}`}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </MuiDialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\n\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\nimport { getService } from \"../../redux/service/actions\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst VendorListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const serviceData = useSelector((state) => state.service.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/service\");\r\n        dispatch(getService(data.data.services));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Services\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Service\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results services={serviceData} />\r\n        </Box>\r\n      </Container>\r\n      <Dialog />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VendorListView;\r\n","export const GET_BOOKING = \"GET_BOOKING\";\r\nexport const OPEN_BOOKING_DIALOG = \"OPEN_BOOKING_DIALOG\";\r\nexport const CLOSE_BOOKING_DIALOG = \"CLOSE_BOOKING_DIALOG\";\r\n\r\nexport const OPEN_STAFF_ASSIGN_DIALOG = \"OPEN_STAFF_ASSIGN_DIALOG\";\r\nexport const CLOSE_STAFF_ASSIGN_DIALOG = \"CLOSE_STAFF_ASSIGN_DIALOG\";\r\nexport const ASSIGN_STAFF = \"ASSIGN_STAFF\";\r\n","import swal from \"sweetalert\";\r\n\r\nexport const success = () => {\r\n  return swal({\r\n    title: \"Are You Sure!\",\r\n  });\r\n};\r\n\r\nexport const warning = () => {\r\n  return swal({\r\n    title: \"Are You Sure!\",\r\n    icon: \"warning\",\r\n    dangerMode: true,\r\n    buttons: true,\r\n  });\r\n};\r\n\r\nexport const networkError = () => {\r\n  return swal({\r\n    title: \"Opps! Connection lost.\",\r\n    icon: \"warning\",\r\n  });\r\n};\r\n\r\nexport const permissionError = () => {\r\n  return swal({\r\n    title: \"Opps! You don't have Permission.\",\r\n    icon: \"error\",\r\n  });\r\n};\r\n\r\nexport const alert = (title, data, type) => {\r\n  return swal(title, data, type);\r\n};\r\n\r\nexport const approvedPost = () => {\r\n  return swal(\"Approved!\", `News Post has been approved!`, \"success\");\r\n};\r\n","import React from \"react\";\r\nimport MuiChip from \"@material-ui/core/Chip\";\r\nimport { colors } from \"@material-ui/core\";\r\n\r\nimport DoneIcon from \"@material-ui/icons/DoneRounded\";\r\nimport CancelIcon from \"@material-ui/icons/CancelRounded\";\r\n\r\nconst Chip = ({ type = \"success\", label = \"\" }) => {\r\n  const isSuccess = type === \"success\" ? true : false;\r\n  return (\r\n    <MuiChip\r\n      size=\"small\"\r\n      label={label}\r\n      style={{\r\n        backgroundColor: isSuccess ? colors.indigo[500] : colors.red[500],\r\n        color: colors.common.white,\r\n        margin: 2,\r\n      }}\r\n      icon={\r\n        isSuccess ? (\r\n          <DoneIcon fontSize=\"small\" style={{ color: colors.common.white }} />\r\n        ) : (\r\n          <CancelIcon fontSize=\"small\" style={{ color: colors.common.white }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default Chip;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  makeStyles,\r\n  Button,\r\n  Chip as MuiChip,\r\n  Avatar,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\n// icons\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForeverRounded\";\r\n\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport trimStr from \"../../utils/trimStr\";\r\nimport {\r\n  openBookingDialog,\r\n  openStaffDialog,\r\n} from \"../../redux/booking/actions\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport { warning } from \"../../utils/alert\";\r\nimport Chip from \"../../components/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  description: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, bookings, ...rest }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedBookingIds, setSelectedBookingIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedBookingIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedBookingIds = bookings.map((booking) => booking._id);\r\n    } else {\r\n      newSelectedBookingIds = [];\r\n    }\r\n\r\n    setSelectedBookingIds(newSelectedBookingIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedBookingIds.indexOf(id);\r\n    let newSelectedBookingIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds,\r\n        id\r\n      );\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedBookingIds.length - 1) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedBookingIds = newSelectedBookingIds.concat(\r\n        selectedBookingIds.slice(0, selectedIndex),\r\n        selectedBookingIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedBookingIds(newSelectedBookingIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleOpenBookingDialog = (id) => {\r\n    dispatch(openBookingDialog(id));\r\n  };\r\n\r\n  const handleOpenStaffAssignDialog = (bookingId, vendorId) => {\r\n    dispatch(openStaffDialog({ bookingId, vendorId }));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const data = warning();\r\n    data\r\n      .then((isDeleted) => {\r\n        if (isDeleted) {\r\n          // delete\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedBookingIds.length === bookings.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedBookingIds.length > 0 &&\r\n                      selectedBookingIds.length < bookings.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Company Name</TableCell>\r\n                <TableCell>Service Title</TableCell>\r\n                <TableCell>User Name</TableCell>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>Material</TableCell>\r\n                <TableCell>Frequency</TableCell>\r\n                <TableCell>Hours</TableCell>\r\n                <TableCell>Professions</TableCell>\r\n                <TableCell>Days</TableCell>\r\n                <TableCell>Time</TableCell>\r\n                <TableCell>Profession</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(limit > 0\r\n                ? bookings.slice(page * limit, page * limit + limit)\r\n                : bookings\r\n              ).map((booking) => (\r\n                <TableRow\r\n                  hover\r\n                  key={booking._id}\r\n                  selected={selectedBookingIds.indexOf(booking._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedBookingIds.indexOf(booking._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, booking._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{booking.vendorId.companyName}</TableCell>\r\n                  <TableCell>{booking.serviceId.title}</TableCell>\r\n                  <TableCell>{setEmptyStr(booking?.userId?.name)}</TableCell>\r\n                  <TableCell>\r\n                    <Tooltip title={setEmptyStr(booking.description)}>\r\n                      <Button\r\n                        className={classes.description}\r\n                        disableElevation\r\n                        disableFocusRipple\r\n                        disableRipple\r\n                        disableTouchRipple\r\n                        variant=\"text\"\r\n                      >\r\n                        {trimStr(setEmptyStr(booking.description))}\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {booking.isMaterialRequired ? \"on\" : \"off\"}\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(booking.frequency)}</TableCell>\r\n                  <TableCell>{setEmptyStr(booking.howManyHours)}</TableCell>\r\n                  <TableCell>\r\n                    {setEmptyStr(booking.howManyProfessions)}\r\n                  </TableCell>\r\n                  <TableCell>{trimStr(booking.date)}</TableCell>\r\n                  <TableCell>{trimStr(booking.time)}</TableCell>\r\n                  <TableCell>\r\n                    {!booking.profession && !booking.isCancelled && (\r\n                      <ToolTipButton\r\n                        onClick={() =>\r\n                          handleOpenStaffAssignDialog(\r\n                            booking._id,\r\n                            booking.vendorId._id\r\n                          )\r\n                        }\r\n                        title=\"Assign Employee\"\r\n                        placement=\"top\"\r\n                      >\r\n                        <AssignmentIcon color=\"action\" fontSize=\"small\" />\r\n                      </ToolTipButton>\r\n                    )}\r\n                    {booking.profession && !booking.isCancelled && (\r\n                      <MuiChip\r\n                        label={booking.profession.name}\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor:\r\n                            booking.profession &&\r\n                            booking.isDone &&\r\n                            colors.green[500],\r\n                          color:\r\n                            booking.profession &&\r\n                            booking.isDone &&\r\n                            colors.common.white,\r\n                        }}\r\n                        icon={<Avatar />}\r\n                      />\r\n                    )}\r\n                    {booking.isCancelled && booking.cancelledByWhom && (\r\n                      <Chip type=\"cancel\" label={booking.cancelledByWhom} />\r\n                    )}\r\n                    {booking.profession && booking.isDone && (\r\n                      <Chip type=\"success\" label=\"Completed\" />\r\n                    )}\r\n                    {booking.profession && !booking.isDone && (\r\n                      <Chip type=\"success\" label=\"Assigned\" />\r\n                    )}\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <ToolTipButton\r\n                      onClick={() => handleOpenBookingDialog(booking._id)}\r\n                      title=\"Edit\"\r\n                      placement=\"top\"\r\n                    >\r\n                      <VisibilityIcon color=\"primary\" fontSize=\"small\" />\r\n                    </ToolTipButton>\r\n                    <ToolTipButton\r\n                      onClick={handleDelete}\r\n                      title=\"Delete\"\r\n                      placement=\"top\"\r\n                    >\r\n                      <DeleteIcon color=\"error\" fontSize=\"small\" />\r\n                    </ToolTipButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={bookings.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  bookings: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","import {\r\n  GET_BOOKING,\r\n  OPEN_BOOKING_DIALOG,\r\n  CLOSE_BOOKING_DIALOG,\r\n  OPEN_STAFF_ASSIGN_DIALOG,\r\n  CLOSE_STAFF_ASSIGN_DIALOG,\r\n  ASSIGN_STAFF,\r\n} from \"./type\";\r\n\r\nexport const getBooking = (payload) => ({\r\n  type: GET_BOOKING,\r\n  payload,\r\n});\r\n\r\nexport const openBookingDialog = (payload) => ({\r\n  type: OPEN_BOOKING_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const closeBookingDialog = () => ({\r\n  type: CLOSE_BOOKING_DIALOG,\r\n});\r\n\r\nexport const openStaffDialog = (payload) => ({\r\n  type: OPEN_STAFF_ASSIGN_DIALOG,\r\n  payload,\r\n});\r\n\r\nexport const assignStaff = (payload) => ({\r\n  type: ASSIGN_STAFF,\r\n  payload,\r\n});\r\n\r\nexport const closeStaffDialog = () => ({\r\n  type: CLOSE_STAFF_ASSIGN_DIALOG,\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Mui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\n// icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// components\r\nimport Image from \"../../components/Image\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport ProfileName from \"../../components/ProfileName\";\r\n\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\nimport setDate from \"../../utils/setDate\";\r\nimport { closeBookingDialog } from \"../../redux/booking/actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n  imageContainer: {\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"5px\",\r\n  },\r\n  textCenter: {\r\n    textAlign: \"center\",\r\n    padding: 5,\r\n  },\r\n  dataLine: {\r\n    margin: \"5px 0\",\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  accordionDetails: {},\r\n}));\r\n\r\nconst Dialog = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [booking, setBooking] = useState({});\r\n\r\n  const { dialogId, isDialogOpen: open, data: _data } = useSelector(\r\n    (state) => state.booking\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dialogId) {\r\n      const index = _data.findIndex((item) => item._id === dialogId);\r\n      if (index !== -1) {\r\n        setBooking(_data[index]);\r\n      }\r\n    }\r\n  }, [dialogId, _data]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeBookingDialog());\r\n  };\r\n\r\n  return (\r\n    <MuiDialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">\r\n        <ToolTipButton\r\n          title=\"Close\"\r\n          onClick={handleClose}\r\n          btnClass={classes.closeButton}\r\n        >\r\n          <CloseIcon />\r\n        </ToolTipButton>\r\n        <Typography variant=\"h3\">Booking Details</Typography>\r\n      </DialogTitle>\r\n      <MuiDialogContent>\r\n        {booking.vendorId && (\r\n          <Grid container>\r\n            <Grid item md={12}>\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Instruction:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.description}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Frequency:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.frequency}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Hours:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.howManyHours}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Professions:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.howManyProfessions}\r\n                </Typography>\r\n              </div>\r\n\r\n              <div className={classes.dataLine}>\r\n                <Typography variant=\"h5\">Date & Time:&nbsp;</Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                  {booking.date} &nbsp;{booking.time}\r\n                </Typography>\r\n              </div>\r\n\r\n              <Typography\r\n                className={[classes.dataLine, { marginLeft: \"auto\" }].join(\" \")}\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n              >\r\n                Registration Date: {setDate(booking.createdAt)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item md={12}>\r\n              <div className={classes.accordion}>\r\n                <Accordion disabled={booking?.userId ? false : true}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>\r\n                      User Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Name:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.userId.name}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Email:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.userId.email}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Location:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.userId.location)}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Gender:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.userId.gender)}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <Typography\r\n                        className={classes.dataLine}\r\n                        variant=\"caption\"\r\n                        color=\"textSecondary\"\r\n                      >\r\n                        Joined Date:&nbsp;\r\n                        {setDate(booking.serviceId.createdAt)}\r\n                      </Typography>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion disabled={booking?.serviceId ? false : true}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography className={classes.heading}>\r\n                      Service Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div style={{ margin: \"auto\" }}>\r\n                      <div className={classes.imageContainer}>\r\n                        <Image image={booking.serviceId.image} extraLarge />\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Title:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.title}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Description:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.description}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Price:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {booking.serviceId.price}\r\n                        </Typography>\r\n                      </div>\r\n\r\n                      <Typography\r\n                        className={classes.dataLine}\r\n                        variant=\"caption\"\r\n                        color=\"textSecondary\"\r\n                      >\r\n                        Created At:&nbsp;\r\n                        {setDate(booking.serviceId.createdAt)}\r\n                      </Typography>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion disabled={booking?.vendorId ? false : true}>\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      Vendor Details\r\n                    </Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <div>\r\n                      <ProfileName name={booking.vendorId.companyName} />\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Email:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.email)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Mobile:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.mobile)}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">Address:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {`${booking.vendorId.address.houseNumber}, ${booking.vendorId.address.street} ${booking.vendorId.address.city}`}\r\n                        </Typography>\r\n                      </div>\r\n                      <div className={classes.dataLine}>\r\n                        <Typography variant=\"h5\">City:&nbsp;</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">\r\n                          {setEmptyStr(booking.vendorId.city)}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </MuiDialogContent>\r\n    </MuiDialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { assignStaff, closeStaffDialog } from \"../../redux/booking/actions\";\r\nimport axios from \"axios\";\r\n\r\nimport { alert } from \"../../utils/alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function StaffDialog({ onChange }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [staffs, setStaffs] = React.useState([]);\r\n  const [selectedStaff, setSelectedStaff] = React.useState(\"\");\r\n\r\n  const { bookingId, vendorId, isBookingDialogOpen: open } = useSelector(\r\n    (state) => state.booking\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(`/staff/vendor/${vendorId}`);\r\n        setStaffs(data.data.staffs);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    if (vendorId) fetchData();\r\n  }, [vendorId]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeStaffDialog());\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedStaff(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!vendorId || !bookingId) {\r\n      return alert(\"Contact your developer!\");\r\n    }\r\n    try {\r\n      const formData = {\r\n        staffId: selectedStaff,\r\n        bookingId: bookingId,\r\n      };\r\n      const { data } = await axios.put(`/booking/assignStaff`, formData);\r\n      dispatch(\r\n        assignStaff({\r\n          bookingId,\r\n          bookingData: data.data.booking,\r\n        })\r\n      );\r\n\r\n      alert(\"Done\", data.message, \"success\");\r\n      handleClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Warning\", error?.response?.data?.message, \"warning\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <DialogTitle>Choose Staff for this job!</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"demo-dialog-native\">Choose Staff</InputLabel>\r\n          <Select\r\n            labelId=\"demo-dialog-select-label\"\r\n            id=\"demo-dialog-select\"\r\n            value={selectedStaff}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            {staffs.map((item) => (\r\n              <MenuItem key={item._id} value={item._id}>\r\n                {item.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} variant=\"text\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n        >\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\n\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\nimport { getBooking } from \"../../redux/booking/actions\";\r\nimport Dialog from \"./Dialog\";\r\nimport StaffDialog from \"./StaffDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst BookingListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const bookingData = useSelector((state) => state.booking.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/booking\");\r\n        dispatch(getBooking(data.data.bookings));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Bookings\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Booking\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results bookings={bookingData} />\r\n        </Box>\r\n      </Container>\r\n      <Dialog />\r\n      <StaffDialog />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default BookingListView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Text Messages\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Messages\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\nimport Page from \"../../../components/Page\";\r\nimport Notifications from \"./Notifications\";\r\nimport Password from \"./Password\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Settings\">\r\n      <Container maxWidth=\"lg\">\r\n        <Notifications />\r\n        <Box mt={3}>\r\n          <Password />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n// Mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\n// icons\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n// utils\r\nimport setEmptyStr from \"../../utils/setEmptyStr\";\r\n// components\r\nimport ProfileName from \"../../components/ProfileName\";\r\nimport ToolTipButton from \"../../components/ToolTipButton\";\r\nimport setDate from \"../../utils/setDate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Results = ({ className, vendors, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedVendorIds, setSelectedVendorIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedVendorIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedVendorIds = vendors.map((vendor) => vendor._id);\r\n    } else {\r\n      newSelectedVendorIds = [];\r\n    }\r\n\r\n    setSelectedVendorIds(newSelectedVendorIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedVendorIds.indexOf(id);\r\n    let newSelectedVendorIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(selectedVendorIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(1)\r\n      );\r\n    } else if (selectedIndex === selectedVendorIds.length - 1) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(0, -1)\r\n      );\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedVendorIds = newSelectedVendorIds.concat(\r\n        selectedVendorIds.slice(0, selectedIndex),\r\n        selectedVendorIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedVendorIds(newSelectedVendorIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedVendorIds.length === vendors.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedVendorIds.length > 0 &&\r\n                      selectedVendorIds.length < vendors.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>Company Name</TableCell>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>Address</TableCell>\r\n                {/* <TableCell>Staff</TableCell> */}\r\n                <TableCell>Joined On</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {vendors.slice(0, limit).map((vendor) => (\r\n                <TableRow\r\n                  hover\r\n                  key={vendor._id}\r\n                  selected={selectedVendorIds.indexOf(vendor._id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedVendorIds.indexOf(vendor._id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, vendor._id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ProfileName name={vendor.companyName} />\r\n                  </TableCell>\r\n                  <TableCell>{setEmptyStr(vendor.mobile)}</TableCell>\r\n                  <TableCell>{`${vendor.address.houseNumber}, ${vendor.address.street} ${vendor.address.city}`}</TableCell>\r\n                  {/* <TableCell>{setEmptyStr(vendor.city)}</TableCell> */}\r\n                  <TableCell>{setDate(vendor.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    <ToolTipButton title=\"Edit\">\r\n                      <VisibilityIcon color=\"primary\" />\r\n                    </ToolTipButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={vendors.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  vendors: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Results;\r\n","export const GET_VENDOR = \"GET_VENDOR\";\r\n","import React, { useEffect } from \"react\";\r\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Page from \"../../components/Page\";\r\nimport Results from \"./Results\";\r\nimport { getVendor } from \"../../redux/vendor/actions\";\r\nimport TableToolbar from \"../../components/TableToolbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst VendorListView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const vendorData = useSelector((state) => state.vendor.data);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"/vendor\");\r\n        dispatch(getVendor(data.data.vendors));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Vendors\">\r\n      <Container maxWidth={false}>\r\n        <TableToolbar title=\"Vendor\" hideAddButton />\r\n        <Box mt={3}>\r\n          <Results vendors={vendorData} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default VendorListView;\r\n","import { GET_VENDOR } from \"./type\";\r\n\r\nexport const getVendor = (payload) => ({\r\n  type: GET_VENDOR,\r\n  payload,\r\n});\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n// Private & Auth Routes\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport AuthRoute from \"./utils/AuthRoute\";\r\n\r\n// Views\r\nimport DashboardLayout from \"./layouts/DashboardLayout\";\r\nimport MainLayout from \"./layouts/MainLayout\";\r\nimport AccountView from \"./views/account/AccountView\";\r\nimport CustomerListView from \"./views/customer/CustomerListView\";\r\nimport DashboardView from \"./views/reports/DashboardView\";\r\nimport LoginView from \"./views/auth/LoginView\";\r\nimport NotFoundView from \"./views/errors/NotFoundView\";\r\nimport ServiceListView from \"./views/service\";\r\nimport BookingListView from \"./views/Booking\";\r\nimport SettingsView from \"./views/settings/SettingsView\";\r\nimport VendorListView from \"./views/vendor\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"partners\",\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      {\r\n        path: \"account\",\r\n        element: <PrivateRoute path=\"/partners\" component={AccountView} />,\r\n      },\r\n      {\r\n        path: \"customers\",\r\n        element: <PrivateRoute path=\"/partners\" component={CustomerListView} />,\r\n      },\r\n      {\r\n        path: \"vendors\",\r\n        element: <PrivateRoute path=\"/partners\" component={VendorListView} />,\r\n      },\r\n      {\r\n        path: \"vendors/:vendorId\",\r\n        element: <PrivateRoute path=\"/partners\" component={SettingsView} />,\r\n      },\r\n      {\r\n        path: \"dashboard\",\r\n        element: <PrivateRoute path=\"/partners\" component={DashboardView} />,\r\n      },\r\n      {\r\n        path: \"services\",\r\n        element: <PrivateRoute path=\"/partners\" component={ServiceListView} />,\r\n      },\r\n      {\r\n        path: \"bookings\",\r\n        element: <PrivateRoute path=\"/partners\" component={BookingListView} />,\r\n      },\r\n      {\r\n        path: \"settings\",\r\n        element: <PrivateRoute path=\"/partners\" component={SettingsView} />,\r\n      },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/\",\r\n    element: <MainLayout />,\r\n    children: [\r\n      {\r\n        path: \"login\",\r\n        element: <AuthRoute path=\"/login\" component={LoginView} />,\r\n      },\r\n      { path: \"404\", element: <NotFoundView /> },\r\n      { path: \"/\", element: <Navigate to=\"/partners/dashboard\" /> },\r\n      { path: \"*\", element: <Navigate to=\"/404\" /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import \"react-perfect-scrollbar/dist/css/styles.css\";\nimport React, { useEffect } from \"react\";\nimport { useRoutes } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport axios from \"axios\";\n// redux\nimport { useDispatch } from \"react-redux\";\n\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport \"./mixins/chartjs\";\nimport theme from \"./theme\";\nimport routes from \"./routes\";\nimport { API_BASE_URL } from \"./constrants\";\nimport { loginAdmin } from \"./redux/admin/actions\";\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst App = () => {\n  const token = localStorage.getItem(\"token\");\n  const dispatch = useDispatch();\n  const routing = useRoutes(routes);\n\n  useEffect(() => {\n    if (!token) {\n      return;\n    }\n    dispatch(loginAdmin(token));\n  }, [token, dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { GET_USERS } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return { ...state, data: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { GET_VENDOR } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nconst vendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_VENDOR:\r\n      return { ...state, data: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default vendorReducer;\r\n","import { CLOSE_SERVICE_DIALOG, GET_SERVICE, OPEN_SERVICE_DIALOG } from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  dialogId: null,\r\n  isDialogOpen: false,\r\n};\r\n\r\nconst serviceReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_SERVICE:\r\n      return { ...state, data: payload };\r\n\r\n    case OPEN_SERVICE_DIALOG:\r\n      return { ...state, dialogId: payload, isDialogOpen: true };\r\n\r\n    case CLOSE_SERVICE_DIALOG:\r\n      return { ...state, dialogId: null, isDialogOpen: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default serviceReducer;\r\n","import {\r\n  CLOSE_BOOKING_DIALOG,\r\n  GET_BOOKING,\r\n  OPEN_BOOKING_DIALOG,\r\n  CLOSE_STAFF_ASSIGN_DIALOG,\r\n  OPEN_STAFF_ASSIGN_DIALOG,\r\n  ASSIGN_STAFF,\r\n} from \"./type\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  dialogId: null,\r\n  isDialogOpen: false,\r\n  isBookingDialogOpen: false,\r\n  bookingId: null,\r\n  vendorId: null,\r\n};\r\n\r\nconst bookingReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_BOOKING:\r\n      return { ...state, data: payload };\r\n\r\n    case OPEN_BOOKING_DIALOG:\r\n      return { ...state, dialogId: payload, isDialogOpen: true };\r\n\r\n    case CLOSE_BOOKING_DIALOG:\r\n      return { ...state, dialogId: null, isDialogOpen: false };\r\n\r\n    case OPEN_STAFF_ASSIGN_DIALOG:\r\n      return {\r\n        ...state,\r\n        bookingId: payload.bookingId,\r\n        vendorId: payload.vendorId,\r\n        isBookingDialogOpen: true,\r\n      };\r\n\r\n    case CLOSE_STAFF_ASSIGN_DIALOG:\r\n      return {\r\n        ...state,\r\n        bookingId: null,\r\n        isBookingDialogOpen: false,\r\n      };\r\n\r\n    case ASSIGN_STAFF:\r\n      console.log(payload);\r\n      return {\r\n        ...state,\r\n        data: state.data.map((item) =>\r\n          item._id === payload.bookingId\r\n            ? {\r\n                ...item,\r\n                profession: payload.bookingData.staffId,\r\n              }\r\n            : item\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookingReducer;\r\n","import axios from \"axios\";\r\n\r\nexport default function setToken(token) {\r\n  if (token) {\r\n    localStorage.setItem(\"token\", token);\r\n    return (axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`);\r\n  } else {\r\n    localStorage.removeItem(\"token\");\r\n    return delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n}\r\n","import { SET_ADMIN, UNSET_ADMIN } from \"./type\";\r\nimport setToken from \"../../utils/setToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  data: {},\r\n};\r\n\r\nconst adminReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_ADMIN:\r\n      // TODO: check later\r\n      // jwt_decode(payload.token);\r\n      setToken(payload);\r\n      return { ...state, isAuth: true };\r\n\r\n    case UNSET_ADMIN:\r\n      setToken();\r\n      return { ...state, data: {}, isAuth: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport userReducer from \"./user/reducer\";\r\nimport vendorReducer from \"./vendor/reducer\";\r\nimport serviceReducer from \"./service/reducer\";\r\nimport bookingReducer from \"./booking/reducer\";\r\nimport adminReducer from \"./admin/reducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  vendor: vendorReducer,\r\n  service: serviceReducer,\r\n  booking: bookingReducer,\r\n  admin: adminReducer,\r\n});\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}